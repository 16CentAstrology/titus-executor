// Code generated by go-bindata. DO NOT EDIT.
// sources:
// default.json (18.165kB)
// fuse-container.json (18.476kB)
// allow-perf-syscalls.json (18.364kB)

package seccomp

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _defaultJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x4b\x6f\x1b\x39\x12\xbe\xe7\x57\x08\x3a\x07\x0b\xbf\xd6\x63\xe7\xa6\x55\xbc\x1b\x63\xec\x38\x6b\x67\x31\x33\x58\x04\x04\xcd\xae\x6e\x71\xc5\x97\xf9\x90\x2d\x04\xf9\xef\x0b\x76\x4b\xb2\xe4\x2a\x76\x3c\x23\x67\xa2\x01\x72\x48\x6c\x7f\x1f\x1f\xc5\x22\x59\x55\x2c\xb2\x3f\xbf\x1a\x0c\x06\x43\xee\xc5\xe4\x92\xbb\xe1\x9b\xc1\x7f\xf3\xdf\x83\xc1\xe0\xf3\xe2\xe7\x92\x95\x11\x44\x4c\x1e\x86\x6f\x06\xc3\x9b\xf1\xe5\x07\x36\xba\x1e\xbf\x63\xbf\x9e\x1c\xb3\xe3\xa3\xe1\xeb\xb5\xc2\x21\xdd\x8e\xd6\xca\x87\xb5\x36\x17\x25\x36\xaa\xaf\xd7\x7d\x42\x1e\x1e\x0c\x1f\xb9\x4f\x8b\x5f\xbf\xbc\xfe\x5d\x02\x8e\xf2\xff\x5b\x48\x38\xba\xbe\xdc\x5e\x88\xcb\xf3\x0f\x37\x5b\xc8\x90\xab\x97\xd5\xd4\x35\xfe\xfe\x25\x94\xf5\xd8\xd4\xb7\x14\xf5\x65\xe4\x3c\xbb\xd8\x52\xa3\x67\x17\xfd\x82\xe6\x0e\x5e\x4c\xab\xcb\xc6\xbe\xb5\xc0\xdb\x4b\x7b\x73\x78\xba\xf7\xeb\x1f\x96\x33\xd7\xa6\x64\xc8\x3f\x3f\xb5\x8d\x0e\x2b\xa8\x79\x52\x71\x24\xa2\xb4\xe6\xb1\xef\xf1\x47\x76\x76\x7d\xfd\xfe\x6a\xb8\x51\xea\xcc\x7b\x63\xaf\x21\x0e\xdf\x0c\xf6\x3b\x22\xcc\x83\xe0\x4a\x85\x92\xa9\xc2\xcd\x8e\x2e\x2e\xae\x7e\xd9\x18\x91\x34\x42\xa5\xaa\x1d\xc9\xe7\xcd\x91\x08\xee\xf0\xf8\x32\x31\x1e\x7d\x60\x37\xbf\xdd\xb0\xd1\xdb\xcb\xf3\xf7\xc3\x0d\xfa\xd3\xe3\x5f\x5f\xd6\x7b\x31\x5c\x53\xca\xba\x75\xf5\xd3\x79\x14\xca\x1a\x20\xc1\xc3\xa7\x68\xcd\x8d\x8d\xb2\x9e\x33\x69\x64\x44\x64\x10\xd6\xd4\xb2\xc1\xb8\xb6\xc9\x10\xc5\xad\x03\x83\x51\x27\xc5\xf4\x29\xaa\xac\x9d\x26\xc7\x2a\x61\xed\x54\x22\x59\xc9\xe6\xb5\x9d\x01\x23\x99\xac\x19\x16\x2d\x9b\x70\x53\x29\x60\x1c\x15\xc8\x72\xb1\xe8\x01\x75\xe4\xc0\xd7\x0c\x66\x60\x22\xa3\x64\xbf\x4b\x36\x72\x11\xd5\x53\x3c\x40\xac\xac\xe6\xd2\xe4\x9e\x09\x72\x62\x43\x2c\x50\x26\x20\x70\x1e\x94\x45\x3a\x4e\xe4\x48\x3b\xf4\x00\xc1\x26\x4c\xb8\x87\x67\xef\xd6\xe7\x2c\xea\xc2\x72\xe3\x42\x80\x43\x72\x75\xe8\x11\x05\x07\x34\x60\x5e\xfd\x2f\x4a\x0d\x0f\x08\x57\xdc\xeb\xa7\xe0\xad\x34\x15\xc2\x3c\x5a\x4f\x82\xbb\x06\x90\x58\x79\xfb\x11\xe8\xa4\x92\x1e\x83\xda\xa2\x8e\xc4\xc4\xde\xa3\x45\xd1\x82\x87\x68\x0e\x84\xb2\x62\xca\x16\x63\xeb\x25\x8f\x91\x9e\x3a\xba\x81\x98\xcd\x61\x0f\xc7\xbe\x52\xbd\xdc\xf5\x82\x2c\xd5\x35\xdc\xd8\xa0\x00\xdc\x57\xe8\xb2\x00\x81\xea\x38\x00\xf3\xdc\x34\x98\xb2\xc6\x80\xc0\x13\x63\xdd\x9c\xd5\x52\x95\x6a\x79\xc0\x5b\xbb\x4a\x48\xe6\x2a\x39\x34\x3b\x55\x72\xc8\xf6\x81\xb3\x4a\xb1\xb6\x55\xd4\xd7\x3a\xb7\x5f\x20\xb1\x5d\x58\x11\xcc\x2a\xb4\x98\x3a\xd2\xdd\x73\x6c\x68\xd7\x28\x24\x79\xc7\x95\x6b\x65\x86\xec\x2e\x5b\xb5\xba\x04\xe3\x6e\x1e\x40\xcc\xb0\x1a\x5a\x14\x6b\x1d\x1e\x08\x71\x1e\x64\x64\x8d\xb7\x78\x42\xea\xce\x0e\xe0\x66\x56\x04\x12\xa7\xe6\xd5\x4c\x06\x62\xa9\xad\x08\x46\x71\x4a\x59\x41\xcc\xe6\xca\xcb\x69\x8e\x4d\x47\x4d\xda\x83\x9a\x34\x08\x1d\x4a\x0c\x84\xb4\x14\x75\xc1\x54\x74\x38\xd5\x8a\xc1\x6b\xaa\x05\x89\xb1\x56\x3c\xf2\x30\x37\x02\x11\x0d\xc4\x07\x1e\x23\x1e\x91\x92\xa1\xc4\x58\xec\xa1\x6b\x4b\xa8\xca\x43\xf6\xc2\x74\x23\xa1\xd4\x6f\x88\xc4\x50\x33\x48\x8c\x2a\xc3\x45\xa2\x46\xc6\x71\x01\x53\xe5\x29\xd5\x44\x9f\x0c\xb9\x3e\x96\x04\xd1\x50\x8a\xd8\x53\xb5\x60\xc1\x16\xd6\x29\xe3\xc4\x62\x6f\x20\x0a\x97\x28\xf4\x1e\xad\xb3\x06\x62\x05\x26\xa2\xf1\x2e\x71\xdc\x6d\x03\x11\x1a\x49\x35\x94\x61\xbc\x06\x33\x91\xe8\xf2\xa9\x50\x9e\x6e\xbe\xd4\x7a\x6b\x09\xa8\x01\x74\x04\x59\x47\x66\xd5\xa1\x05\xd4\x40\x74\x00\x9e\x0a\xa8\x32\x45\x8b\xe5\x1a\x8f\xec\x50\x86\xe9\xc2\x05\xd8\x4b\xeb\x65\x9c\x13\x94\xe7\xa6\xb2\x28\x58\xe9\xbc\x34\x2d\x50\x47\x90\xc3\xf6\x10\xe8\xa9\xe8\x08\xba\x8e\x92\x1a\xdb\xe0\x06\x22\xf3\xf6\x36\x85\xc8\xf2\x6e\xa7\xea\xa5\xc0\xb1\x6b\x6d\x20\x06\x52\x82\x60\xc5\xb4\xa0\xf8\x4c\x59\x1c\x0a\x66\x11\xe2\xc4\x03\xaf\x18\xf7\xc0\x09\x3a\x92\x3d\xe5\xa9\xb7\x75\xc5\x29\x6d\xd3\xda\x29\xa9\x86\xb4\x42\x72\xe1\x01\x78\x55\xb1\x7b\x1e\xc5\xa4\x54\x80\x3a\x08\xad\x73\x28\x1a\x58\x92\x5e\x17\x1a\xb6\x4c\x70\x23\x00\x59\x76\x69\x89\x10\x42\x5a\x56\x41\x88\xde\x22\x3d\x48\x9b\xa3\xb8\xd6\x7f\xa3\x6d\x25\x2d\x73\xcf\x23\x0b\x56\x4b\xda\xbc\xd8\x19\x11\x43\x2f\x18\x22\x8e\xee\x50\xec\xee\x33\x9e\x6e\x89\xd5\x29\x2d\x4b\x5e\x9a\x86\x81\x89\x78\x9b\xaf\x58\x0f\x8d\x0c\x7d\x05\xe8\x5e\x1d\xb2\xf7\x53\xa9\x90\x7e\x15\xe9\xa9\x55\xc1\x53\xab\xd2\x72\x52\xd2\xe0\x33\xad\x34\x53\x6c\xf6\xf3\x3e\xc4\x27\xcb\xa2\x2f\x56\x45\x86\x29\x15\x00\x70\xaf\x3d\x3e\x99\xae\x50\x72\xd4\x8a\x72\xd4\x8a\x76\xd4\xba\x0b\xc3\x10\x0c\xfa\x96\x7b\x2f\xf1\xe4\x69\xd0\x75\x55\x08\xb6\xb5\x34\xc2\x7a\x0c\x4f\x89\xb8\xac\x05\xb1\x98\x7a\x6a\x70\xb4\xd6\x82\x44\x59\x2a\xdc\x69\x41\x34\xff\x2d\xca\xf1\x2a\xd2\x9a\xa3\x05\x98\x31\xdc\x80\xf3\x36\x12\x47\x1d\x7d\x97\xf7\x5a\x80\x48\x4d\x84\xbe\x63\x9d\x4d\x21\x08\x2a\x4d\xa1\xef\xda\x5d\x5d\x79\x10\x20\x71\x10\xff\x84\x2e\x58\x80\x65\xa9\x00\xf8\xc0\xbd\xce\x95\xab\x27\x43\xed\x0a\xed\x81\x52\x56\x68\x08\xe3\xa7\x43\x43\x58\x20\x1d\x1a\x2f\x66\x04\x1a\x08\x49\xa9\xb8\x4f\x27\x43\x4e\x79\x07\x53\xd3\x9b\x0c\x21\x73\xf1\x90\x6c\xe0\x7e\x11\xb8\xa2\x3d\x6b\xe0\x3e\x80\x22\x16\x00\x35\x8f\x19\xa3\x93\x57\xc4\x09\xc9\xf1\x84\xf7\x9f\x93\x55\x5d\x91\x6b\xa4\x63\xda\x09\x0c\xb2\x31\x1c\x8d\xd9\x49\x47\x34\xe7\x00\x77\x6c\xb1\xc2\x5c\x11\x2c\x2c\x17\xe7\x89\xe9\x77\x39\x6a\xa0\xca\x02\xaf\xd0\xfc\x77\x28\x96\xae\x0b\x8c\x88\x56\xba\x79\x40\x17\x44\x4b\xbc\x24\xe8\xbd\x97\xd4\xb9\xa0\xc3\xb1\x54\x1d\x8c\xc4\xca\xc2\x52\x18\x9f\x14\x08\x6a\x2b\x2d\x71\xbc\x46\x48\x0d\x79\xc0\xbb\x26\x63\xb5\xc7\x91\x6b\xc6\xb5\x0e\x28\x0d\xb9\xc4\x0b\xda\x69\x69\xaa\x96\xe6\xae\xcb\xe4\x38\xde\xe0\x9c\x56\x8f\xcb\xf2\x40\x85\x9b\x1d\x4a\x8d\xbb\xc3\x09\x7d\x87\xc8\x7d\x64\x8b\xf4\x3e\xa2\x35\xe1\x5a\x7c\x80\x3b\x84\xc5\xbc\x5d\x16\x09\x53\x92\x73\x60\x2a\x69\xb0\x0a\x3a\xd2\x5b\xa1\x79\xc0\x33\xd9\xb2\x77\x09\x12\x48\x53\x5b\x9a\xf6\x10\x93\x2f\xf4\x1a\x52\x70\x84\xa1\xee\xc8\xd6\x56\x53\x19\xa3\x27\x74\x69\x52\x23\x8b\x4d\x9f\x78\x41\x4c\xa0\xca\xfe\x8b\xd7\x75\x0e\x89\x91\x9f\x7a\x2c\x40\xcc\xf0\x8a\x74\xdc\x73\xb4\x10\x57\x2c\x5b\x9e\xbe\x98\xe6\xe8\x00\x4e\x95\x92\x48\x55\xab\x52\xed\x2f\x49\xe1\xa8\xa4\x2b\xe1\x7d\xdb\x94\xcc\x51\xe9\x0c\x5b\x46\xb2\x50\x41\x77\x5d\xd9\xf0\x35\xd5\x14\x1c\xff\x8a\xec\x51\x4d\xf8\xea\x70\xe6\x12\x70\x3a\x30\x80\x10\x56\x23\xd7\x45\x3b\xa7\x00\x9a\xbc\xf5\xd0\x84\x77\x0e\xa0\x2d\xd1\xac\x6e\x57\x59\x1f\x53\xd2\x20\xb1\xac\x33\x96\xad\x49\x09\xa7\x5b\xa1\xec\x59\x8b\xd3\x70\xc4\xeb\x1c\x62\x4d\x9d\xe6\x97\x38\x3e\x2f\xb4\x0c\x71\x5a\x5d\xe2\x64\x0d\xba\x87\x52\xfb\x74\x5e\x25\x94\xf3\x2a\xa1\x94\x57\x09\x74\xf2\x24\x94\x13\x1f\x01\xa2\xa7\xb2\x4c\x4b\x9c\xec\x9c\xce\x88\x84\x72\x46\x24\x94\x32\x22\xa1\x9c\x11\x69\xa9\x52\x95\x62\x0d\x32\x87\x12\xfa\x73\x28\x81\x4c\x95\x84\x62\x3e\x24\xf4\xe7\x43\x5a\x5a\x56\x8c\x57\x95\x27\xee\xca\x02\x99\xfc\x08\x85\xe4\x47\xe9\x64\x17\x26\x1a\xfb\xce\x30\x21\x37\xf9\x44\x57\x54\x51\x6a\xe7\x4f\x52\xac\x88\xc3\x74\x76\x98\x2a\x86\xc8\x71\xc8\xdd\x85\x9e\xf8\x56\x62\x89\xe3\x7d\x5c\xf6\xa1\x45\x0f\x99\x27\x82\x90\xb6\x45\xa9\x60\xa0\x63\x1c\xc7\x11\x41\x70\x4a\x0a\x6c\x75\x88\x40\x9f\x3e\x25\xd3\x49\xeb\x52\xce\x3a\xe3\xd8\xd3\xcd\x35\x15\x0a\x2e\x60\x42\x10\xe2\xfc\x93\xb1\x9e\x7b\xb5\x4c\x13\x52\xce\x03\xe5\xfb\x23\xbe\x44\x8f\x0d\x95\x68\xa1\xee\x22\x5b\x33\x54\x48\x02\x74\x5c\x05\x0a\x4a\x5c\x03\xd1\xce\xc0\xfb\x84\x66\x7c\xc5\x97\x3b\x2d\x5e\x80\x76\x74\xe8\xab\x1b\x7a\xeb\x16\xd3\x1a\x4b\xb6\x4f\xae\x47\xba\xdc\x7a\x9f\x6c\x8f\x34\x5d\x1f\x4d\x6b\x24\xe7\xaa\x70\x2f\x52\xbe\x16\x49\xc5\x14\x74\xa2\xf6\x6a\xa2\x82\x7a\x3a\x5f\xd0\xa1\x78\x61\x27\x4a\x07\x2d\x68\x88\xcb\x96\x15\x51\x88\x32\x12\xa9\x9c\x19\x75\xe9\x35\xd3\xb4\x19\xc8\x11\x34\x6a\x37\x83\xd8\x5e\x67\x94\xb8\x62\x68\xcf\x8a\x24\x38\x7b\xd1\xa7\x1c\xe5\xf7\x49\x5a\x9a\x9f\xc1\x1b\x50\xb9\x85\xa3\xbf\x9d\xac\x75\xfb\x9c\xb7\x47\xd9\x34\x43\x08\x6c\xa6\x59\xe1\x8c\xbe\xe2\x0b\xc7\xe5\xe8\xb9\x78\xd9\x77\x2b\xdc\x37\x58\xd2\xcd\x61\x77\x3a\xa9\xe0\x61\xf8\x66\xb0\xf7\x1a\x51\xd6\xad\xba\xc8\xff\xce\xfe\x3d\xc4\x65\x66\x5c\x25\xc8\xd5\x37\x98\x2f\x6b\x03\x79\x8e\xfa\xc0\x07\x6b\xb8\xca\x91\xd6\x5f\x57\x05\x27\x3f\x54\xb0\x7f\xb8\xbf\xf7\xd3\xc1\x0f\x3d\x64\x3d\x9c\xfc\xd8\x12\x83\xa3\x83\xd3\xa3\xd3\xe3\x9f\x0e\x4e\xff\xbe\x8b\xba\x28\xbb\x03\xee\xc5\x84\x90\xa4\x15\xc6\x89\xe3\x23\x05\x5b\x3d\x55\x7d\x12\x87\xe2\xe3\xcb\x3d\x77\xc2\x9a\x08\x0f\xf1\xfb\x0f\x18\xbf\x45\x5c\xa0\x1b\xaf\xa2\x7f\xbf\x12\xb8\xd7\xac\xef\x11\x53\xe6\x9f\x11\xb0\xf7\xe9\xf1\xd6\x03\x9f\x3a\x2b\xf1\xfb\x51\xc1\xc5\x04\x6a\x95\x02\xba\xa5\x6e\xcf\xa1\x2a\xec\x80\xde\x35\xbe\x02\xc8\xf8\xc3\xc6\xdb\xf9\x3f\xa2\x77\x31\x61\xdd\xb5\xc3\x4e\x8f\x91\x40\x4f\x8e\xb7\x1a\xb9\xb6\x95\xac\xe7\x4c\x55\x3b\xb0\xab\xc2\xe1\xe9\x1e\x31\xc4\x0c\x3f\x6c\x67\x5b\x0e\x4f\xf7\x98\x13\x92\x69\x2d\x2d\xa3\xae\x5b\x36\x4b\x90\xb1\x77\x5b\xc4\x27\x93\x0f\x07\x4c\x9a\x10\xfd\x9f\xa4\xb1\xde\xef\x04\xde\x8e\xc6\xec\xfa\x6c\xf4\x96\xdd\x9c\x8d\xae\xc7\xef\xb6\x52\x53\xfb\x12\xfe\x76\xbe\xf6\x54\x7e\x07\x06\xf8\xe3\x43\x88\x1f\x1f\x42\xec\xee\x87\x10\x2f\x1e\x3a\x5e\x8e\x6e\x7e\x3e\x7b\xdb\x1f\x41\x1e\xec\xef\x1f\xed\x1d\xef\x1d\x9c\x3c\xef\x74\x05\x0f\xdf\xd6\x16\xa3\x30\xe2\x9b\xef\xe6\x6e\xeb\x7e\xc7\x79\xdc\xff\x1e\xf3\x28\xac\xd6\x60\x62\xee\x26\x4f\xc3\xa0\xbd\x07\x84\x08\x7e\x60\x7d\x05\x5e\x9a\x66\x50\x5b\x3f\x68\x95\x33\x90\x61\x50\xc9\xba\x06\x0f\x9b\xfb\xa3\x67\x35\xbc\xe4\xc4\xed\x96\xff\xdf\x76\xbd\xac\x7d\x2c\xb8\x28\x04\x8f\xdf\x0a\x1e\x9e\xfc\xf9\xea\xed\x1b\xe7\xe1\xae\x78\xed\x7f\x5c\x5d\x7d\xdc\x6a\x38\x1e\x6e\xad\xdd\x99\x20\x64\xfc\xee\x7a\xdb\x01\x89\x89\xdf\xa1\x01\x5d\x5e\xbd\xfd\xcf\xc5\xd9\x56\x03\xea\x6e\x64\x98\xb6\x55\xc2\x17\xf0\x39\x58\x2a\x50\xf5\x3a\xb7\x23\xea\xf8\x30\x1a\x8f\xb7\x9b\x5e\x2e\xc4\xce\x4c\xee\x87\x8f\xd7\xa3\xf1\x76\x93\x3b\x15\xf8\x49\x48\xf7\x52\xb0\x01\xe2\xe3\xb1\x65\x3e\xbf\xf0\xfa\x77\x17\xaf\x03\xb6\xd0\xef\xf5\xe8\x97\xf3\xab\xad\xd4\x2b\xad\x23\x1e\xf8\x3b\xf0\x7a\x57\xc6\xf8\xf1\xfc\x72\xbb\x15\x14\x7a\xbe\xdc\x08\xe5\xef\x51\x97\x77\x9a\xbb\xa2\x86\x8f\xbf\xb1\xf1\xd5\xfb\x7f\x9e\xff\x6b\x2b\x65\xcc\x26\xdc\x34\xc9\xed\xca\xa8\xde\x9f\x6f\x69\x1e\x1a\x88\x4c\x83\x76\x56\x49\x81\x1f\xa3\x53\x9f\x66\x87\x8d\x1a\xbb\xa1\x87\x8b\xab\xed\x66\x75\x71\x2e\x25\x06\xf3\xaa\xfd\xe3\xcb\xab\xff\x07\x00\x00\xff\xff\xad\x5b\x3f\x01\xf5\x46\x00\x00")

func defaultJsonBytes() ([]byte, error) {
	return bindataRead(
		_defaultJson,
		"default.json",
	)
}

func defaultJson() (*asset, error) {
	bytes, err := defaultJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.json", size: 18165, mode: os.FileMode(0664), modTime: time.Unix(1646705275, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0x4a, 0xbe, 0xf7, 0xad, 0x53, 0x58, 0x4f, 0x5c, 0x42, 0x7a, 0x35, 0x2b, 0x7c, 0x85, 0xd2, 0x6c, 0x8, 0xf1, 0xf, 0xda, 0x4a, 0x2, 0x87, 0x6, 0x15, 0x7a, 0x72, 0xbc, 0x46, 0xac, 0x30}}
	return a, nil
}

var _fuseContainerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdb\x6e\x1b\x39\xd2\xbe\xcf\x53\x08\xba\x0e\x7e\xf8\xf4\x7b\xec\xdc\x69\x15\xef\xc6\x18\x3b\xce\xda\x59\xcc\x0c\x16\x01\x41\xb3\xab\x5b\x5c\xf1\x64\x1e\x64\x0b\x41\xde\x7d\xc1\x6e\x49\x96\x5c\xc5\x8e\x33\x72\x26\x5a\x20\x17\x89\xed\xef\xe3\xa1\x58\x45\x56\x15\x0f\xfd\xf9\xd5\x60\x30\x18\x72\x2f\x26\x97\xdc\x0d\xdf\x0c\xfe\x9d\xff\x1e\x0c\x06\x9f\x17\x3f\x97\xac\x8c\x20\x62\xf2\x30\x7c\x33\x18\xde\x8c\x2f\x3f\xb0\xd1\xf5\xf8\x1d\xfb\xfd\xe4\x98\x1d\x1f\x0d\x5f\xaf\x15\x0e\xe9\x76\xb4\x56\x3e\xac\xb5\xb9\x28\xb1\x51\x7d\xbd\xee\x13\xf2\xf0\x60\xf8\xc8\x7d\x5a\xfc\xfa\xe5\xf5\x37\x09\x38\xca\xff\x6f\x21\xe1\xe8\xfa\x72\x7b\x21\x2e\xcf\x3f\xdc\x6c\x21\x43\xae\x5e\x56\x53\xd7\xf8\xfb\x97\x50\xd6\x63\x53\xdf\x53\xd4\x97\x91\xf3\xec\x62\x4b\x8d\x9e\x5d\xf4\x0b\x9a\x3b\x78\x31\xad\x2e\x1b\xfb\xde\x02\x6f\x2f\xed\xcd\xe1\xe9\xde\xef\x7f\x5a\xce\x5c\x9b\x92\x21\xff\xfc\xd4\x36\x3a\xac\xa0\xe6\x49\xc5\x91\x88\xd2\x9a\xc7\xbe\xc7\x1f\xd9\xd9\xf5\xf5\xfb\xab\xe1\x46\xa9\x33\xef\x8d\xbd\x86\x38\x7c\x33\xd8\xef\x88\x30\x0f\x82\x2b\x15\x4a\xae\x0a\x37\x3b\xba\xb8\xb8\xfa\x6d\x63\x44\x86\x6b\x6a\x18\x42\x59\x03\x4f\x75\x5c\x07\x61\x4d\x2d\x1b\x8c\x6b\x9b\x4c\xc4\xb0\x75\x60\x30\xea\xa4\x98\x3e\x45\xc9\x06\xb4\x9d\x01\x23\x99\xd4\x83\x1e\x20\xd8\x84\x09\xf7\xf0\xec\xf9\xf0\x1c\xb5\x49\x23\x54\xaa\x5a\xcd\x7d\x7e\xa2\x39\xee\xb0\x3e\x33\x31\x1e\x7d\x60\x37\x7f\xdc\xb0\xd1\xdb\xcb\xf3\xf7\xc3\x0d\xfa\xd3\xe3\x5f\x5f\x9e\x61\x9c\x5b\x57\x3f\x1d\x23\x69\xaf\x16\x3c\x44\x06\xe0\xc6\x46\x59\xcf\x99\x34\x92\xb0\xd9\x77\x33\xb1\xb2\x76\x9a\x1c\xab\x84\xb5\x53\x89\x64\xfd\xc6\x09\x90\x35\xc3\xa2\x65\x13\x6e\x2a\x05\x8c\xa3\x02\x59\x2e\x16\x3d\xa0\x8e\x1c\xf8\x9a\xc1\x0c\x4c\x64\x94\xec\x77\xc9\x46\x2e\xa2\x7a\x8a\x07\x88\x95\xd5\x5c\x9a\xdc\x33\x41\x4e\x6c\x88\x05\xca\x04\x04\xce\x83\xb2\x48\xc7\x3f\x7c\x52\x17\xa6\x1b\x17\x02\x1c\x92\xab\x43\x8f\x28\x38\xa0\x01\xf3\xea\x3f\x51\x6a\x78\x40\xb8\xe2\x5e\x3f\x05\x6f\xa5\xa9\x10\xe6\xd1\x7c\x12\xdc\x35\x80\xc4\xca\xcb\x8f\x40\x27\x95\xf4\x18\xd4\x16\x75\x24\x26\xf6\x1e\x4d\x8a\x16\x3c\x44\x36\x10\xca\x8a\x29\x5b\x8c\xad\x97\x3c\x46\x7a\xea\xe8\x06\x62\x8e\x22\x3d\x1c\xfb\x4a\xf5\x72\xd7\x0b\xb2\x54\xd7\x70\x63\x83\x02\x70\x5f\xa1\xcb\x02\x04\xaa\xe3\x00\xcc\x73\xd3\x60\xca\x1a\x03\x02\x1b\xc6\xba\x39\xab\xa5\x2a\xd5\xf2\x80\x97\x76\x95\x90\xcc\x55\x72\xc8\x3a\x55\x72\xc8\xf7\x81\xb3\x4a\xb1\xb6\x55\xd4\xd7\x3a\xb7\x5f\x20\xb1\x5f\x58\x11\xcc\x2a\x34\x99\x3a\xd2\xdd\x73\xec\x68\xd7\x28\x24\x79\xc7\x95\x6b\x65\x86\xec\x2e\x7b\xb5\xba\x04\xe3\x6e\x1e\x40\xcc\xb0\x1a\x5a\x14\x6b\x1d\x1e\x08\x71\x1e\x64\x64\x8d\xb7\xd8\x20\x75\xe7\x07\x70\x33\x2b\x02\x89\x53\xf3\x6a\x26\x03\x31\xd5\x56\x04\xa3\x38\xa5\xac\x20\xac\xb9\x8a\x72\x9a\x63\xd7\x51\x93\xfe\xa0\x26\x1d\x42\x87\x12\x03\x21\x3d\x45\x5d\x70\x15\x1d\x4e\xb5\x62\xf0\x9c\x6a\x41\x62\xac\x15\x8f\x3c\xcc\x8d\x40\x44\x03\xf1\x81\xc7\x88\x47\xa4\x64\x28\x31\x16\x47\xe8\xda\x12\xaa\xf2\x90\xa3\x30\xdd\x48\x28\xf5\x1b\x22\x31\xd4\x0c\x12\xa3\xca\x70\x91\xa8\x91\x73\x5c\xc0\x54\x79\x4a\x35\xd1\x27\x43\xce\x8f\x25\x41\x34\x94\x22\x8e\x54\x2d\x58\xf0\x85\x75\xca\x38\x31\xd9\x1b\x88\xc2\x25\x0a\xbd\x47\xf3\xac\x81\x58\x81\x89\x68\xbc\x4b\x1c\x77\xdb\x40\x84\x46\x52\x0d\x65\x18\xcf\xc1\x4c\x24\xba\x7c\x2a\x94\xa7\x9b\x2f\xb5\xde\x7a\x02\x6a\x00\x1d\x41\xd6\x91\x59\x75\x68\x02\x35\x10\x1d\x80\xa7\x12\xaa\x4c\xd1\x62\xb9\xc6\x23\x3f\x94\x61\xba\x70\x01\xf6\xd2\x7a\x19\xe7\x04\xe5\xb9\xa9\x2c\x4a\x56\xba\x28\x4d\x0b\xd4\x11\xe4\xb0\x3d\x04\xda\x14\x1d\x41\xd7\x51\x52\x63\x1f\xdc\x40\x64\xde\xde\xa6\x10\x59\x5e\xed\x54\xbd\x14\x38\x0e\xad\x0d\xc4\x40\x4a\x10\xac\x98\x16\x14\x9f\x29\x8b\x53\xc1\x2c\x42\x9c\x78\xe0\x15\xe3\x1e\x38\x41\x47\xb2\xa7\x6c\x7a\x5b\x57\x9c\xd2\x36\xad\x9d\x92\x6a\x48\x2f\x24\x17\x11\x80\x57\x15\xbb\xe7\x51\x4c\x4a\x05\xa8\x8d\xd0\x3a\x87\xb2\x81\x25\xe9\x75\xa1\x61\xcb\x04\x37\x02\x90\x67\x97\x96\x48\x21\xa4\x65\x15\x84\xe8\x2d\xd2\x83\xb4\x39\x8b\x6b\xe3\x37\x5a\x56\xd2\x32\xf7\x3c\xb2\xe0\xb5\xa4\xcd\x93\x9d\x11\x39\xf4\x82\x21\xf2\xe8\x0e\xc5\xe1\x3e\xe3\xe9\x96\x98\x9d\xd2\xb2\xe4\xa5\x69\x18\x98\x88\x97\xf9\x8a\xf5\xd0\xc8\xd0\x57\x80\xee\xd5\x21\x7f\x3f\x95\x0a\xe9\x57\x91\x91\x5a\x15\x22\xb5\x2a\x4d\x27\x25\x0d\xde\xd3\x4a\x33\xc5\x6e\x3f\xaf\x43\xbc\xb3\x2c\xc6\x62\x55\x64\x98\x52\x01\x00\xf7\xda\x13\x93\xe9\x0a\xa5\x40\xad\xa8\x40\xad\xe8\x40\xad\xbb\x34\x0c\xc1\xa0\x6f\xb9\xf7\x12\x1b\x4f\x83\xae\xab\x42\xb2\xad\xa5\x11\xd6\x63\x78\x4a\xe4\x65\x2d\x88\xc5\xd4\x53\x83\xb3\xb5\x16\x24\xca\x52\xe9\x4e\x0b\x22\xfb\xb7\x28\xc7\xb3\x48\x6b\x8e\x26\x60\xc6\x70\x03\xce\xdb\x48\x6c\x75\xf4\x5d\x5e\x6b\x01\x22\x65\x08\x7d\xc7\x3a\x9f\x42\x10\xd4\x31\x85\xbe\x6b\x57\x75\xe5\x41\x80\xc4\x49\xfc\x13\xba\xe0\x01\x96\xa5\x02\xe0\x0d\xf7\x3a\x57\xae\x9e\x0c\xb5\x2a\xb4\x07\x4a\x59\xa1\x21\x9c\x9f\x0e\x0d\xe1\x81\x74\x68\xbc\x98\x11\x68\x20\x24\xa5\xf2\x3e\x9d\x0c\x69\xf2\x0e\xa6\xcc\x9b\x0c\x21\x73\x71\x93\x6c\xe0\x7e\x91\xb8\xa2\x35\x6b\xe0\x3e\x80\x22\x26\x00\x65\xc7\x8c\xd1\x87\x57\xc4\x0e\xc9\xf1\x84\xd7\x9f\x93\x55\x5d\x91\x73\xa4\x63\x5a\x03\x06\xd9\x18\x8e\xc6\xec\xa4\x23\x9a\x73\x80\x3b\xb6\x58\x61\xae\x08\x16\xa6\x8b\xf3\x84\xf9\x5d\xce\x1a\xa8\xb2\xc0\x2b\x64\xff\x0e\xc5\xd2\x75\x89\x11\xd1\x4a\x67\x07\x74\xaf\xb6\xc4\x4b\x82\xde\x7b\x49\xed\x0b\x3a\x1c\x4b\xd5\xc1\x48\xac\x2c\x2c\x85\xf1\x49\x81\xa0\x96\xd2\x12\xc7\x73\x84\xd4\x90\x07\xbc\x6a\x32\x56\x7b\x9c\xb9\x66\x5c\xeb\x80\x8e\x21\x97\x78\x41\x3b\x2d\x4d\xd5\xd2\xdc\x75\x27\x39\x8e\x37\xf8\x4c\xab\x27\x64\x79\xa0\xd2\xcd\x0e\xa5\xc6\xdd\xe1\x84\xbe\x43\xe4\x3e\xb2\xc5\xad\x08\xa2\x35\x11\x5a\x7c\x80\x3b\x84\xc5\xbc\x5c\x16\x07\xa6\x24\xe7\xc0\x54\xd2\x60\x15\x74\xa4\xb7\x42\xf3\x80\x2d\xd9\xb2\x77\x09\x12\x48\x53\x5b\x9a\xf6\x10\x93\x2f\xf4\x1a\x52\x70\x84\xa3\xee\xc8\xd6\x57\x53\x27\x46\x4f\xe8\x92\x51\x23\x8b\x4d\x9f\x78\x41\x4c\xa0\xca\xf1\x8b\xd7\x75\x4e\x89\x51\x9c\x7a\x2c\x40\x58\x78\x45\x3a\xee\x39\x9a\x88\x2b\x96\x2d\x77\x5f\x4c\x73\xb4\x01\xa7\x4a\x49\xa4\xaa\x55\xa9\xf6\x97\xa4\x70\x56\xd2\x95\xf0\xbe\x6d\x4a\xe6\xac\x74\x86\x3d\x23\x59\xa8\xa0\xbb\xae\x6c\xf8\x9a\x6a\x0a\x81\x7f\x45\xf6\xa8\x26\x7c\x75\x38\x73\x09\xf8\x38\x30\x80\x10\x56\xa3\xd0\x45\x07\xa7\x00\x9a\xbc\xf5\xd0\x44\x74\x0e\xa0\x2d\xd1\xac\x6e\x67\x59\x1f\x53\xd2\x20\x31\xad\x33\x96\xbd\x49\x09\xa7\x5b\xa1\xfc\x59\x8b\xd3\x70\xc4\xf3\x1c\x62\x4d\xed\xe6\x97\x38\xde\x2f\xb4\x0c\xb1\x5b\x5d\xe2\x64\x0d\xba\x87\x52\xfb\xf4\xb9\x4a\x28\x9f\xab\x84\xd2\xb9\x4a\xa0\x0f\x4f\x42\xf9\xe0\x23\x40\xf4\xd4\x29\xd3\x12\x27\x3b\xa7\x4f\x44\x42\xf9\x44\x24\x94\x4e\x44\x42\xf9\x44\xa4\xa5\x4a\x55\x8a\x35\xc8\x33\x94\xd0\x7f\x86\x12\xc8\xa3\x92\x50\x3c\x0f\x09\xfd\xe7\x21\x2d\x2d\x2b\xc6\xab\xca\x13\x77\x65\x81\x3c\xfc\x08\x85\xc3\x8f\xd2\xce\x2e\x4c\x34\x8e\x9d\x61\x42\x2e\xf2\x89\xae\xa8\xa2\xd4\xca\x9f\xa4\x58\x11\x9b\xe9\x1c\x30\x55\x0c\x91\xe3\x94\xbb\x4b\x3d\xf1\xad\xc4\x12\xc7\xeb\xb8\x1c\x43\x8b\x11\x32\x1b\x82\x90\xb6\x45\xa9\x64\xa0\x63\x1c\xc7\x19\x41\x70\x4a\x0a\xec\x75\x88\x44\x9f\xde\x25\xd3\x87\xd6\xa5\x33\xeb\x8c\xe3\x48\x37\xd7\x54\x2a\xb8\x80\x09\x41\x88\xfd\x4f\xc6\x7a\xee\xd5\x32\x4d\x48\x39\x0f\x54\xec\x8f\xf8\x12\x3d\x36\xd4\x41\x0b\x75\x17\xd9\xba\xa1\xc2\x21\x40\xc7\x55\xa0\xa0\xc4\x35\x10\xed\x0c\xbc\x4f\xc8\xe2\x2b\xbe\xdc\x69\xf1\x02\xb4\xa3\x43\x5f\xdd\xd0\x5b\xb7\x78\xac\xb1\x64\xfb\xe4\x7a\xa4\xcb\xad\xf7\xc9\xf6\x48\xd3\xf5\x91\x59\x23\x69\xab\xc2\xbd\x48\xf9\x5a\x24\x15\x8f\xa0\x13\xb5\x56\x13\x95\xd4\xd3\xe7\x05\x1d\x8a\x27\x76\xa2\x74\xd0\x82\x86\xb8\x6c\x59\x11\x85\x2c\x23\x91\xca\x99\x51\x97\x5e\x33\x4d\xbb\x81\x9c\x41\xa3\x76\x33\x88\xfd\x75\x46\x89\x2b\x86\x76\xaf\x48\x82\xb3\xbf\xe8\x7d\x92\x96\xe6\x57\xf0\x06\x54\x6e\xe1\xe8\xff\x4e\xd6\xba\x7d\xce\xdb\xa3\xec\x9a\x21\x04\x36\xd3\xac\xb0\x47\x5f\xf1\x85\xed\x72\xf4\x5c\xbc\xec\xbb\x15\xee\x1b\x2c\xe9\xe6\xb0\x3b\x9d\x54\xf0\x30\x7c\x33\xd8\x7b\x8d\x28\xeb\x56\x5d\xe4\x7f\x67\xff\x1c\xe2\x32\x33\xae\x12\xe4\xea\x1b\xcc\x97\xb5\x81\x3c\x47\x7d\xe0\x83\x35\x5c\xe5\x4c\xeb\x7f\x57\x05\x27\x3f\x55\xb0\x7f\xb8\xbf\xf7\xcb\xc1\x4f\x3d\x64\x3d\x9c\xfc\x5c\x12\x83\xa3\x83\xd3\xa3\xd3\xe3\x5f\x0e\x4e\xff\x7f\x17\x75\x51\x0e\x07\xdc\x8b\x09\x21\x49\x2b\x8c\x13\xc7\x47\x0a\xb6\x7a\xaa\xfa\x24\x0f\xc5\xdb\x97\x7b\xee\x84\x35\x11\x1e\xe2\x8f\x1f\x30\x7e\x8b\xb8\x40\x37\x1e\x93\x7f\xbb\x12\xb8\xd7\xac\xef\x11\x53\xe6\x9f\x91\xb0\xf7\xe9\xf1\xd6\x03\x9f\x3a\x2b\xf1\xfb\x51\xc1\xc5\x04\x6a\x95\x02\xba\xa5\x6e\xf7\xa1\x2a\xec\x80\xde\x35\xbe\x02\xc8\xf8\xc3\xc6\x27\x07\x7f\x46\xef\x62\xc2\xba\x6b\x87\x9d\x1e\x23\x81\x9e\x1c\x6f\x35\x72\x6d\x2b\x59\xcf\x99\xaa\x76\x60\x55\x85\xc3\xd3\x3d\x62\x88\x19\x7e\xd8\xce\xb7\x1c\x9e\xee\x31\x27\x24\xd3\x5a\x5a\x46\x5d\xb7\x6c\x96\x20\x73\xef\xb6\x88\x4f\x26\x6f\x0e\x98\x34\x21\xfa\x5d\xf8\x4e\xe0\xed\x68\xcc\xae\xcf\x46\x6f\xd9\xcd\xd9\xe8\x7a\xfc\x6e\x2b\x35\xb5\x2f\xe1\x6f\xe7\x6b\x4f\xe5\x77\x60\x80\x3f\x3f\x84\xf8\xf9\x21\xc4\xee\x7e\x08\xf1\xe2\xa9\xe3\xe5\xe8\xe6\xd7\xb3\xb7\xfd\x19\xe4\xc1\xfe\xfe\xd1\xde\xf1\xde\xc1\xc9\xf3\x76\x57\xf0\xf0\x7d\x7d\x31\x4a\x23\xbe\xfb\x6a\xee\x96\xee\x0f\xb4\xe3\xfe\x8f\xb0\xa3\xb0\x5a\x83\x89\xb9\x9b\x6c\x86\x41\x7b\x0f\x08\x11\xfc\xc0\xfa\x0a\xbc\x34\xcd\xa0\xb6\x7e\xd0\x2a\x67\x20\xc3\xa0\x92\x75\x0d\x1e\x36\xd7\x47\xcf\x6c\x78\x49\xc3\xed\x56\xfc\xdf\x76\xbe\xac\x7d\x63\xb9\x28\x04\x8f\x9f\x58\x1e\x9e\xfc\xf5\xea\xed\x1b\xe7\xe1\xae\x44\xed\xbf\x5d\x5d\x7d\xdc\x6a\x38\x1e\x6e\xad\xdd\x99\x24\x64\xfc\xee\x7a\xdb\x01\x89\x89\xdf\xa1\x01\x5d\x5e\xbd\xfd\xd7\xc5\xd9\x56\x03\xea\x6e\x64\x98\xb6\x55\xc2\x17\xf0\x39\x59\x2a\x50\xf5\x3a\xb7\x23\xea\xf8\x30\x1a\x8f\xb7\x33\x2f\x17\x62\x67\x8c\xfb\xe1\xe3\xf5\x68\xbc\x9d\x71\xa7\x02\x3f\x09\xe9\x5e\x0a\x36\x40\x7c\x3c\xb6\x3c\xcf\x2f\xbc\xfe\xdd\xc5\xeb\x80\x2d\xf4\x7b\x3d\xfa\xed\xfc\x6a\x2b\xf5\x4a\xeb\x88\x07\xfe\x0e\xbc\xde\x95\x31\x7e\x3c\xbf\xdc\x6e\x06\x85\x9e\x2f\x37\x42\xf9\x7b\xd4\xe5\x9d\xe6\xae\xa8\xe1\xe3\x1f\x6c\x7c\xf5\xfe\xef\xe7\xff\xd8\x4a\x19\xb3\x09\x37\x4d\x72\xbb\x32\xaa\xf7\xe7\x5b\xba\x87\x06\x22\xd3\xa0\x9d\x55\x52\xe0\xc7\xe8\xd4\xa7\xd9\x61\xa3\xc6\x6e\xe8\xe1\xe2\x6a\x3b\xab\x2e\xf6\xa5\xc4\x60\x5e\xb5\x7f\x7c\x79\xf5\xdf\x00\x00\x00\xff\xff\x81\x73\x31\x34\x2c\x48\x00\x00")

func fuseContainerJsonBytes() ([]byte, error) {
	return bindataRead(
		_fuseContainerJson,
		"fuse-container.json",
	)
}

func fuseContainerJson() (*asset, error) {
	bytes, err := fuseContainerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fuse-container.json", size: 18476, mode: os.FileMode(0664), modTime: time.Unix(1646705275, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x69, 0x3a, 0x3b, 0x7, 0x8f, 0x8, 0xda, 0x41, 0x96, 0xa8, 0x87, 0x39, 0x86, 0xef, 0x6e, 0x67, 0xf, 0x4b, 0x8b, 0x79, 0x86, 0xe7, 0xd8, 0x4b, 0x6e, 0xbc, 0xc9, 0xb5, 0x47, 0x20, 0x3a, 0x6a}}
	return a, nil
}

var _allowPerfSyscallsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x4b\x6f\x1b\x39\x12\xbe\xe7\x57\x08\x3a\x07\x0b\xbf\xd6\x63\xe7\xa6\x75\xbc\x1b\x63\xec\x38\x6b\x67\x31\x33\x58\x04\x04\xcd\xae\x6e\x71\xc5\x97\xf9\x90\x2d\x04\xf9\xef\x0b\x76\x4b\xb2\xa4\x2a\x76\x3c\x23\x67\xa2\x01\x72\x48\x6c\x7f\x1f\x1f\xc5\x2a\xb2\x58\x2c\xb2\x3f\xbf\x1a\x0c\x06\x43\xee\xc5\xf8\x8a\xbb\xe1\x9b\xc1\x7f\xf3\xdf\x83\xc1\xe0\xf3\xfc\xe7\x82\x95\x11\x44\x4c\x1e\x86\x6f\x06\xc3\xdb\xb3\xab\x0f\x6c\x74\x73\xf6\x8e\xfd\x7a\x72\xcc\x8e\x8f\x86\xaf\x57\x0a\x87\x74\x37\x5a\x29\x1f\x56\xda\x9c\x97\x58\xab\xbe\x5a\x77\x83\x3c\x3c\x18\x3e\x71\x9f\xe6\xbf\x7e\x79\xfd\xbb\x04\x1c\xe5\xff\xb7\x90\x70\x74\x73\xb5\xbd\x10\x57\x17\x1f\x6e\xb7\x90\x21\x57\x2f\xab\xa9\x6b\xfc\xfd\x4b\x28\xeb\xa9\xa9\x6f\x29\xea\xcb\xc8\x79\x7e\xb9\xa5\x46\xcf\x2f\xfb\x05\xcd\x1d\xbc\x98\x56\x17\x8d\x7d\x6b\x81\xb7\x97\xf6\xf6\xf0\x74\xef\xd7\x3f\x2c\x67\xae\x4d\xc9\x90\x7f\x7e\x6a\x1b\x1d\x56\x50\xf3\xa4\xe2\x48\x44\x69\xcd\x53\xdf\x67\x1f\xd9\xf9\xcd\xcd\xfb\xeb\xe1\x5a\xa9\x73\xef\x8d\xbd\x81\x38\x7c\x33\xd8\xef\x88\x30\x0b\x82\x2b\x15\x0a\xae\x4a\x1a\xa1\x52\xd5\x0a\xf9\x79\x5d\x48\xc1\x1d\x16\x3d\x13\x67\xa3\x0f\xec\xf6\xb7\x5b\x36\x7a\x7b\x75\xf1\x7e\xb8\x46\x7f\x7a\xfa\xeb\xcb\xaa\x4a\x0c\xd7\x94\x1e\xee\x5c\xbd\x69\x22\x07\xbe\x66\x30\x05\x13\x99\x75\x60\x9e\x6d\x1f\xac\x9d\xd1\xe5\xe5\xf5\x2f\x6b\x86\xd9\xb5\xb1\x0a\x65\x0d\x90\xe0\xe1\x26\x5a\x73\x63\xa3\xac\x67\x4c\x1a\x19\x11\x19\x84\x35\xb5\x6c\x30\xae\x6d\x32\x44\xf1\x56\xb3\x08\x75\x52\x4c\x36\x51\x65\xed\x24\x39\x56\x09\x6b\x27\x12\xc9\x4a\x36\xaf\xed\x14\x18\xc9\x64\xcd\xb0\x68\xd9\x98\x9b\x4a\x01\xe3\xa8\x40\x96\x8b\x45\x0f\xa8\xa3\xcd\x59\xb1\x41\xdf\x27\x1b\xb9\x88\x6a\x13\x0f\x10\x2b\xab\xb9\x34\xb9\x67\x82\x1c\xdb\x10\x0b\x94\x09\x08\x9c\x05\x65\x91\x8e\x13\x39\xd2\x0e\x3d\x40\xb0\x09\x63\xee\xe1\x45\x27\x75\x61\xba\x71\x21\xc0\x21\xb9\x3a\xf4\x88\x82\x03\x1a\x30\xaf\xfe\x17\xa5\x86\x47\x84\x2b\xee\xf5\x26\x78\x27\x4d\x85\x30\x8f\xe6\x93\xe0\xae\x01\x24\x56\x5e\x7e\x04\x3a\xae\xa4\xc7\xa0\xb6\xa8\x23\x31\xb6\x0f\x68\x52\xb4\xe0\x21\xb2\x81\x50\x56\x4c\xd8\x7c\x6c\xbd\xe4\x31\xd2\x53\x47\x37\x10\xb3\x57\xef\xe1\xd8\x57\xaa\x97\xbb\x9e\x93\xa5\xba\x86\x1b\x1b\x14\x80\xfb\x0a\x5d\x16\x20\x50\x1d\x07\x60\x9e\x9b\x06\x53\xd6\x18\x10\xd8\x30\xd6\xcd\x58\x2d\x55\xa9\x96\x07\xbc\xb4\xab\x84\x64\xae\x92\x43\xd6\xa9\x92\x43\xbe\x0f\x9c\x55\x8a\xb5\xad\xa2\xbe\x56\xb9\xfd\x02\x89\xfd\xc2\x92\x60\x56\xa1\xc9\xd4\x91\xee\x81\x63\x47\xbb\x42\x21\xc9\x3b\xae\x5c\x2b\x33\x64\x77\xd9\xab\xd5\x25\x18\x77\xf3\x08\x62\x8a\xd5\xd0\xa2\x58\xeb\xf0\x48\x88\xf3\x28\x23\x6b\xbc\xc5\x06\xa9\x3b\x3f\x80\x9b\x59\x12\x48\x9c\x9a\x57\x53\x19\x88\xa9\xb6\x24\x18\xc5\x29\x65\x05\x61\xcd\xe5\x2e\xa7\x39\x76\x1d\x35\xe9\x0f\x6a\xd2\x21\x74\x28\x31\x10\xd2\x53\xd4\x05\x57\xd1\xe1\x54\x2b\x06\xcf\xa9\x16\x24\xc6\x5a\xf1\xc8\xc3\xcc\x08\x44\x34\x10\x1f\x79\x8c\x78\x44\x4a\x86\x12\x63\xf1\x0e\x5d\x5b\x42\x55\x1e\xf2\x2e\x4c\x37\x12\x4a\xfd\x86\x48\x0c\x35\x83\xc4\xa8\x32\x5c\x24\x6a\xe4\x1c\xe7\x30\x55\x9e\x52\x4d\xf4\xc9\x90\xf3\x63\x41\x10\x0d\xa5\x88\x77\xaa\x16\x2c\xf8\xc2\x3a\x65\x9c\x98\xec\x0d\x44\xe1\x12\x85\x3e\xa0\x79\xd6\x40\xac\xc0\x44\x34\xde\x05\x8e\xbb\x6d\x20\x42\x23\xa9\x86\x32\x8c\xe7\x60\x26\x12\x5d\x3e\x15\xca\xd3\xcd\x97\x5a\x6f\x3d\x01\x35\x80\x8e\x20\xeb\xc8\xac\x3a\x34\x81\x1a\x88\x0e\xc0\x53\x01\x55\xa6\x68\xb1\x5c\xe3\x91\x1f\xca\x30\x5d\xb8\x00\x7b\x69\xbd\x8c\x33\x82\xf2\xdc\x54\x16\x05\x2b\xdd\x2e\x4d\x0b\xd4\x11\xe4\xb0\x3d\x04\xda\x14\x1d\x41\xd7\x51\x52\x63\x1f\xdc\x40\x64\xde\xde\xa5\x10\x59\x5e\xed\x54\xbd\x14\x38\xde\x5a\x1b\x88\x81\x94\x20\x58\x31\x29\x28\x3e\x53\x16\x87\x82\x59\x84\x38\xf6\xc0\x2b\xc6\x3d\x70\x82\x8e\x64\x4f\xd9\xf4\xb6\xae\x38\xa5\x6d\x5a\x3b\x25\xd5\x90\x5e\x48\xce\x77\x00\x5e\x55\xec\x81\x47\x31\x2e\x15\xa0\x0e\x42\xab\x1c\x8a\x06\x16\xa4\xd7\x85\x86\x2d\x13\xdc\x08\x40\x9e\x5d\x5a\x22\x84\x90\x96\x55\x10\xa2\xb7\x48\x0f\xd2\xe6\x28\xae\xdd\xbf\xd1\xb2\x92\x96\xb9\xe7\x91\x05\xaf\x25\x6d\x9e\xec\x8c\x88\xa1\xe7\x0c\x11\x47\x77\x28\xde\xee\x33\x9e\xee\x88\xd9\x29\x2d\x4b\x5e\x9a\x86\x81\x89\x78\x99\x2f\x59\x0f\x8d\x0c\x7d\x05\xe8\x5e\x1d\xf2\xf7\x13\xa9\x90\x7e\x15\xb9\x53\xab\xc2\x4e\xad\x4a\xd3\x49\x49\x83\xcf\xb4\xd2\x4c\xb0\xdb\xcf\xeb\x10\x9f\x2c\x8b\x7b\xb1\x2a\x32\x4c\xa9\x00\x80\x7b\xed\xd9\x93\xe9\x0a\xa5\x8d\x5a\x51\x1b\xb5\xa2\x37\x6a\xdd\x85\x61\x08\x06\x7d\xc7\xbd\x97\xd8\x78\x1a\x74\x5d\x15\x82\x6d\x2d\x8d\xb0\x1e\xc3\x13\x22\x2e\x6b\x41\x2c\xa6\x9e\x18\x1c\xad\xb5\x20\x51\x96\x0a\x77\x5a\x10\xd9\xbf\x45\x39\x9e\x45\x5a\x73\x34\x01\x33\x86\x1b\x70\xde\x46\xe2\xa8\xa3\xef\xf3\x5a\x0b\x10\x29\x43\xe8\x7b\xd6\xf9\x14\x82\xa0\xd2\x14\xfa\xbe\x5d\xd5\x95\x07\x01\x12\x07\xf1\x1b\x74\xc1\x03\x2c\x4a\x05\xc0\x07\xee\x55\xae\x5c\x3d\x19\x6a\x55\x68\x0f\x94\xb2\x42\x43\x38\x3f\x1d\x1a\xc2\x03\xe9\xd0\x78\x31\x25\xd0\x40\x48\x4a\xc5\x7d\x3a\x19\xd2\xe4\x1d\x4c\x99\x37\x19\x42\xe6\xe2\x21\xd9\xc0\xc3\x3c\x70\x45\x6b\xd6\xc0\x43\x00\x45\x4c\x00\xca\x8e\x19\xa3\x93\x57\xc4\x09\xc9\xf1\x84\xd7\x9f\x93\x55\x5d\x91\x73\xa4\x63\x5a\x03\x06\xd9\x18\x8e\xc6\xec\xa4\x23\x9a\x73\x80\x3b\xb6\x58\x61\xae\x08\x16\xa6\x8b\xf3\x84\xf9\x5d\x8e\x1a\xa8\xb2\xc0\x2b\x64\xff\x0e\xc5\xd2\x75\x81\x11\xd1\x4a\x67\x07\x74\xcf\xb5\xc0\x4b\x82\x3e\x78\x49\x9d\x0b\x3a\x1c\x4b\xd5\xc1\x48\xac\x2c\x2c\x85\xf1\x71\x81\xa0\x96\xd2\x02\xc7\x73\x84\xd4\x90\x07\xbc\x6a\x32\x56\x7b\x1c\xb9\x66\x5c\xeb\x80\xd2\x90\x0b\xbc\xa0\x9d\x96\xa6\x6a\x69\xee\xba\x4c\x8e\xe3\x0d\xce\x69\xf5\x6c\x59\x1e\xa8\x70\xb3\x43\xa9\x71\x77\x38\xa1\xef\x10\xb9\x8f\x6c\x7e\x4b\x81\x68\x4d\x6c\x2d\x3e\xc0\x3d\xc2\x62\x5e\x2e\xf3\x84\x29\xc9\x39\x30\x95\x34\x58\x05\x1d\xe9\xad\xd0\x3c\x60\x4b\xb6\xec\x7d\x82\x04\xd2\xd4\x96\xa6\x3d\xc4\xe4\x0b\xbd\x86\x14\x1c\xe1\xa8\x3b\xb2\xf5\xd5\x54\xc6\x68\x83\x2e\x19\x35\xb2\xd8\xf4\x89\x17\xc4\x18\xaa\xbc\x7f\xf1\xba\xce\x21\x31\xda\xa7\x9e\x0a\x10\x16\x5e\x92\x8e\x7b\x8e\x26\xe2\x92\x65\x8b\xd3\x17\xd3\x1c\x1d\xc0\xa9\x52\x12\xa9\x6a\x59\xaa\xfd\x25\x29\x1c\x95\x74\x25\xbc\x6f\x9b\x92\x39\x2a\x9d\x62\xcf\x48\x16\x2a\xe8\xae\x2b\x1b\xbe\xa6\x9a\xc2\xc6\xbf\x24\x7b\x54\x13\xbe\x3a\x9c\x99\x04\x9c\x0e\x0c\x20\x84\xd5\x68\xeb\xa2\x37\xa7\x00\x9a\xbc\xf5\xd0\xc4\xee\x1c\x40\x5b\xa2\x59\xdd\xce\xb2\x3e\xa6\xa4\x41\x62\x5a\x67\x2c\x7b\x93\x12\x4e\xb7\x42\xf9\xb3\x16\xa7\xe1\x88\xe7\x39\xc4\x9a\x3a\xcd\x2f\x70\x7c\x5e\x68\x19\xe2\xb4\xba\xc0\xc9\x1a\x74\x0f\xa5\xf6\xe9\xbc\x4a\x28\xe7\x55\x42\x29\xaf\x12\xe8\xe4\x49\x28\x27\x3e\x02\x44\x4f\x65\x99\x16\x38\xd9\x39\x9d\x11\x09\xe5\x8c\x48\x28\x65\x44\x42\x39\x23\xd2\x52\xa5\x2a\xc5\x1a\x64\x0e\x25\xf4\xe7\x50\x02\x99\x2a\x09\xc5\x7c\x48\xe8\xcf\x87\xb4\xb4\xac\x18\xaf\x2a\x4f\xdc\x95\x05\x32\xf9\x11\x0a\xc9\x8f\xd2\xc9\x2e\x8c\x35\xde\x3b\xc3\x98\x5c\xe4\x63\x5d\x51\x45\xa9\x95\x3f\x4e\xb1\x22\x0e\xd3\x79\xc3\x54\x31\x44\x8e\x43\xee\x2e\xf4\xc4\xb7\x12\x0b\x1c\xaf\xe3\xf2\x1e\x5a\xdc\x21\xb3\x21\x08\x69\x5b\x94\x0a\x06\x3a\xc6\x71\x1c\x11\x04\xa7\xa4\xc0\x5e\x87\x08\xf4\xe9\x53\x32\x9d\xb4\x2e\xe5\xac\x33\x8e\x77\xba\x99\xa6\x42\xc1\x39\x4c\x08\x42\x9c\x7f\x32\xd6\x73\xaf\x96\x69\x42\xca\x59\xa0\xf6\xfe\x88\x2f\xd1\x63\x43\x25\x5a\xa8\xbb\xc8\xd6\x0d\x15\x92\x00\x1d\x57\x81\x82\x12\xd7\x40\xb4\x53\xf0\x3e\x21\x8b\x2f\xf9\x72\xa7\xc5\x0b\xd0\x8e\x0e\x7d\x75\x43\x6f\xdd\x62\x5a\x63\xc1\xf6\xc9\xf5\x44\x97\x5b\xef\x93\xed\x89\xa6\xeb\x23\xb3\x46\xd2\x56\x85\x7b\x91\xf2\xb5\x48\x2a\xa6\xa0\x13\xb5\x56\x13\x15\xd4\xd3\xf9\x82\x0e\xc5\x13\x3b\x51\x3a\x68\x41\x43\x5c\xb6\x2c\x89\x42\x94\x91\x48\xe5\x4c\xa9\x4b\xaf\xa9\xa6\xdd\x40\x8e\xa0\x51\xbb\x19\xc4\xfe\x3a\xa3\xc4\x15\x43\x7b\x56\x24\xc1\xe9\x9f\xf4\x3e\x49\x4b\xf3\x33\x78\x03\x2a\xb7\x70\xf4\xb7\x93\x95\x6e\x9f\xf3\xf6\x28\xbb\x66\x08\x81\x4d\x35\x2b\x9c\xd1\x97\x7c\xe1\xb8\x1c\x3d\x17\x2f\xfb\x6e\x85\xfb\x06\x4b\xba\x3e\xec\x4e\x27\x15\x3c\x0e\xdf\x0c\xf6\x5e\x23\xca\xba\x65\x17\xf9\xdf\xf9\xbf\x87\xb8\xcc\x94\xab\x04\xb9\xfa\x1a\xf3\x65\x65\x20\xcf\x51\x1f\xf8\x60\x0d\x57\x39\xd2\xfa\xeb\xaa\xe0\xe4\x87\x0a\xf6\x0f\xf7\xf7\x7e\x3a\xf8\xa1\x87\xac\x87\x93\x1f\x4b\x62\x70\x74\x70\x7a\x74\x7a\xfc\xd3\xc1\xe9\xdf\x77\x51\x17\xe5\xed\x80\x7b\x31\x26\x24\x69\x85\x71\xe2\xf8\x48\xc1\x56\x4f\x55\x37\xe2\x50\x7c\x7c\x79\xe0\x4e\x58\x13\xe1\x31\x7e\xff\x01\xe3\xb7\x88\x73\x74\xed\x71\xf7\xef\x57\x02\xf7\x9a\xf5\x3d\x62\xca\xfc\x33\x02\xf6\x3e\x3d\xde\x79\xe0\x13\x67\x25\x7e\x3f\x2a\xb8\x18\x43\xad\x52\x40\xb7\xd4\xed\x39\x54\x85\x1d\xd0\xbb\xc6\x57\x00\x19\x7f\x5c\xfb\x04\xe0\x8f\xe8\x5d\x8c\x59\x77\xed\xb0\xd3\x63\x24\xd0\x93\xe3\xad\x46\xae\x6d\x25\xeb\x19\x53\xd5\x0e\xac\xaa\x70\x78\xba\x47\x0c\x31\xc3\x8f\xdb\xf9\x96\xc3\xd3\x3d\xe6\x84\x64\x5a\x4b\xcb\xa8\xeb\x96\xf5\x12\x64\xec\xdd\x16\xf1\xc9\xe4\xc3\x01\x93\x26\x44\xbf\x0b\xdf\x09\xbc\x1d\x9d\xb1\x9b\xf3\xd1\x5b\x76\x7b\x3e\xba\x39\x7b\xb7\x95\x9a\xda\x97\xf0\x77\xb3\x95\xa7\xf2\x3b\x30\xc0\x1f\x1f\x42\xfc\xf8\x10\x62\x77\x3f\x84\x78\xf1\xd0\xf1\x6a\x74\xfb\xf3\xf9\xdb\xfe\x08\xf2\x60\x7f\xff\x68\xef\x78\xef\xe0\xe4\x79\xa7\x2b\x78\xfc\xb6\xbe\x18\x85\x11\xdf\x7c\x35\x77\x4b\xf7\x3b\xda\x71\xff\x7b\xd8\x51\x58\xad\xc1\xc4\xdc\x4d\x36\xc3\xa0\xbd\x07\x84\x08\x7e\x60\x7d\x05\x5e\x9a\x66\x50\x5b\x3f\x68\x95\x33\x90\x61\x50\xc9\xba\x06\x0f\xeb\xeb\xa3\x67\x36\xbc\xa4\xe1\x76\x6b\xff\xdf\x76\xbe\xac\x7c\xf3\x38\x2f\x04\x4f\x9f\x3c\x1e\x9e\xfc\xf9\xea\xed\x1b\xe7\xe1\xae\xec\xda\xff\xb8\xbe\xfe\xb8\xd5\x70\x3c\xdc\x59\xbb\x33\x41\xc8\xd9\xbb\x9b\x6d\x07\x24\xc6\x7e\x87\x06\x74\x75\xfd\xf6\x3f\x97\xe7\x5b\x0d\xa8\xbb\x91\x61\xda\x56\x09\x5f\xc0\xe7\x60\xa9\x40\xd5\xab\xdc\x8e\xa8\xe3\xc3\xe8\xec\x6c\x3b\xf3\x72\x21\x76\xc6\xb8\x1f\x3e\xde\x8c\xce\xb6\x33\xee\x44\xe0\x27\x21\xdd\x4b\xc1\x06\x88\x8f\xc7\x16\xf9\xfc\xc2\xeb\xdf\x5d\xbc\x0e\xd8\x42\xbf\x37\xa3\x5f\x2e\xae\xb7\x52\xaf\xb4\x8e\x78\xe0\xef\xc0\xeb\x5d\x19\xe3\xc7\x8b\xab\xed\x66\x50\xe8\xf9\x72\x23\x94\xbf\x47\x5d\xdc\x69\xee\x8a\x1a\x3e\xfe\xc6\xce\xae\xdf\xff\xf3\xe2\x5f\x5b\x29\x63\x3a\xe6\xa6\x49\x6e\x57\x46\xf5\xfe\x62\x4b\xf7\xd0\x40\x64\x1a\xb4\xb3\x4a\x0a\xfc\x18\x9d\xfa\x34\x3b\xac\xd5\xd8\x0d\x3d\x5c\x5e\x6f\x67\xd5\xf9\xb9\x94\x18\xcc\xab\xf6\x8f\x2f\xaf\xfe\x1f\x00\x00\xff\xff\xe9\x5e\xce\x2a\xbc\x47\x00\x00")

func allowPerfSyscallsJsonBytes() ([]byte, error) {
	return bindataRead(
		_allowPerfSyscallsJson,
		"allow-perf-syscalls.json",
	)
}

func allowPerfSyscallsJson() (*asset, error) {
	bytes, err := allowPerfSyscallsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "allow-perf-syscalls.json", size: 18364, mode: os.FileMode(0664), modTime: time.Unix(1646705275, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x4b, 0x2, 0xb, 0x1a, 0xab, 0x53, 0xfd, 0x30, 0x4, 0x49, 0xc3, 0x7f, 0x88, 0xe1, 0x68, 0xbb, 0x6, 0xd4, 0xeb, 0x95, 0xdf, 0xa3, 0x2c, 0xd0, 0xb4, 0x10, 0x56, 0x9f, 0x83, 0x32, 0x49}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"default.json":             defaultJson,
	"fuse-container.json":      fuseContainerJson,
	"allow-perf-syscalls.json": allowPerfSyscallsJson,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"allow-perf-syscalls.json": &bintree{allowPerfSyscallsJson, map[string]*bintree{}},
	"default.json":             &bintree{defaultJson, map[string]*bintree{}},
	"fuse-container.json":      &bintree{fuseContainerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
