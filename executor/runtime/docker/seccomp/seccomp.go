// Code generated by go-bindata. DO NOT EDIT.
// sources:
// default.json (12.958kB)
// fuse-container.json (13.415kB)
// allow-perf-syscalls.json (12.992kB)

package seccomp

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _defaultJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\x5f\x6f\xdb\x38\x12\x7f\x76\x3e\x45\xe0\xe7\xe2\x90\xb8\xb9\x6c\xda\x37\x9f\x9b\xbb\x06\x9b\x34\xbd\xa4\x87\xdd\xc5\xa1\x20\x18\x69\x24\xf3\xcc\x7f\xe1\x50\x4e\x8c\xa2\xdf\xfd\x40\xc9\x16\x87\x94\x5b\xd4\x75\x9b\x00\x7d\x48\xc0\xdf\x8f\x23\x0e\x67\x38\x1c\x8e\x28\x7f\x3a\x18\x8d\x4b\xa8\x78\x23\xfd\xb4\xf0\xc2\xe8\xf1\xeb\xc3\xf1\xed\xec\xea\x3d\x9b\xce\x3e\xb0\xf3\x9b\x9b\x77\xd7\xe3\x17\x07\xa3\x31\x77\xc5\xfc\x8a\xdb\xf1\xeb\xc3\xff\x1e\x8c\x46\x9f\x0e\x46\xa3\x8e\x13\x1e\x0a\xdf\x38\x88\x8f\xdd\xcc\xde\xb2\x3f\xcf\x4e\xd9\xe9\x49\x78\x70\x34\x1a\x63\x73\x37\x25\x92\xb8\x1e\x63\x34\x4a\x1f\xe8\xa4\x13\xf2\xe5\x64\x1c\xb8\x8f\x07\xa3\xd1\xe7\x17\xdf\xa0\x76\x1a\xfe\xef\xa4\x77\x7a\x73\xb5\x9b\x8a\xab\x8b\xf7\xb7\x3b\x69\x08\x0f\x0c\x4d\xeb\x86\x79\xb7\xab\x81\xf1\xb1\x1f\x33\x81\xdd\xb5\x9f\x5f\xee\x6c\xfd\xf9\xe5\x76\xf5\x61\xa8\xef\xf2\xc0\xe6\xc1\x1f\x37\x8d\xdd\xe6\x70\xfb\xf2\xd5\xd1\x9f\x3b\x68\x0f\xf2\x51\xc3\xc1\xe8\x63\xd8\x50\xb8\xc2\x82\x4b\x89\xc9\x8e\xd2\x5c\xd1\x21\x78\x51\x80\xf5\x9b\x69\x77\xe8\x84\x42\xc4\x1e\x95\xff\xf3\x42\xc1\x63\x8f\x25\x77\x6a\x03\xee\x84\x2e\xfb\xb6\x5b\x6c\x9a\x05\xb7\x35\x78\x82\x90\xa0\x79\x29\x5c\x04\xca\x94\x11\x98\x07\x9d\x80\xcd\x52\x8c\xc6\x85\x34\xc5\x82\xad\xe7\xb2\x95\x3c\x3d\x49\xe9\x1a\x7c\xf0\xda\x16\x8e\x7d\x41\x7c\x38\xf4\x9a\xcc\x65\x35\xd7\x06\x25\x80\xfd\x02\x3d\x54\x80\x90\x00\xe6\xb8\xae\x23\x65\xb4\x86\x22\x3a\xc8\xd8\x15\xab\x84\xcc\xa5\x1c\xf0\x5e\xa6\x6c\x2c\x69\x4e\x48\xfb\xe5\xa6\x0d\xd6\x48\xc9\xda\xa7\x60\x1b\x77\x9c\x91\x5e\x0e\x08\x66\x64\x99\x92\xf6\x81\x0b\xbf\x85\x9a\xa4\xdc\x50\x2a\x30\xc9\x70\x4b\xd0\xbe\xca\x61\x1c\xe6\x11\x8a\x25\xa4\x28\x5a\x0f\x8f\x22\x69\xb3\xda\x99\xe8\x90\xaa\x8b\xdf\x28\xde\x13\x93\xc8\x94\x4b\x81\x64\x89\x7a\x82\x51\x4e\x4a\x53\x10\xef\x55\x5c\x1b\x2f\xaa\x15\x53\x3c\x86\x7a\x95\xc4\x73\x95\x04\x74\x87\xc8\x44\x92\x08\xaf\xb2\x10\xef\x30\x95\xd6\x71\x4d\x5a\x40\xe6\x56\x72\xcf\x71\xa5\x8b\x9e\xa8\xc1\x3f\x72\xef\xe3\x4c\xa4\xc0\x9c\x31\x45\x9c\xb6\x21\x26\x38\x50\x66\x09\xa9\x30\xe6\xe3\xa1\x27\x53\x0b\x80\xcc\x26\xc0\x01\x51\x61\x06\x69\x3f\x9d\xba\x77\x8d\x4e\xfc\xbc\x21\xc8\x03\x8d\x8f\x19\xa8\x05\xd9\x1e\xab\x9a\x80\xc9\xa2\xd7\xe0\x0b\xdb\x50\xf4\x50\x12\x54\x82\xf6\x98\xe3\x38\x5c\x0d\x1e\x6a\x51\x66\x30\xae\x55\x20\x9a\xb4\xbf\xc9\xfa\xd3\xc7\xf3\xa7\xdb\x88\xc5\x01\x91\xc8\x88\x60\x92\x23\x84\x05\x70\x21\x91\x53\x2a\x55\x63\x6b\x67\x29\x4c\x3b\x33\xe8\x84\x71\xc2\xaf\x08\xe5\xb8\x2e\x8d\xa2\x04\x60\xaa\xa0\x23\x92\x69\x3a\xc0\x26\x97\xc9\x9d\xe1\xa4\x50\x82\xae\x0d\x73\xe6\xae\x41\xcf\x42\x94\x52\xb9\x06\x79\x4d\xed\xc3\x64\x64\x34\xc5\x22\x73\x40\xa0\x8c\x4d\x86\xf6\x73\x07\xbc\x64\xdc\x01\x27\xb4\x4f\x46\x0a\xae\x35\x55\xc9\xa9\xf5\xa9\x15\xb9\x09\xc9\x6e\x10\xeb\x4c\xc0\xcb\x92\x3d\x70\x5f\xcc\xf3\x0e\xa1\xa3\xb9\x94\x3b\xce\x49\xa7\xb2\x01\x0c\x2b\xb8\x2e\x40\x46\x82\xa4\x66\x61\x58\x09\xe8\x9d\x59\x11\x26\x44\xdf\x92\xc6\xb3\x30\xcc\x7e\x9d\xcc\x76\x8f\x30\x21\x18\x18\x39\xb3\xd7\x0c\x52\x26\xa0\x98\x66\x03\x6e\xee\xc8\xaa\x0a\xc3\x1a\x27\x74\xcd\x40\xfb\x18\xb6\x3d\xeb\xa0\x16\xb8\xad\x23\x1d\xd5\xf6\x79\x61\x21\x64\x6f\xb7\x4c\x32\xa7\xcc\x32\xa7\xcc\x97\x47\x0a\xbd\xa0\xed\x98\x16\x42\xbc\x81\xa6\x28\x7d\x70\xc0\x30\x29\x11\x20\x8e\xb6\x25\x57\xa6\x02\x79\xe2\x94\x34\x71\xca\x34\x71\xaa\xee\xd8\xe9\x21\xa8\x3b\xee\x9c\x88\x4e\x52\xa0\xaa\x32\x3b\xc4\x95\xd0\x85\x71\x11\x2e\xc8\xf9\xd3\x82\xa8\x4e\x2d\x74\x3c\x8d\x5a\x40\xfa\xe8\x71\xd0\x82\x49\x82\x78\xf4\xbe\x52\xdc\xd2\x76\x14\xb4\xce\x78\x52\xba\xa8\xfb\x10\x43\x08\x9e\x3a\x40\xdd\xb3\x2e\xd6\x09\x61\x6c\x5c\x04\x75\xdf\x46\x63\xe9\xa0\x00\x11\x0f\xfd\x8c\xce\x22\x76\xd3\x8b\x10\x0b\x50\xca\x0d\xc5\x1b\x4d\xa3\x42\x39\xa0\x46\x61\x4d\x36\x99\xc2\x9a\xec\x04\x85\xb5\x2b\x96\x04\x21\xd1\x48\xcf\x31\xd5\xe8\xc4\xa5\x1d\xa4\x6e\x6c\x34\xd1\x39\x28\x22\x35\x3c\xac\x0f\xd2\x3e\xf6\x34\x3c\x20\x48\xe2\x60\xea\xb7\xd0\xe6\x3e\x45\xfd\xca\x58\xde\xc4\xb8\xb2\xa2\xac\xca\xc4\xe7\x1d\xd3\x3a\x0a\x45\xad\xb9\x8c\x1d\x16\x68\x3b\x0e\x68\xa2\x21\x76\x00\x32\x77\x5b\x47\xdc\x69\x43\x36\xa6\x7d\xc0\xcb\x65\x8a\xa2\x96\xee\xa0\x20\xd2\x9d\xfd\xa7\x39\xce\x15\x3e\x38\xe1\x07\x78\x99\xc1\x5e\x4d\x50\x4a\xdb\x7c\x9e\x11\x34\x54\x36\x38\xfa\x3a\xb1\xc0\x41\x91\xb4\x2b\x17\x4f\xd0\x80\x95\xc2\x3a\xc7\xd9\xec\x5b\x9a\x4a\x29\x6e\xbb\x37\x00\xcb\xeb\xf8\x0e\xb3\x25\xf5\x38\xa0\xc7\x61\x87\xe8\x3c\x3b\x4c\xec\x46\xcf\x9d\x67\xeb\x57\xc4\x9e\x56\x24\x85\x38\x84\xfb\xbe\xed\x43\x78\xf0\xee\xfa\x26\xe1\x2c\xe8\x52\xe8\x3a\x23\x9d\x29\x14\xc7\x45\xca\xde\x37\xd0\x80\xd0\x95\x49\x69\x07\xbe\x71\xd9\xa8\xd8\xa0\x25\x1b\xba\x23\xdb\x3d\x4d\xdf\x28\x32\x3a\x77\xa6\x67\xbe\xde\xa6\x16\x8b\x39\x94\x21\x3f\xf1\xaa\x0a\x47\xf1\x6a\xd8\x41\x3c\xdb\x93\x96\x3b\xae\x06\x2c\xdb\x54\x4f\x4c\xf1\xc7\xaf\xf5\x0a\x3d\xe8\x6d\x1b\x8d\x84\x4c\x97\x73\xed\xa3\x22\x9c\x9e\xcb\xb8\x23\xb7\x76\x66\x36\x77\x32\xf8\x25\xd3\x70\x9b\x69\xb8\xd5\x34\xfc\xe2\xf4\x56\x02\xe2\xeb\x1b\x42\x51\x18\x65\x23\xa4\x49\x0a\x41\x91\xed\x8f\xa0\x48\x36\x45\x50\x86\x3c\xa6\xda\x55\xdc\xc6\xe4\x16\x92\xb0\x08\xed\xb0\x3b\x72\x9c\x4a\xd3\x7d\xd7\xe2\x14\xfa\x18\x17\xe0\x2b\x5a\xe5\x6e\x70\xac\x2f\x5a\xa6\xc9\x24\x9a\x4c\x22\x1d\x21\x7f\x3e\xad\xf7\x71\x58\xef\x63\x5e\xef\x63\x5a\xdc\xe3\xb0\x60\xc7\x50\x6a\xa7\x22\x0e\x72\xc5\x69\x05\x8f\xc3\x0a\x1e\xf3\x0a\x1e\x87\x15\x7c\x4b\xe5\x22\x03\x89\xa4\xc6\xc7\xed\x35\x3e\x26\x25\x3d\x0e\xea\x77\xdc\x5e\xbf\xb7\xb4\x28\x43\xbd\xed\xc8\xdd\x14\x26\x45\x3b\x66\x45\x7b\x5e\x89\xe1\x5c\xc5\xdc\x88\xf3\x24\x48\xe7\xaa\xa4\x5d\x34\x62\xe7\x8d\x2f\x49\xf1\x19\x12\xa2\xf4\xe8\x79\x3c\xea\xbb\x23\x34\xde\x66\x6c\xf0\x09\x21\xf2\xdc\x38\xc8\x80\xc1\x11\x44\x6b\x8b\x68\x92\xee\x18\xcb\x63\xa6\x46\x2b\x45\x11\x77\x01\x29\x1c\xd2\x2a\x33\x7d\x19\xcf\xdf\xc5\x03\x8e\x19\x6c\xa5\xe8\xd1\xb7\x86\x64\x60\x52\xef\x84\xf6\x96\x7b\xaa\x40\x13\x6d\x2b\xa4\x39\xd8\x43\x2f\xe7\x6b\x5a\xe0\xd3\xbb\xb7\x76\x1b\x64\x45\x6f\xc7\x95\x20\x21\xe7\x6a\xf0\x66\x09\xce\x35\x7a\xc0\x0f\x07\x1d\x5c\xe8\x75\x34\x6e\x93\xc5\xad\xb2\x83\x72\x7c\xc3\x6e\xd3\x17\xe9\xe1\x28\xdb\x74\x46\x3a\x95\xef\xdd\xe9\x13\x9f\x65\xf7\x26\xc3\x6b\x93\x66\xf0\xea\xdd\xd0\x18\x6c\x68\xf1\x90\xd6\xc7\x1d\x8a\x0b\xdf\xd0\xb9\xb6\x40\x63\xd6\x1b\x88\x2c\x6b\x37\xc9\xe4\x97\xf4\xd2\x69\xa9\xd2\xf0\x0d\x27\xf9\x09\x05\x71\x5f\x07\x44\xae\x2e\xda\x5a\x2e\x01\xcb\xee\x0e\xbc\xa5\xc6\x7c\xf8\xb1\x69\x7a\x79\x79\xfd\xc7\x78\xdd\xed\xea\xf6\x1e\x7c\x2d\x5d\x18\xa5\x40\xfb\x20\xbe\x16\x10\xba\x90\x4d\xd9\x5e\x96\x7f\xfa\xdc\x51\xf0\x48\xa8\xf4\x2e\x3f\xbb\x57\x0f\xbb\x1c\x10\xd9\x52\xb1\xac\xcc\xed\xf9\xac\x32\xf5\x8e\x17\xb0\xfb\xfc\x75\x23\xe5\xb7\x58\xd0\x69\x51\x42\xff\x0e\x4e\x83\x0c\x52\x27\x7f\x3b\x6b\xf5\xed\x6e\x1c\x38\x34\x9a\xcb\x70\x04\xed\xee\xf0\x76\x8c\x6e\x3e\x61\x8a\x25\x3c\x8e\x5f\x1f\x1e\xbd\x58\x13\x4b\x2e\x1b\xa0\x84\xb1\xfd\x88\xe1\xef\xfc\xdf\xad\xca\xd1\x67\xa2\xf8\x47\xaf\xdd\x13\x98\x77\xf6\x6b\x9b\x77\xfc\xf2\xf8\xe8\xb7\xc9\xaf\x6f\xe3\xd9\x2f\x1e\xa6\x27\x93\x57\x27\xaf\x4e\x7f\x9b\xbc\xfa\xfb\xf3\xd9\x99\x95\x17\x93\x9f\x95\xe3\x3b\x6d\xdc\x15\x73\xa2\x7d\x34\xb6\xb6\x38\x3d\x91\x5d\x66\x6e\x3f\xaf\xee\x9e\x2f\xb9\x53\x6c\xdb\x87\xa5\xc0\x7f\xa5\x78\x4a\x8c\x5e\xf3\x77\x0e\xf8\xc2\x1a\xa1\xc9\x47\xd5\x62\x0e\x95\x6c\x70\x9e\xd4\xc8\x12\x9f\xd8\x4f\xf1\x63\x70\xdb\x5e\x7f\xf1\xfe\x6e\x8f\x15\x73\xd6\x5d\x1e\x3d\xb1\x15\x2a\xde\x50\x8d\xc6\x8f\xeb\xdf\x0e\x7c\xa7\x15\xca\x94\xa2\x5a\x31\x59\xfa\x67\xb7\xa2\x6f\x9f\x9d\xee\x63\x11\xbe\x7c\x75\xc4\x6c\x21\x98\x52\xc2\x30\x7a\x7b\x96\xf6\x24\xa5\x59\xdb\xe5\x1a\x1d\x6a\x40\x26\x34\x7a\xf7\xc4\xee\x08\x13\xe8\x3d\x10\xc0\xe3\x3e\x3e\x30\x16\x34\xbb\x5b\xb1\x39\xd7\xa5\x04\xc6\x7f\xf2\xe2\x16\xdc\x52\x5b\x66\xd3\xf7\xec\xcd\x74\xc6\x6e\xce\xa7\x6f\xd8\xed\xf9\xf4\x66\xf6\x76\x1f\x63\xee\x6c\xd5\x27\x12\x69\xf4\xf0\x13\x37\xfd\x7e\x55\x61\x61\x74\x25\xea\x88\x95\x69\x34\xe9\xa6\x37\xcb\x15\x5a\x11\xdf\x8c\xa5\x31\x8b\xc6\xb2\xb2\x30\x66\x21\xe2\xd5\x3e\x7d\x5c\x99\x25\xb0\x84\x09\x73\x65\xde\x10\x4f\xbf\x20\x4b\xe0\x5d\x7c\x87\xb4\xe0\x2a\xd6\x7e\xd1\x4a\x6e\xb7\xef\x1b\xe3\x79\x72\x05\xe5\x4b\xa3\xb8\xd0\xf4\x7d\x07\xc1\xcf\x0d\xfa\x8c\xd2\xf4\xcd\x55\x9a\x3a\xbe\x37\xd1\x19\x76\x68\x12\x5f\x96\x70\xce\xdd\x77\x54\xf1\x7b\x06\xc4\xed\x5f\xb7\x6c\xfa\xe6\xea\xe2\xdd\x3e\xa1\xd0\xad\xff\xee\x53\x3f\xf8\xa6\x4a\x62\x72\x7c\x7c\x72\x74\x7a\x34\x39\xfb\x52\xe5\x7b\x35\xbd\xfd\xfd\xfc\xcd\x8f\x29\x28\xbe\xd9\x51\x2f\xbe\x2b\x63\x3c\x9d\x1b\x8f\x7f\x92\x1b\x83\x49\x87\xed\xad\x2f\x78\x70\x87\xc6\x95\xe0\x84\xae\x0f\x2b\xe3\x0e\x5b\x03\x0e\x05\x1e\x96\xa2\xaa\xc0\xc1\x26\xda\x7f\x46\xa6\xdd\x2d\xa2\xbf\xea\x77\x07\x77\xc6\x3c\x7d\x2e\x0e\x13\xfd\xc7\xf5\xf5\x87\xbd\x76\xde\xdc\x3d\xd7\xd4\x67\x6f\x6f\xf6\x9c\x7c\x77\x15\xc7\x94\x29\x9b\x78\x13\x1f\x4e\x8d\x8c\xaa\x28\xf7\x1c\xa6\x5e\x5d\xbf\xf9\xcf\xe5\xf9\x5e\x55\x69\x51\x3c\xcf\x2a\xbd\x9f\xce\x66\x7b\x2d\xd2\xa2\x88\xdf\x68\xba\x4f\xbe\x35\x90\x5f\xdd\x6d\x6e\xa5\xb2\x9f\x21\x3c\xd9\x25\xd6\x8f\x70\xd1\x87\x9b\xe9\x6c\xaf\xd5\x15\xc6\x92\x9f\xd7\x58\x70\xea\x59\x0c\xb9\x99\xfe\x71\x71\xbd\x57\x8d\xbe\xe5\x47\x4d\x38\xfc\x49\xeb\xe6\xda\xf9\x39\x6c\xfc\x70\x71\xb5\xd7\x52\x2d\xe7\x5c\xd7\x8d\x7d\x9e\xb9\x7f\xf8\x8b\xcd\xae\xdf\xfd\xf3\xe2\x5f\xfb\x58\x50\x83\x67\x0a\x94\x35\x52\x14\xf1\xf7\x30\xf4\x57\xd4\x98\x48\x3c\x87\xa5\xef\x2e\xf6\xdb\x50\xeb\xc2\xf9\x19\xa6\x7e\x79\xfd\x2d\x8b\x73\x30\xfa\x78\xf0\xf9\xff\x01\x00\x00\xff\xff\x61\x1d\x34\x4e\x9e\x32\x00\x00")

func defaultJsonBytes() ([]byte, error) {
	return bindataRead(
		_defaultJson,
		"default.json",
	)
}

func defaultJson() (*asset, error) {
	bytes, err := defaultJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.json", size: 12958, mode: os.FileMode(0644), modTime: time.Unix(1616432536, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0x72, 0xe, 0xfe, 0xc3, 0x78, 0x7e, 0xf7, 0x30, 0x63, 0x37, 0xee, 0x21, 0xb2, 0xc4, 0xfc, 0x3, 0xf5, 0xc5, 0x27, 0xb0, 0x8, 0xf1, 0x45, 0xc, 0x80, 0xf7, 0x18, 0x75, 0xea, 0x93, 0x7a}}
	return a, nil
}

var _fuseContainerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x5b\x53\x1b\x3b\xf2\xc0\xdf\xf3\x29\x5c\x7e\xce\x03\x01\xc2\x81\xbc\xf9\x6f\xf8\x6f\xa8\x85\xc0\x02\x5b\xe7\x9c\xda\x4a\xa9\x84\xa6\x67\xac\xb5\x6e\xa8\x35\x06\x57\x2a\xdf\x7d\x4b\x33\xf8\xa2\x96\x7c\xce\x81\x38\x29\x6f\x6d\x1e\x42\xac\x5f\xb7\x2e\xdd\xa3\x4b\xb7\x66\xbe\xbc\x19\x0c\x86\x15\xd4\xbc\x55\x61\x24\x82\xb4\x66\xf8\x61\x30\xbc\x1d\x5f\x5e\xb3\xd1\xf8\x8e\x9d\xdd\xdc\x7c\xba\x1a\xbe\x8d\x4a\xdc\x8b\xc9\x25\x77\xc3\x0f\x83\x7f\xbd\x19\x0c\x06\x83\x2f\xdd\xdf\x67\x81\x0c\x20\x42\xeb\x61\x55\xf9\x66\xfc\x91\xfd\x76\x7c\xc4\x8e\x0e\xbb\xea\x9d\x26\xb6\xf7\xa3\x35\x65\x5c\xb6\xd5\x49\x93\x7a\xcb\x4a\xa9\xe0\x60\x7f\xf8\xcc\x3f\x77\xff\x7f\x7d\xfb\x57\xc7\x32\x8a\x7f\x5f\x33\x98\xd1\xcd\xe5\x6b\xfb\xbc\x3c\xbf\xbe\x7d\x4d\x97\xb1\x5e\xd9\x01\x7d\x8b\x9f\x5e\xef\x86\x55\x03\x5b\x1f\xd5\xb7\x0c\xe9\xec\xe2\xb5\x7e\x3a\xbb\xd8\x3c\xa6\xd8\xea\x37\xfa\x6a\xd1\xc4\x77\x19\xdb\x6b\x07\x76\x7b\x70\xb2\xf7\xdb\xcb\x87\x14\xab\x91\x2e\xdf\x0c\x06\x9f\xbb\xd5\x8d\x73\x14\x5c\x29\xcc\x97\xb7\xe1\x9a\x36\xc9\x85\x00\x17\xd6\x6d\xeb\xc9\x21\x45\x88\x09\xa9\xfe\x1d\xa4\x86\xa7\x84\x29\xee\xf5\x3a\xb8\x97\xa6\x4a\xca\x7e\xba\x5e\x14\xdc\x35\x10\x08\x41\x42\x26\x95\xf4\x29\xd0\xb6\x4a\x81\x7d\x34\x19\x58\x7b\xcc\x11\x29\x2b\xa6\xac\x81\x10\x3d\x5a\xe2\xd1\x96\x5c\x60\xb8\xb1\xa8\x00\x1c\x11\x61\xaa\x6b\x8d\x01\x91\x8e\xda\xba\x39\xab\xa5\x02\xe6\xb9\x69\x52\x6d\x0f\x3c\xd1\xad\x5a\x47\x8a\xfb\xa4\x7c\xb0\x5e\x06\x67\x95\x62\x5d\x2b\xb0\x89\xbf\x2b\x08\x82\x2a\x42\x66\x55\x95\x0b\xdc\x23\x97\x21\xc7\x9b\x69\xd6\xcc\x0c\x4c\xa8\x4b\x28\x31\x0e\x9e\x40\xcc\x20\x27\xa9\x87\xe0\x49\x66\x65\xd6\x78\x9b\x3a\xae\xee\x27\x69\x5a\xb5\xe6\xd5\x4c\x22\x1c\x1d\x16\x21\xa3\x5c\x29\x2b\x88\x5f\x6b\x6e\x6c\x90\xf5\x9c\x69\x9e\xce\xde\x3a\x9b\x9a\x75\x36\x37\x7b\x42\x86\x94\x4d\xd8\xba\x30\x63\x7b\x46\x6b\x9a\xf4\x29\x76\x80\xd8\x50\xf1\xc0\x71\x6e\x44\x02\x1b\x08\x4f\x3c\x84\x74\xb4\x4a\x62\x89\x5a\x91\x9a\x69\x89\xd9\x1e\xb4\x9d\x41\x5e\x11\x4b\x7d\x60\x20\x26\x44\x40\x46\x1c\x51\x11\xd6\x58\x40\x54\x8f\x9a\x1a\x7c\x6b\xb2\x67\xb8\x80\xa4\x72\x1b\xd2\x0d\xac\x6e\xe3\x3e\x40\xa6\x50\x03\x41\xb8\x96\x92\xc7\x8a\x90\x0a\x4c\xc0\x12\x4b\xfb\x6c\x20\x40\x23\x69\xe5\x88\xd2\xe7\x1f\x61\x9b\xeb\xb5\x05\xbd\xbc\xb9\x52\x6b\xdd\x7a\xa1\x03\xec\x61\xa6\x2b\xa3\x1b\x3c\x81\x0e\xc0\xc7\xf3\x83\xe2\xbc\x7b\xd7\x78\x47\x51\xae\x54\x40\x5e\x5a\x2f\xc3\x9c\x60\xcf\x4d\x65\x35\x85\x80\x79\xc7\x3d\xcc\xcc\xf1\x80\xb9\x2b\x7b\x98\xeb\x2a\xa9\x25\x7d\xfe\xcc\xdb\xfb\x16\x03\x8b\x2b\x86\xea\xb7\xc8\x1b\xea\x13\xcc\x7a\x43\x2b\xa6\x05\xe7\x45\x6c\x5d\xd6\x5d\x98\x78\xe0\x15\xe3\x1e\x38\x11\x85\xac\xe5\xf8\xa8\x6c\x5d\x71\xea\xb5\xdc\xe2\x92\xb9\xd9\x8a\x95\xcf\xbb\x1d\xaf\x2a\xf6\xc8\x83\x98\x94\x84\xd2\xa4\x2e\x5a\xe7\xef\x4a\x02\xaf\x0b\x8d\x59\x26\xb8\x11\xa0\x52\x48\x0e\x2a\x69\x59\x05\x18\xbc\x9d\x13\x1a\x57\xc3\x8c\xae\x39\x69\xe3\x1c\x62\x24\xaa\x78\xa6\x48\x69\x24\xe9\x19\x12\x59\x7b\x4f\x26\x80\x74\xc9\x0e\x33\x95\x2a\x19\xa1\xca\xf6\x73\x55\xd8\xcf\x55\xc9\xd9\x4a\x9a\x29\x2d\xa7\x9b\x4f\x9c\x71\x60\x28\xc9\x1b\x2a\x52\xa6\x14\x02\xa4\x3d\x6c\xd8\xbd\x73\xc5\xd2\x76\xae\xe8\x76\xae\xf2\xed\x5c\xf7\x87\x6b\x82\x40\xd7\x55\x21\x64\xd1\xd2\x08\xeb\x53\x34\x25\x67\x6a\x07\xd2\x4e\xf5\xd4\xa4\xa7\x6c\x07\x88\x0e\x3d\xc6\x3a\xb0\x9f\x11\x9e\x3e\x4b\xad\xb9\xa3\xe5\xb4\x92\xf3\x36\x90\x60\x4f\x3f\xc4\x09\x87\x10\xa8\xbb\xf4\x03\xeb\xe7\x3f\x81\xd6\xa5\x8f\x54\x3f\xb0\xb8\x8a\x2b\x0f\x02\x64\x1a\x0e\x2d\x44\x08\x69\x24\xad\x1f\x58\x6b\xe8\xf4\xd1\x1e\xe8\xf8\xb1\x21\xeb\x49\x63\x43\x56\x87\xc6\xc6\x8b\x19\x21\x48\xba\xa3\xc7\xac\x6e\x4d\xe6\xe1\x1e\x51\x8f\xb6\x86\x8c\xa9\x18\x54\x1b\x78\x7c\x8e\x03\x92\x09\x6c\xe0\x11\x41\x11\x7f\x53\xf7\xc5\x72\x5a\xcf\xf1\x36\x9d\x81\x4e\xba\xac\x9c\x3c\xd7\x18\xc8\x26\xe5\x0c\x78\xe2\x48\x17\xb7\xe8\x74\xea\x77\x68\x96\x93\xb4\xa7\xfe\x84\x21\x35\x7b\x2b\x93\x9b\x12\xf7\xe8\x25\x8d\x58\x7a\x36\x2b\xa0\xa4\x8f\xd8\x2b\x2d\xf3\x49\x01\xd2\x19\xb4\x60\xa9\x3b\x33\xb3\x3c\x88\xac\x5c\xfb\xf4\x8c\x8e\x4c\x6b\x6c\x32\x46\x91\xe6\xae\x4f\x95\x1c\x6f\xd2\xec\x6c\xc3\x5e\xe5\x81\x9e\xa4\x3d\xa1\x83\xee\x19\x71\x0c\x06\xee\x03\x7b\xce\x90\x13\x91\x26\x3b\x4f\x54\x93\x0d\xef\xef\xd1\x32\xee\xc0\x54\xd2\x34\x05\x81\xb7\x42\x73\x9c\xe6\x92\x87\x16\x5a\x90\xa6\xb6\xb9\xc8\x43\x68\x7d\xa1\x17\x6c\xd1\x91\x95\xdf\x0b\xba\x4d\x81\xa6\x63\x3e\xb0\xd0\x6c\xea\x08\xc5\x04\xaa\xb8\x51\xf1\xba\x8e\xe7\xf4\xbc\x2c\x24\xbe\x5e\x0a\x1c\xf7\x5c\x17\x25\x6c\x11\xb6\x31\xcd\x9f\xfe\x4c\x43\x9a\xa2\x46\xf7\xa3\x55\x50\xe8\xdb\xfb\xae\x09\x69\x02\xf8\x19\x57\xb9\x02\xfe\x91\x49\x85\x5d\x79\x29\xd8\x60\x12\xfe\xe1\x70\xe6\x12\xd2\x4c\x17\x41\x08\xab\x5d\x8a\xe8\x96\x85\xa0\xc9\xf6\x81\xa0\xc9\x3e\x8c\xa0\x2d\x69\x46\x77\x8f\x99\x52\x53\xd1\x72\x5c\x3e\x25\x96\x6e\x1e\x91\xd2\x15\xd9\xb1\x1c\x85\x74\xea\x40\xa8\x69\xb4\xbd\x60\x69\x94\xd3\xd1\xb6\xa0\x99\xc5\x9e\x98\xe5\x2d\x58\xc8\x5b\xb0\x94\xb7\x60\x39\x6f\xc1\x52\xde\x82\x79\x82\x82\xe5\x44\x03\x63\x4a\x90\xab\xfa\x3c\x35\xc3\x52\xf6\x81\xe5\xec\x03\x4b\xd9\x07\x96\xb3\x8f\x0e\x97\x54\x8b\x9a\x59\x9e\x82\x9b\xf3\x14\xcc\x52\x12\x2c\xe6\x1e\xb8\x39\xf7\xe8\x44\xb2\x8a\x79\x81\x27\x57\x81\x98\x25\x1b\x58\x48\x36\x4a\xf1\x24\x4e\x74\xba\x69\xe3\x24\x5b\x27\x13\x5d\x51\x15\xba\x70\x26\x6d\xa8\x48\x08\x1e\x77\x6e\x15\x30\xf0\x34\x46\x41\xd9\x18\xae\xd2\x7b\xa9\x05\x3b\x24\x30\xdf\x93\xa3\xc7\x48\xd7\x1d\xa1\x47\x49\x4f\x1d\x4f\xcf\x13\x74\x4a\x8a\x74\x99\x92\x70\x27\x0f\xa6\xf3\x5b\x90\xd2\x25\x08\xce\x35\x3d\xc8\x9f\x11\x69\x9f\x04\x71\xb1\xbc\xe1\x96\x32\x8a\x48\xc7\x73\xcc\x8e\x94\x39\x2a\x9b\xec\x1d\x01\x92\x56\x42\x43\x93\x25\x7a\xcf\xda\x2d\xd8\x42\x6a\xd0\xf3\x0a\x14\x14\x78\x31\x99\x58\x48\x0a\x97\xb9\x0b\x11\x6e\x10\xc5\x3a\x76\x06\xde\xb7\xa6\x28\x2b\x57\xda\xd0\x5a\xe2\xb4\x90\xd9\x5f\xb8\x9d\x2a\x5f\x4e\xb5\xc5\xcb\x88\x96\x86\x16\x2d\x8d\x85\xf2\xb4\xa0\x27\xe9\x54\x68\xe9\xd0\x3b\x60\xb0\xa0\x95\x18\x34\xa3\xd7\x81\x33\x9d\xcf\xeb\x18\x97\x1c\x52\x90\xee\x10\x91\x90\x0b\xa0\x2e\x8e\xcd\xc0\x6c\xf9\x92\x63\x21\x19\xf2\xfc\xd5\xe6\xe8\xe2\xe2\xea\xd7\xe1\x4a\xc3\x37\xdd\x5b\x8e\x55\x1d\x61\xb5\x06\x13\x62\xa5\x95\x9a\x34\x42\xb5\x55\xf7\x42\xe4\xcb\xd7\x25\x85\xa7\x35\xda\x41\xfa\x32\xa7\xf0\x16\x45\x28\x6b\xe0\x5b\x86\xba\x6c\xea\xcb\xf2\x57\x37\xc2\x0a\x9e\x86\x1f\x06\x7b\x6f\xd7\xe9\x8c\xab\x16\x86\x1f\x06\xfb\x7b\xc7\x7b\xef\xf7\xde\x1f\xbf\x3f\xca\xc5\x77\x8f\x36\xab\x67\xdd\x72\x24\xf1\xdf\xe5\xe8\xf6\xef\x67\xa7\xec\xec\x1f\xc3\xa5\xd2\xd7\xcc\x82\xef\xed\x38\x07\x1e\xad\xe1\x2a\x9e\xc6\x3f\xd8\x7d\x05\xfa\x17\xbc\xf6\x3f\xeb\xae\xe3\x9f\xee\x7a\x89\xbb\xde\x1d\xbc\xdb\xfb\x65\xff\xa7\xcf\x5e\xea\xb3\xe3\x9f\xcb\xf2\x45\x3e\x3b\xdc\x3f\x39\x3c\x39\xfa\x65\xff\xe4\xfd\x7f\xa1\xdf\x48\x04\xba\xff\x83\x0e\xfb\xd5\x00\xb8\x17\x13\x32\xa8\xee\xf6\x4f\x1c\x1d\x2a\x58\x79\xe6\xf3\xf3\xaf\x6f\x34\x97\x7b\xcd\x36\xbd\x7c\x8e\xb2\x3f\x09\xc8\x13\x4f\xad\xc9\xee\x3d\xf0\xa9\xb3\xd2\x90\x6f\x29\xc4\x04\x6a\xd5\xe2\x24\xcb\xe3\x14\xee\x88\xa3\xd3\xef\x45\x7a\xb0\xfa\x94\x66\x8b\x7e\x17\x13\xd6\xdf\xe0\xee\x88\xdd\x3a\xbd\x3a\x1e\x0c\x86\x4f\xab\x6f\x9b\xb6\x66\xb7\xb6\x95\xac\xe7\x4c\x55\x61\xb7\xed\x4e\xc1\xf1\xd1\xd6\x1d\x81\x07\x27\x7b\xcc\x09\xc9\xb4\x96\x96\xd1\xeb\xf1\x54\x9a\xe5\x21\x9d\xd8\xb7\x26\x26\x43\x4c\x1a\x0c\x7e\x47\xbc\x19\x07\x96\xfa\x2e\x92\xa7\xad\x7b\xcf\x3a\x30\xec\x7e\xce\x26\xdc\x54\x0a\x18\xff\xf1\xb3\x49\x70\x97\x59\x3f\x1e\x5d\xb3\xd3\xd1\x98\xdd\x9c\x8d\x4e\xd9\xed\xd9\xe8\x66\xfc\xf1\x3b\x2c\xa0\xd6\x90\xfc\xbb\x4c\x7e\xfc\xc9\xb5\xc9\x25\xb7\xbf\xdf\xb2\xd1\xe9\xe5\xf9\xa7\xad\x3b\xc3\xc3\xbd\xb5\xbb\xf3\xec\xa3\xa1\xff\x77\x75\x75\xb7\x75\x3b\xc5\xc4\xef\x9a\x9d\xe3\x8f\x37\xdf\xc3\xd2\xfe\x7e\x8d\x69\x5b\xb5\xe9\x0b\x04\x69\x64\x28\xe0\x7a\x03\x7f\x68\xc1\xcf\x17\x7c\x97\xfc\x76\x79\x75\xfa\xcf\x8b\xb3\xed\xc7\x13\x42\xec\xd6\xfc\xb8\x1e\x8d\xc7\xdb\x9f\x1e\x53\x91\xbe\xd7\x72\xde\x0a\x40\x64\x33\xcd\x0a\x6f\xba\x97\xb2\xc2\x3b\xea\xe0\xb9\xd8\xad\x99\x71\x7d\x77\x33\x1a\x6f\x7f\x66\x48\xeb\xc8\xe7\x4b\x0e\xbc\xde\x29\xcb\x6f\x46\xbf\x9e\x5f\x6d\x3f\xc2\xda\xf0\x25\x1a\x96\xbf\xac\x5e\x5c\x9e\xef\x92\x63\xee\xce\x2f\xb7\x3f\x21\x66\x13\x6e\x9a\xd6\xed\x96\xa1\x77\xbf\xb3\xf1\xd5\xa7\xff\x3f\xff\xdb\x0b\xcd\x7d\x13\xf5\xbe\xfe\x27\x00\x00\xff\xff\x03\x9e\x72\x97\x67\x34\x00\x00")

func fuseContainerJsonBytes() ([]byte, error) {
	return bindataRead(
		_fuseContainerJson,
		"fuse-container.json",
	)
}

func fuseContainerJson() (*asset, error) {
	bytes, err := fuseContainerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fuse-container.json", size: 13415, mode: os.FileMode(0644), modTime: time.Unix(1616434319, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x93, 0x3c, 0x72, 0x2e, 0x2, 0xf6, 0x24, 0xe, 0xec, 0x45, 0x6b, 0x2f, 0x80, 0xf1, 0x66, 0xd7, 0xf4, 0x28, 0x82, 0x44, 0xe, 0x35, 0x6e, 0x8, 0xab, 0xf1, 0x25, 0x2d, 0x67, 0x99, 0x38, 0x76}}
	return a, nil
}

var _allowPerfSyscallsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\xdf\x6f\xdb\x38\xf2\x7f\x76\xfe\x8a\xc0\xcf\xc5\x17\x89\x9b\x6f\x36\xdd\x37\x5f\x9a\xbb\x0d\x36\x69\x7a\x49\x0f\xbb\x8b\xc3\x82\x60\xa4\x91\xcc\x33\x7f\x85\x43\x39\x31\x16\xfd\xdf\x0f\x94\x6c\x71\x48\xa9\xbd\xba\x6e\x13\xa0\x0f\x09\xf8\xf9\x70\xc4\xe1\x0c\x87\xc3\x11\xe5\xbf\x0e\x26\xd3\x12\x2a\xde\x48\x3f\x2f\xbc\x30\x7a\xfa\xf3\xe1\xf4\xee\xfc\xfa\x3d\x9b\x9f\x7f\x60\x17\xb7\xb7\xef\x6e\xa6\xaf\x0e\x26\x53\xee\x8a\xc5\x35\xb7\xd3\x9f\x0f\xff\x7d\x30\x99\xfc\x75\x30\x99\x74\x9c\xf0\x50\xf8\xc6\x41\x7c\xec\xf6\xfc\x17\xf6\xfb\xd9\x29\x3b\x3d\x09\x0f\x4e\x26\x53\x6c\xee\xe7\x44\x12\x37\x63\x4c\x26\xe9\x03\x9d\x74\x42\xbe\x9e\x4d\x03\xf7\xe7\xc1\x64\xf2\xf1\xd5\x17\xa8\x9d\x87\xff\x3b\xe9\x9d\xdf\x5e\xef\xa6\xe2\xfa\xf2\xfd\xdd\x4e\x1a\xc2\x03\x43\xd3\xba\x61\xde\xed\x6a\x60\x7c\xec\xdb\x4c\x60\x77\xed\x17\x57\x3b\x5b\x7f\x71\x35\xae\x3e\x0c\xf5\x55\x1e\xd8\x3e\xf8\xed\xa6\xb1\xdb\x1c\xee\x5e\xbf\x39\xfa\x7d\x07\xed\x41\x3e\x6a\x38\x98\xfc\x19\x36\x14\xae\xb1\xe0\x52\x62\xb2\xa3\x34\x57\x74\x08\x5e\x14\x60\xfd\x76\xda\x1d\x3a\xa1\x10\xb1\x47\xe5\x7f\xbc\x50\xf0\xd4\x63\xc9\x9d\xda\x82\x7b\xa1\xcb\xbe\x6d\xab\xbe\xe9\x96\xdb\x66\xc1\x6d\x0d\x9e\x20\x24\x68\x51\x0a\x17\x81\x32\x65\x04\xe6\x51\x27\x60\xbb\x2a\x93\x69\x21\x4d\xb1\x64\x9b\x69\x8d\x92\xa7\x27\x29\x5d\x83\x0f\x0e\x1c\xe1\xd8\x27\xc4\x87\x43\x6f\xc8\x5c\x56\x73\x6d\x50\x02\xd8\x4f\xd0\x43\x05\x08\x09\x60\x8e\xeb\x3a\x52\x46\x6b\x28\xa2\x83\x8c\x5d\xb3\x4a\xc8\x5c\xca\x01\xef\x65\xca\xc6\x92\xe6\x8c\xb4\x5f\x6f\xdb\x60\x8d\x94\xac\x7d\x0a\xc6\xb8\xe3\x8c\xf4\x72\x40\x30\x23\xcb\x94\xb4\x8f\x5c\xf8\x11\x6a\x96\x72\x43\xa9\xc0\x24\xc3\xad\x40\xfb\x2a\x87\x71\x98\x27\x28\x56\x90\xa2\x68\x3d\x3c\x89\xa4\xcd\x6a\x67\xa2\x43\xaa\x2e\x94\xa3\x78\x4f\xcc\x22\x53\xae\x04\x92\x25\xea\x09\x46\x39\x29\x4d\x41\xbc\x57\x71\x6d\xbc\xa8\xd6\x4c\xf1\x18\xea\x55\x12\xcf\x55\x12\xd0\x1d\x22\x13\x49\x22\xbc\xca\x42\xbc\xc3\x54\x5a\xc7\x35\x69\x01\x99\x5b\xc9\x3d\xc7\xb5\x2e\x7a\xa2\x06\xff\xc4\xbd\x8f\x33\x91\x02\x73\xc6\x14\x71\xda\x86\x98\xe0\x40\x99\x15\xa4\xc2\x98\x8f\x87\x9e\x4c\x2d\x00\x32\x9b\x00\x07\x44\x85\x19\xa4\xfd\x74\xea\xde\x35\x3a\xf1\xf3\x96\x20\x0f\x34\x3e\x26\xa3\x16\x64\x7b\xac\x6a\x02\x26\x8b\x5e\x83\x2f\x6c\x43\xd1\x63\x49\x50\x09\xda\x63\x8e\xe3\x70\x35\x78\xa8\x45\x99\xc1\xb8\x56\x81\x68\xd2\xfe\x26\xeb\x4f\x1f\xcf\x9f\x6e\x23\x16\x07\x44\x22\x23\x82\x49\x8e\x10\x16\xc0\x85\x9c\x4e\xa9\x54\x8d\xad\x9d\xa5\x30\xed\xcc\xa0\x13\xc6\x09\xbf\x26\x94\xe3\xba\x34\x8a\x12\x80\xa9\x82\x8e\x48\xa6\xe9\x00\x9b\x5c\x26\x77\x86\x93\x42\x09\xba\x36\xcc\x99\xfb\x06\x3d\x0b\x51\x4a\xe5\x1a\xe4\x35\xb5\x0f\x93\x91\xd1\x14\xcb\xcc\x01\x81\x32\x36\x19\xda\x2f\x1c\xf0\x92\x71\x07\x9c\xd0\x3e\x19\x29\xb8\xd6\x54\x25\xa7\xd6\xa7\x56\xe4\x26\x24\xbb\x41\x6c\x32\x01\x2f\x4b\xf6\xc8\x7d\xb1\xc8\x3b\x84\x8e\xe6\x52\xee\x38\x27\x9d\xca\x06\x30\xac\xe0\xba\x00\x19\x09\x92\x9a\x85\x61\x25\xa0\x77\x66\x4d\x98\x10\x7d\x2b\x1a\xcf\xc2\x30\xfb\x79\x32\xdb\x3d\xc2\x84\x60\x60\xe4\xcc\xde\x30\x48\x99\x80\x62\x9a\x0d\xb8\xb9\x27\xab\x2a\x0c\x6b\x9c\xd0\x35\x03\xed\x63\xd8\xf6\xac\x83\x5a\xe0\x58\x47\x3a\xaa\xed\xf3\xc2\x52\xc8\xde\x6e\x99\x64\x4e\x99\x65\x4e\x99\x2f\x8f\x14\x7a\x49\xdb\x31\x2d\x84\x78\x03\x4d\x51\xfa\xe0\x80\x61\x52\x22\x40\x1c\x6d\x24\x57\xa6\x02\x79\xe2\x94\x34\x71\xca\x34\x71\xaa\xee\xd8\xe9\x21\xa8\x7b\xee\x9c\x88\x4e\x52\xa0\xaa\x32\x3b\xc4\x95\xd0\x85\x71\x11\x2e\xc9\xf9\xd3\x82\xa8\x4e\x2d\x75\x3c\x8d\x5a\x40\xfa\xe8\x71\xd0\x82\x59\x82\x78\xf4\xbe\x52\xdc\xd2\x76\x14\xb4\xce\x78\x52\xba\xa8\x87\x10\x43\x08\x9e\x3a\x40\x3d\xb0\x2e\xd6\x09\x61\x6c\x5c\x04\xf5\xd0\x46\x63\xe9\xa0\x00\x11\x0f\xfd\x8c\xce\x22\x76\xdb\x8b\x10\x6b\x51\xca\x0d\xc5\x1b\x4d\xa3\x42\x39\xa0\x46\x61\x4d\x36\x99\xc2\x9a\xec\x04\x85\xb5\x2b\x56\x04\x21\xd1\x48\xcf\x31\xd5\xe8\xc4\xa5\x1d\xa4\x6e\x6c\x34\xd1\x39\x28\x22\x35\x3c\x6e\x0e\xd2\x3e\xf6\x34\x3c\x22\x48\xe2\x60\xea\xb7\xd0\xe6\x3e\x45\xfd\xca\x58\xde\xc4\xb8\xb2\xe0\x2a\xd6\x6e\xfc\xc4\xf1\x56\x94\x55\x39\xc2\xb4\xfe\x43\x51\x6b\x2e\x63\x87\x05\xda\x8e\x7a\x4c\xb4\xcf\x0e\x40\xb6\x0a\xd6\x11\x2f\xdb\x90\xa4\x69\x1f\xf0\x72\x95\xa2\xa8\xa5\x3b\x3f\x88\x74\xe7\x96\xd3\x1c\xe7\x0a\x1f\x9d\xf0\x03\xbc\xca\x60\xaf\x26\x28\xa5\x6d\xbe\xc8\x08\x1a\x41\x5b\x1c\x97\x20\xb1\xc0\x41\x91\xb4\x2b\x17\x0f\xd6\x80\x95\xc2\x3a\xc7\xd9\xec\x5b\x9a\x4a\x29\x6e\xbb\x17\x03\xcb\xeb\xf8\x6a\x33\x92\x91\x1c\xd0\x53\xb2\x43\x74\x9e\x1d\x26\x76\xa3\xe7\xce\xb3\xcd\x4b\x64\x4f\x2b\x92\x59\x1c\xc2\x43\xdf\xf6\x21\x3c\x78\x77\xc1\x93\x70\x16\x74\x29\x74\x9d\x91\xce\x14\x8a\xe3\x32\x65\x1f\x1a\x68\x40\xe8\xca\xa4\xb4\x03\xdf\xb8\x6c\x54\x6c\xd0\x92\x7d\xde\x91\xed\x56\xa7\x2f\x1a\x19\x9d\x3b\xd3\x33\x5f\x8f\xa9\xc5\x62\x01\x65\x48\x5b\xbc\xaa\xc2\x09\xbd\x1e\x76\x10\xcf\xf6\xa4\xe5\x8e\xab\x01\xcb\xb6\x45\x15\x53\xfc\xe9\x73\xbd\x42\x0f\x7a\xdb\x46\x23\x21\xd3\xe5\x5c\xfb\xa8\x08\x87\xea\x2a\xee\xc8\xd1\xce\xcc\xe6\x4e\x06\x3f\x65\x1a\x8e\x99\x86\xa3\xa6\xe1\x27\xa7\xb7\x16\x10\xdf\xea\x10\x8a\xc2\x28\x1b\x21\xcd\x5d\x08\x8a\x6c\x7f\x04\x45\x92\x2c\x82\x32\xe4\x31\xd5\xae\xe2\x18\x93\x5b\x48\xc2\x22\xb4\xc3\xee\xc8\x71\x2a\x4d\xf7\x5d\x8b\x53\xe8\x63\x5c\x80\xaf\x68\xf1\xbb\xc5\xb1\xec\x68\x99\x26\x93\x68\x32\x89\x74\x84\xfc\xf9\xf4\x35\x00\x87\xaf\x01\x98\xbf\x06\x60\x5a\xf3\xe3\xb0\x8e\xc7\x50\x81\xa7\x22\x0e\x72\xc5\x69\x61\x8f\xc3\xc2\x1e\xf3\xc2\x1e\x87\x85\x7d\x4b\xe5\x22\x03\x89\xa4\xf4\xc7\xf1\xd2\x1f\x93\x4a\x1f\x07\x65\x3d\x8e\x97\xf5\x2d\x2d\xca\x50\x86\x3b\x72\x7b\x85\x49\x2d\x8f\x59\x2d\x9f\x17\x68\xb8\x50\x31\x37\xe2\x22\x09\xd2\x85\x2a\x69\x17\x8d\xd8\x45\xe3\x4b\x52\x93\x86\x84\x28\x3d\x7a\x1e\x2b\x80\xee\x08\x8d\x97\x1c\x5b\x7c\x42\x88\x3c\x37\x0e\x32\x60\x70\x04\xd1\xda\x22\x9a\xa4\x3b\xc6\xf2\x98\xa9\xd1\x4a\x51\xc4\x5d\x40\xea\x89\xb4\xf8\x4c\xdf\xd1\xf3\x57\xf4\x80\x63\x06\x5b\x2b\x7a\xf4\x6d\x20\x19\x98\x94\x41\xa1\x3d\x72\x7d\x15\x68\xa2\x6d\x8d\x34\x07\x7b\xe8\xe5\x7c\x4d\xeb\x7e\x7a\x25\xd7\x6e\x83\xac\x16\xee\xb8\x12\x24\xe4\x5c\x0d\xde\xac\xc0\xb9\x46\x0f\xf8\xe1\xa0\x83\x7b\xbe\x8e\xc6\x31\x59\x1c\x95\x1d\x54\xe9\x5b\x76\x4c\x5f\xa4\x87\xa3\x8c\xe9\x8c\x74\x2a\xdf\xbb\xd3\x27\x3e\xcb\xae\x53\x86\xb7\x29\xcd\xe0\x8d\xbc\xa1\x31\xd8\xd0\xe2\x21\x2d\x9b\x3b\x14\x17\xbe\xa1\x73\x6d\x81\xc6\xac\x37\x10\x59\xd6\x6e\x92\xc9\xaf\xe8\x5d\xd4\x4a\xa5\xe1\x1b\x4e\xf2\x13\x0a\xe2\xbe\x0e\x88\xdc\x68\xb4\xb5\x5c\x02\x56\xdd\x2d\x79\x4b\x4d\xf9\xf0\x73\xd4\xfc\xea\xea\xe6\xb7\xe9\xa6\xdb\xd5\xed\x4d\xf9\x46\xba\x30\x4a\x81\xf6\x41\x7c\x23\x20\x74\x21\x9b\xb2\xbd\x4e\xff\xeb\x63\x47\xc1\x13\xa1\xd2\xdb\xfe\xec\xe6\x3d\xec\x72\x40\x64\x2b\xc5\xb2\x32\xb7\xe7\xb3\xca\xd4\x3b\x5e\xc0\xee\xf3\xd7\x8d\x94\x5f\x62\x41\xa7\x45\x09\xfd\x2b\x38\x0d\x32\x48\x9d\xfc\xdf\x59\xab\x6f\x77\xe3\xc0\xa1\xd1\x5c\x86\x23\x68\x77\x87\xb7\x63\x74\xf3\x09\x53\x2c\xe1\x69\xfa\xf3\xe1\xd1\xab\x0d\xb1\xe2\xb2\x01\x4a\x18\xdb\x8f\x18\xfe\x2e\xfe\xd9\xaa\x9c\x7c\x24\x8a\xbf\xf5\xda\x3d\x83\x79\x67\x3f\xb6\x79\xc7\xaf\x8f\x8f\x7e\x9a\xfd\xf8\x36\x9e\xfd\xe0\x61\x7a\x32\x7b\x73\xf2\xe6\xf4\xa7\xd9\x9b\xff\x7f\x39\x3b\xb3\xf2\x62\xf6\xbd\x72\x7c\xa7\x8d\xbb\x62\x41\xb4\x4f\xa6\xd6\x16\xa7\x27\xb2\xcb\xcc\xed\x07\xd8\xdd\xf3\x25\x77\x8a\x8d\x7d\x6f\x0a\xfc\x67\x8a\xa7\xc4\xe8\x0d\x7f\xef\x80\x2f\xad\x11\x9a\x7c\x6b\x2d\x16\x50\xc9\x06\x17\x49\x8d\x2c\xf1\x99\xfd\x14\x3f\x17\xb7\xed\xcd\x37\xf1\xaf\xf6\x58\xb1\x60\xdd\xe5\xd1\x33\x5b\xa1\xe2\x0d\xd5\x64\xfa\xb4\xf9\x75\xc1\x57\x5a\xa1\x4c\x29\xaa\x35\x93\xa5\x7f\x71\x2b\xfa\xf6\xd9\xe9\x3e\x16\xe1\xeb\x37\x47\xcc\x16\x82\x29\x25\x0c\xa3\xb7\x67\x69\x4f\x52\x9a\xb5\x5d\xae\xd1\xa1\x06\x64\x42\xa3\x77\xcf\xec\x8e\x30\x81\xde\x03\x01\x3c\xed\xe3\x03\x63\x41\xb3\xfb\x35\x5b\x70\x5d\x4a\x60\xfc\x3b\x2f\x6e\xc1\x2d\xb5\xe5\x7c\xfe\x9e\xbd\x9d\x9f\xb3\xdb\x8b\xf9\x5b\x76\x77\x31\xbf\x3d\xff\x65\x1f\x63\xc8\xaf\x39\x0a\x69\xf4\xf0\xcb\x37\xfd\xac\x55\x61\x61\x74\x25\xea\x88\x95\x69\x34\xe9\xa6\x37\xcb\x15\x5a\x11\xdf\x8c\xa5\x31\xcb\xc6\xb2\xb2\x30\x66\x29\xe2\x8d\x3f\x7d\x5c\x99\x15\xb0\x84\x09\x73\x65\xde\x10\x4f\xbf\x22\x4b\xe0\x1d\xfc\xaf\xfb\xee\x87\xc6\x78\x9e\x5c\x41\xf9\xd2\x28\x2e\x34\x7d\xdf\x41\xf0\x0b\x83\x3e\xa3\x34\x7d\x73\x95\xa6\x8e\xef\x4d\x74\x86\x1d\x9a\xc5\x97\x25\x5c\x70\xf7\x15\x55\xfc\x9e\x01\x71\xf7\xc7\x1d\x9b\xbf\xbd\xbe\x7c\xb7\x4f\x28\x74\xeb\xbf\xfb\xd4\x0f\xbe\xa8\x92\x98\x1d\x1f\x9f\x1c\x9d\x1e\xcd\xce\x3e\x55\xf9\x5e\xcf\xef\x7e\xbd\x78\xfb\x6d\x0a\x8a\x2f\x76\xd4\xab\xaf\xca\x18\xcf\xe7\xc6\xe3\xef\xe4\xc6\x60\xd2\x61\x7b\xeb\x0b\x1e\xdc\xa1\x71\x25\x38\xa1\xeb\xc3\xca\xb8\xc3\xd6\x80\x43\x81\x87\xa5\xa8\x2a\x70\xb0\x8d\xf6\xef\x91\x69\x77\x8b\xe8\xcf\xfa\xdd\xc1\xbd\x31\xcf\x9f\x8b\xc3\x44\xff\x76\x73\xf3\x61\xaf\x9d\xb7\x70\x2f\x35\xf5\xf3\x5f\x6e\xf7\x9c\x7c\x77\x15\xc7\x94\x29\x9b\x78\x13\x1f\x4e\x8d\x8c\xaa\x28\xf7\x12\xa6\x5e\xdf\xbc\xfd\xd7\xd5\xc5\x5e\x55\x69\x51\xbc\xcc\x2a\xbd\x9f\x9f\x9f\xef\xb5\x48\xcb\x22\x7e\xa3\xe9\x3e\xf9\xd6\x40\x7e\x8c\xb7\xbd\x95\xca\x7e\x9d\xf0\x6c\x97\x58\xdf\xc2\x45\x1f\x6e\xe7\xe7\x7b\xad\xae\x30\x96\xfc\xea\xc6\x82\x53\x2f\x62\xc8\xed\xfc\xb7\xcb\x9b\xbd\x6a\xf4\x91\xdf\x3a\xe1\xf0\x97\xae\xdb\x6b\xe7\x97\xb0\xf1\xc3\xe5\xf5\x5e\x4b\xb5\x5a\x70\x5d\x37\xf6\x65\xe6\xfe\xe1\x0f\x76\x7e\xf3\xee\xef\x97\xff\xd8\xc7\x82\x1a\x3c\x53\xa0\xac\x91\xa2\x88\x3f\x93\xa1\xbf\xb3\xc6\x44\xe2\x25\x2c\x7d\x77\xb9\xdf\x86\xda\x14\xce\x2f\x30\xf5\xab\x9b\x2f\x59\x9c\x83\xc9\x9f\x07\x1f\xff\x1b\x00\x00\xff\xff\xba\xae\xd6\x53\xc0\x32\x00\x00")

func allowPerfSyscallsJsonBytes() ([]byte, error) {
	return bindataRead(
		_allowPerfSyscallsJson,
		"allow-perf-syscalls.json",
	)
}

func allowPerfSyscallsJson() (*asset, error) {
	bytes, err := allowPerfSyscallsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "allow-perf-syscalls.json", size: 12992, mode: os.FileMode(0644), modTime: time.Unix(1616434181, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0x8f, 0xfa, 0x96, 0x29, 0x81, 0xdf, 0x5e, 0x2c, 0x13, 0x56, 0xb1, 0x98, 0xdc, 0xb0, 0xfe, 0x2d, 0xba, 0x59, 0x1c, 0xe1, 0x68, 0x8f, 0x67, 0x12, 0x44, 0xa8, 0x9d, 0x34, 0xfd, 0xce, 0x6c}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"default.json":             defaultJson,
	"fuse-container.json":      fuseContainerJson,
	"allow-perf-syscalls.json": allowPerfSyscallsJson,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"allow-perf-syscalls.json": &bintree{allowPerfSyscallsJson, map[string]*bintree{}},
	"default.json":             &bintree{defaultJson, map[string]*bintree{}},
	"fuse-container.json":      &bintree{fuseContainerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
