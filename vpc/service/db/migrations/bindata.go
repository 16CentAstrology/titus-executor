package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __1_init_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\x0e\x71\x0c\x0a\x51\x08\x09\x72\xf4\x0b\x76\x74\x0e\xf1\xf4\xf7\x53\xb0\xe6\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x28\x4d\xca\xc9\x4c\xd6\xcb\x2c\x88\x4f\x4c\x49\x29\x4a\x2d\x2e\x4e\x2d\xc6\x26\x5f\x52\x54\x5a\x5c\x92\x9a\x12\x0f\xe1\xc6\x67\xa7\x56\xc2\x95\x45\x06\xc0\x55\x21\x64\xe3\x4b\x2a\x0b\x52\xad\xb9\x9c\xfd\x7d\x7d\x3d\x43\xac\x01\x01\x00\x00\xff\xff\x61\xd8\x8d\x0d\x84\x00\x00\x00")

func _1_init_down_sql() ([]byte, error) {
	return bindata_read(
		__1_init_down_sql,
		"1_init.down.sql",
	)
}

var __1_init_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xd1\x8a\x9c\x30\x14\x7d\xf7\x2b\xee\xdb\xce\x42\x29\xb4\xb0\x0f\x65\x9e\xd2\x99\x50\xa4\x4e\xdc\x6a\x84\xce\x53\xc8\x98\xcb\x4c\x98\x1a\xc5\x24\xb4\xee\xd7\x17\x5d\xeb\x6c\x4b\xca\x9a\xbd\x2f\xa2\xe6\x9c\x24\xe7\x9c\x7b\x4b\x4e\x0a\x0e\xbc\x20\xac\x24\x3b\x9e\xe6\x0c\xb6\xc9\xae\xa0\x84\x53\xe0\xc7\x47\x0a\x9d\x3f\xfd\xd0\xf5\xfb\xe7\x87\xb8\xe2\x20\xdc\xd0\x21\x90\x12\x28\xab\x0e\xb0\x49\x00\x00\xee\x50\x7d\x7c\x78\xf8\xf0\xe9\x6e\x7a\xbb\xdf\x26\x0b\x05\xf9\x9c\x2d\x1c\xba\x13\x52\xa9\x1e\xad\x45\x3b\x03\x5f\x2d\xad\xc0\x7b\xad\x80\xe5\x1c\x58\x95\x65\xef\xd6\xc1\xe4\x13\x38\xfc\xe5\x56\xae\xee\xf1\xac\x5b\x13\x83\xb0\xfe\x64\xd0\x09\xad\x62\x40\xb2\xae\x5b\x6f\x5c\x0c\xe4\x26\x19\x68\x83\x6b\x51\x97\xb6\x41\x81\x46\xc7\xec\x74\x69\xad\x13\x37\x97\xe1\x34\x38\x94\x6f\xc3\x0a\xab\xcf\x46\x3a\xdf\x63\x14\x4b\x83\xd6\xca\xf3\x9b\x30\xff\xee\x98\xdc\x2f\x21\xae\x58\xfa\xad\xa2\x90\xb2\x3d\xfd\x0e\x2f\x13\x28\x74\xf7\x47\xda\x9c\x05\x23\x5a\x95\x29\xfb\x02\x27\xd7\x23\xc2\xe6\xf6\x67\x8c\x37\xc9\x38\x2d\xe6\x74\xe7\x2c\x3b\x86\xf0\xd3\x0d\xc8\x7e\x0f\xbb\x9c\x95\xbc\x20\x29\xe3\x7f\x1f\xa0\x1b\x75\x7e\x2c\xd2\x03\x29\x8e\xf0\x95\x1e\x61\xa3\xd5\x48\x1e\x6c\x1e\xd7\x7b\xeb\x50\xbd\x90\x79\x75\x0f\xcd\xb5\xb8\x1a\xdb\x4c\x73\x8d\x2e\x1b\xd9\x60\x4c\xaa\xe6\xaa\x7b\x94\xe3\xe1\xa5\x03\xa7\x1b\xb4\x4e\x36\x1d\xfc\xd4\xee\xd2\xfa\xe7\x2f\xf0\xd4\x1a\x8c\xe3\xbc\xe2\x30\x4d\xa2\xf0\x80\x4a\x26\x21\xff\x67\x53\x40\xcc\x90\x5b\x81\x65\x01\xd3\xae\x38\x4c\x13\x2f\x3f\x1c\x52\xbe\x4d\x7e\x07\x00\x00\xff\xff\xa8\x99\x59\xef\x51\x05\x00\x00")

func _1_init_up_sql() ([]byte, error) {
	return bindata_read(
		__1_init_up_sql,
		"1_init.up.sql",
	)
}

var __2_branch_enis_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xcd\xaa\xc2\x30\x10\xc5\xf1\x7d\x9f\x62\xde\xa3\xab\xdc\x34\x17\x02\xf6\x83\x66\x16\xba\x0a\x63\x3a\xd8\x62\x1b\x8b\x33\x79\x7f\x57\x82\x5d\x88\xeb\xdf\x39\xfc\x03\x9a\x11\x01\x47\xd3\x05\x63\xd1\xf7\x5d\x5d\x35\x63\x3f\x00\x9a\xbf\x93\x03\x49\x33\x4f\x65\xe5\x29\x2a\xc9\x5d\x0e\xb6\xec\x71\x25\xd1\x58\x84\xa7\x03\xf8\x7f\x70\x67\x1f\x30\xc0\xf5\x49\x39\xcd\x91\xf3\x12\x49\x95\xd2\xbc\x71\x56\x01\x6b\x82\x35\x8d\x83\x9f\xaf\x2f\x53\x4a\xe9\x51\xb2\xc6\x8d\xf6\x7d\xc9\xb7\xb7\x5d\x06\xf7\x59\x14\x25\xe5\xba\xaa\x6c\xdf\xb6\x1e\xeb\x57\x00\x00\x00\xff\xff\xe0\x35\x32\xce\xe9\x00\x00\x00")

func _2_branch_enis_down_sql() ([]byte, error) {
	return bindata_read(
		__2_branch_enis_down_sql,
		"2_branch_enis.down.sql",
	)
}

var __2_branch_enis_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcb\x6e\xe3\x3a\x0c\xdd\xfb\x2b\xb8\xab\x2f\x90\x2f\x68\x57\x41\xd1\x45\x17\x69\x2f\x52\xcf\x5a\x60\x2c\xa6\x15\x2c\xd3\x1e\x89\xea\x24\xfd\xfa\x81\x9d\xd8\x91\x1f\x79\x8d\x57\x11\x79\x28\x92\x87\x87\xca\x47\xb6\x5c\x67\x90\xad\x97\x6f\x1f\xcb\xe7\xec\xf5\xfd\x0d\x9e\x92\x24\x77\x84\x42\x20\xfb\x9a\x60\xe3\x90\xf3\x2f\x45\x6c\x94\x97\xc6\x8a\x1e\x88\x43\x09\xe9\x43\xe0\x82\xab\x3f\xfc\xb0\x80\x07\x14\xc1\xfc\x8b\x74\xf3\x3b\x70\x7f\xfa\x2f\xba\x0c\x37\x96\xc0\x37\xe6\x60\x49\x2b\x41\x5f\xf8\x24\x4d\x00\x00\x8c\x06\x4f\xce\xa0\x05\xae\x04\x38\x58\xdb\x9a\x9b\x2f\xaf\xd8\x8b\x43\xc3\x32\x8e\x55\x75\xd1\xa3\x9a\xaf\x76\xa6\x44\xb7\x87\x82\xf6\x8b\xd6\xc1\x58\x12\x08\xed\xa4\xbf\xf5\x60\xb7\xe8\x45\xb9\xc0\x20\xa6\x24\x2f\x58\xd6\xa0\x69\x8b\xc1\x0a\x3c\xff\x5a\xaf\x5f\xde\x32\x95\xbd\xae\x5e\x3e\xb2\xe5\xea\xff\x24\xea\x20\xb0\xf9\x1d\x08\x0c\x6b\xda\x4d\x8a\x69\x92\xa9\xd0\xfa\xda\x24\x15\x8f\x21\x90\x36\x98\x09\x23\xa6\x56\x6d\x41\xc1\x93\xee\xe8\xa8\x15\x6a\xed\xc8\x7b\x30\x4c\x72\x91\x94\x38\xfc\x2a\x23\x3d\xf2\xd4\x7a\xe4\x40\x6b\xab\x1c\x65\xea\x9d\x19\xcf\x39\x5a\x06\xe5\x18\x3d\x62\x24\xf6\x42\x6a\xf4\x84\x8c\x93\xd8\x3a\x69\x9c\x2c\xc3\x51\xce\x71\x11\x45\xab\xba\xa0\xfd\x65\x32\x0e\x89\xb5\x42\xb9\x45\x08\x87\x18\xcc\xf3\x2a\xb0\x28\xa3\xe7\x84\xe5\xc3\x86\xa9\x77\x9e\xe3\xee\x78\xd3\x4f\x04\xfa\xae\xf3\x2e\xea\x2c\xb3\x71\x73\x13\x62\x23\xe7\x15\x5e\xd5\x61\x37\x4b\x62\xb9\x6f\xfb\xe6\xaf\xb8\x2a\xb9\x7f\x9b\xdf\x20\x45\xdc\x79\x04\xd9\x0e\x33\x3b\xda\x92\x23\xce\xc9\x0f\x54\x14\x43\x2a\x06\x4d\x96\x84\x20\x47\x9f\xa3\xa6\xe3\xd8\xda\x67\x6d\xf2\xce\x75\x52\xe8\x9f\xb9\xc7\xc7\x09\x66\x38\x53\x71\x81\x8b\xbe\xd5\x6e\xfe\x3b\x30\x2c\xf4\x49\xee\x86\xd1\x9e\xe9\xfb\xec\xb4\x63\x3c\xa4\x27\xfb\x9d\x99\xfa\xc2\x95\xd1\xbb\x1b\x93\xf5\x31\x8b\xa6\xc7\x89\xe2\xba\x4d\x29\xb1\xae\x0d\x7f\xde\x25\xb5\x51\xec\x55\x8d\x1d\xf1\x73\x2b\x89\xdf\x68\x2c\x6e\x8c\x35\xb2\x57\x3f\x15\xcf\xfe\x21\x44\xeb\x77\x71\xa3\xaf\x3f\x7f\xe3\xca\xbb\xf3\xa4\x8c\x11\xc9\xa3\x38\x48\x8f\x86\xc5\xb4\x81\x26\x75\xf2\xfc\xbe\x5a\xbd\x66\x4f\x7f\x03\x00\x00\xff\xff\x44\xa0\xbb\x7a\xbd\x07\x00\x00")

func _2_branch_enis_up_sql() ([]byte, error) {
	return bindata_read(
		__2_branch_enis_up_sql,
		"2_branch_enis.up.sql",
	)
}

var __3_branch_enis2_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcb\x31\x0a\x03\x21\x10\x05\xd0\xde\x53\xfc\x7b\x58\x4d\x86\x21\x08\x3a\x26\x3a\x5b\x6c\x25\x01\xb7\x10\x52\x24\x98\xdc\x3f\x45\xb0\xd8\xfa\xf1\xaa\x51\x31\x58\x21\xad\xc4\x16\xb2\x7a\x47\xd1\xa4\xa0\xca\x7d\x13\x65\xc1\x78\xb5\xe7\x63\x7e\xda\x77\x1e\xbd\x8d\xde\xe6\xf1\x06\x55\x04\x35\xb9\x4a\x81\x66\xf0\xce\x51\xd6\x33\xba\xc4\x73\xc2\x1f\x38\xc7\x2d\x29\x46\x87\xed\x37\x59\xdf\x3b\xce\x29\x05\xf3\xee\x17\x00\x00\xff\xff\x1f\x7d\x3b\xe6\x8a\x00\x00\x00")

func _3_branch_enis2_down_sql() ([]byte, error) {
	return bindata_read(
		__3_branch_enis2_down_sql,
		"3_branch_enis2.down.sql",
	)
}

var __3_branch_enis2_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcb\x31\x0a\x02\x31\x10\x46\xe1\x7e\x4f\xf1\xdf\x23\xd5\x38\x4c\xb1\x90\x4c\x34\x99\x2d\xb6\x0a\x4a\x16\x19\x10\x51\xb2\xde\xdf\x42\x2d\xac\xdf\xfb\xaa\x51\x31\x58\x21\xad\xc4\x36\x67\x0d\x13\x45\x93\x02\xa3\x43\x14\xf8\xa3\xdd\xce\x63\x6f\xaf\xb1\x75\x7c\x02\xe7\xb8\x24\x85\x77\xd8\x7a\x14\x5c\xfc\xea\xf7\xfd\xa7\xaa\x9c\x16\x51\xfe\x87\xcd\x7b\x1b\xdb\x13\x54\xbf\x37\x34\x83\x57\x8e\x12\x26\xce\x29\xcd\x16\xa6\x77\x00\x00\x00\xff\xff\x36\xf4\xf0\x4f\x88\x00\x00\x00")

func _3_branch_enis2_up_sql() ([]byte, error) {
	return bindata_read(
		__3_branch_enis2_up_sql,
		"3_branch_enis2.up.sql",
	)
}

var __4_branch_eni_last_used_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x28\x49\x4c\xca\x49\x55\x48\x2a\x4a\xcc\x4b\xce\x88\x4f\xcd\xcb\x8c\xcf\x49\x2c\x2e\x89\x2f\x2d\x4e\x4d\xb1\xe6\x02\x04\x00\x00\xff\xff\x07\xf1\x97\x58\x21\x00\x00\x00")

func _4_branch_eni_last_used_down_sql() ([]byte, error) {
	return bindata_read(
		__4_branch_eni_last_used_down_sql,
		"4_branch_eni_last_used.down.sql",
	)
}

var __4_branch_eni_last_used_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x41\x0a\x83\x40\x0c\x45\xf7\x73\x8a\x2c\x5b\xe8\x0d\x7a\x98\x21\xc6\x2f\x1d\x1c\xa3\x24\x11\xea\xed\x8b\x2e\xec\x08\x5d\xf4\xaf\x42\xde\xe7\x7d\x31\x70\x80\x82\xbb\x0a\xea\x8c\x55\x5e\x19\x5a\x72\x65\x8f\xbc\x3a\xfa\x74\x4b\x44\xd4\x20\x0a\xbc\x83\x74\x0e\xd2\xb5\xd6\x03\xee\x91\x59\x3d\x8c\x8b\xc6\x4f\x4d\x5e\xc6\xb3\xba\x67\xb1\x32\xb1\x6d\x34\x62\xfb\x5b\xf1\x7d\x7a\x73\xe7\xe1\x6a\x36\x0c\x30\xa8\xc0\x1b\x8b\x5f\x2a\xb3\x52\x8f\x8a\x00\x09\xbb\x70\x8f\xc7\x81\xcf\x25\x8a\x32\xc1\x83\xa7\x25\xdd\x9f\x29\x7d\x02\x00\x00\xff\xff\xfd\x16\x39\x3c\x24\x01\x00\x00")

func _4_branch_eni_last_used_up_sql() ([]byte, error) {
	return bindata_read(
		__4_branch_eni_last_used_up_sql,
		"4_branch_eni_last_used.up.sql",
	)
}

var _bindata_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\x4b\x6f\x23\xc7\xf5\xc5\xd7\xe4\xa7\xe0\x5f\x80\xff\x90\x80\x81\xd2\xef\x87\x81\xd9\xd8\xc8\x36\x8b\x6c\x53\x81\x50\xdd\x5d\xad\x10\x19\x3d\x4c\x4a\x76\xd9\x81\xbf\x7b\xf0\xbb\xe7\x12\x92\x67\xa8\x38\x1e\x65\x41\x89\x6c\x76\xd7\xe3\xde\x73\xce\x3d\xb7\xf8\x18\xe7\x7f\xc6\xdb\xb4\xbb\xdb\xdf\x1e\xe2\xd3\xfe\xe1\xfe\xb8\xdd\xee\xef\x1e\x1f\x0e\x4f\xbb\xcb\xed\xe6\x62\xfa\xf9\x29\x1d\x2f\xb6\x9b\x8b\xf9\xe1\xee\xf1\x90\x8e\xc7\x3f\xdd\xfe\xb2\x7f\xe4\xc2\x7a\xf7\xc4\xbf\xfd\x03\x7f\x8f\x4f\x87\xfd\xfd\xed\xf1\x62\x7b\xb5\xdd\xae\xcf\xf7\xf3\x6e\xda\xdf\x2f\xf1\x29\xde\x1c\x52\x5c\x2e\x79\xb7\xfb\xdb\xdf\x19\xeb\xc3\xee\x3e\xde\xa5\x9d\xee\xbf\xda\x5d\x9e\xae\xa6\xc3\xe1\xe1\x70\xb5\xfb\xd7\x76\x73\xfb\x8b\x7d\xda\x7d\xfb\x71\xc7\x54\xd7\x7f\x49\x3f\xfd\x35\xc5\x25\x1d\x2e\x6d\x2d\x7c\xfe\xee\x79\x5d\xd3\xc1\x86\xbd\xba\xda\x6e\xf6\xab\x3d\xf0\x7f\x1f\x77\xf7\xfb\x4f\x0c\xb1\x39\xa4\xa7\xe7\xc3\x3d\x1f\x3f\xec\xd6\xbb\xa7\xeb\x3f\x33\xfa\x7a\x79\xc1\x40\xbb\x6f\x7e\xf8\x76\xf7\xcd\x8f\x17\x5a\x89\xcd\x75\xb5\xdd\xfc\xba\xdd\x6e\x7e\x8c\x87\xdd\xf4\xbc\xee\x34\x8f\x26\xd9\x6e\x6e\xb4\x9c\x8f\xbb\xfd\xc3\xf5\xf7\x0f\x8f\x3f\x5f\xfe\xff\xf4\xbc\x7e\xd8\xdd\xfe\x72\xc5\x5a\xaf\xbf\xff\xf4\x70\x4c\x97\x57\xdb\xff\xdd\x32\xfc\xa9\xe9\x79\xbd\xfe\x8e\x95\x5c\x5e\x7d\x60\x88\xed\xaf\xdb\x2d\x2b\xbc\xb9\x29\x6f\xf6\xf7\xfb\xa7\x9b\xe5\xe1\xa7\xfb\x9b\xe3\x0f\x9f\x76\x1f\x3d\xb6\x97\x17\x21\x97\x6b\xc8\xc3\x14\x72\x31\x84\x5c\x14\xe7\x5f\xeb\x1a\x72\x11\x43\x2e\x52\xc8\x7d\x19\x72\x31\xeb\x73\x5b\xfa\x73\x63\xc8\x7d\x15\xf2\xda\x84\x5c\x4c\x21\xf7\x5d\xc8\x7d\xa3\xfb\xd7\x52\xd7\xd7\x3e\xe4\xb6\x0e\x79\x2a\x42\x4e\x9d\xee\xe7\xb9\x95\xff\x6b\xc8\x6d\xa1\xb1\x18\x9f\x67\xb9\xce\xfb\xb6\x0d\xb9\x1a\xf4\x6a\x96\x90\xe7\x18\xf2\x3c\x86\xdc\xcc\x21\x2f\x5d\xc8\xf3\x14\x72\x35\x87\x3c\xf0\xfd\xaa\xeb\xcd\x18\x72\xc5\x3d\x31\xe4\x6a\x09\xb9\x4a\x21\x37\x49\xef\xe7\x2e\xe4\xaa\x0b\xb9\x65\xce\x2a\xe4\xb6\x09\xb9\x65\x2f\x73\xc8\x63\x15\xf2\x18\x43\x2e\x7d\x4d\xa9\xd4\xfd\x5d\x1f\x72\x64\xfd\xcc\xc7\x3d\x6d\xc8\x4d\x1b\x72\xc1\xe7\xc2\xd7\x58\x86\xdc\x35\x21\xa7\x3a\xe4\x86\x35\x45\xc5\x82\x39\xe2\x12\xf2\x34\x86\x3c\xce\x21\xaf\x4b\xc8\xbd\xbf\xea\x25\xe4\xa6\x0e\x39\x12\xcf\xd2\x5f\xaf\x62\xce\xab\x2b\x43\x5e\x86\x90\x87\x25\xe4\x62\x09\x79\x68\x5e\xe7\xe6\xe2\x44\x9f\xcf\x73\x7c\x79\x96\x2a\x27\xa4\xbc\xe6\xda\x76\xb3\xf9\x02\x21\x1f\xb6\x9b\xcd\x85\xae\x5d\x73\xed\xfa\xf8\xc3\xa7\x8b\x0f\xdb\xcd\xd5\x17\x98\x7a\x7e\xfc\x6a\x44\x11\x0d\xa2\xbf\x94\x21\x0f\x51\x9f\xeb\x22\xe4\xb2\x51\x74\x40\x4c\x35\x85\x9c\x52\xc8\xcb\x14\xf2\x4c\x16\x2b\x65\x76\x6a\x84\x24\xb2\xd4\xb5\x21\x8f\xdc\x43\x66\x46\x21\x29\x36\xca\xf8\x32\x87\xdc\x45\x45\x8d\xe7\x41\xe0\x3c\x84\x3c\x0e\x42\x0e\x68\xe1\x7d\x09\xaa\xc8\x62\xa3\xb1\x6d\xce\x3e\xe4\x92\xac\x2f\x21\xa7\x29\xe4\x6e\x56\x66\x41\x20\x28\x99\x40\xd6\x1a\x72\xac\x84\x68\xd6\xcf\xf3\xa9\xd7\xfb\x7e\xd2\xfd\xac\xe3\xc4\x9e\x89\x7b\x0a\x65\x9c\x7b\xeb\x49\x6b\xe7\x79\x58\x35\x75\x42\x77\x4c\x21\xc7\x42\xeb\x66\xcd\xa9\x08\x79\xee\x43\x6e\x7a\x8d\x35\x82\x9e\x55\x68\x5a\x88\x67\x1b\xf2\x3a\x69\xee\xa1\x0f\x79\x1a\x42\x4e\x95\xe6\x22\x06\xdc\x03\x42\xc7\x42\xe8\x86\x4d\x71\xf2\x35\x15\x62\xcc\x29\x37\xec\x9d\x18\x1a\x4a\xd9\xc7\x10\xf2\xca\x8b\xef\xc6\x90\x3b\x54\x80\xfd\x4f\x21\x2f\xab\xd8\x04\xd2\x0b\xd6\xe0\x28\x87\x69\x25\xfb\x81\x4d\xb5\xb3\x60\x0c\xb9\x4c\x62\x03\xec\x61\xef\x45\x2d\x26\x72\x3f\xd7\x61\x13\x71\xe3\xfd\xc0\x7c\xad\xc6\x69\x07\xb1\x8e\x5c\xa7\xd5\x99\x5f\x86\x9c\x1a\x8d\x5f\xb3\xbe\x59\xf7\xc3\x52\xe2\x97\x5c\x7d\x88\x75\x3b\xe9\xbe\xc1\x15\x68\x4d\x62\x2b\x71\x41\x85\x98\xaf\xab\x42\x6e\x8a\x90\xa7\x4a\xcf\xf3\x4c\xb7\x4a\x19\xc8\x0d\x73\xb1\xd7\x92\x18\x0c\x1a\xab\x9b\xa4\x82\x63\xaf\xdc\x35\x60\xb9\x0c\xb9\xe9\x94\xaf\x34\x4b\xcd\x3a\x9f\xc3\xd6\xda\xeb\x7e\xd4\xa5\x6e\xb4\xf6\xb1\xd1\x5c\x73\xad\xfc\x92\x9b\x79\xd5\x38\x75\x54\x9c\xbb\x5a\xdc\x00\x53\xcc\x6d\x31\x88\x21\xaf\x75\xc8\xe3\x24\xee\xc0\x2b\xf6\x0d\xa6\xc9\x3b\xf8\x24\xef\xb6\x1f\x62\x14\xb5\x0e\x30\x3b\xfa\x5e\x51\x21\x70\x04\x16\xb8\x9f\x35\x82\x8f\xde\x55\x1b\xcc\x2d\xce\x4f\x72\x5c\xd5\x52\x4c\xf2\x01\x17\xc1\x5d\x01\xa6\x7a\x71\x86\xef\x67\xe7\xc4\xea\xea\x39\xcc\xda\x37\xd8\x66\xbf\xe4\x3b\x79\x95\x00\xb3\x28\x38\x78\x18\x3a\xe1\x6c\xa9\xa5\x76\x70\xb5\x4f\xe2\x39\x78\x63\x0d\xcc\x7b\xe2\x11\xf3\xa3\xb8\xfd\x2a\xdd\x81\x33\x25\x15\xa8\xd5\x73\x8c\x8b\x2e\x80\x33\xee\x1d\x92\xc6\x67\x0c\xb0\x88\xba\x46\x62\x89\xa2\x0f\x7e\x6d\xd6\x7f\xf6\x02\x16\xe1\x3e\x7c\x80\xef\xc4\xac\x1f\x35\x3e\x6b\x9a\x51\xf6\x56\x7c\x43\x43\x16\xd7\x94\xbe\x96\x62\x53\x79\x58\xcf\x02\x66\x0a\x7d\x17\xa3\xf6\xce\x7f\xc6\x1f\xbd\x6a\x80\x87\xd8\x6a\xad\x54\x1b\x9e\x9b\x5c\xc7\x6a\x70\xb7\x08\xe3\xcb\x49\x9f\x2a\xe5\xd3\xe2\xb7\x7a\xdc\x1a\xad\x83\x78\x33\x26\x71\x42\x07\xc0\x46\xe3\x79\xe7\x3e\xb8\x65\xd5\xb1\x13\x3e\xac\xd2\x78\x85\x86\x03\xf3\xac\xbd\xc2\x01\xf0\x0c\xef\xa8\x4e\xe4\x05\x2c\x91\x43\xf6\x62\x58\x59\xa5\x45\xc6\xd3\x2a\xe4\x29\x69\x2e\xcb\x5b\xff\x65\x45\x8b\x83\xeb\xf4\x28\x2e\x9b\x8b\x68\xdf\xac\x68\xaa\x30\x5f\x57\xcf\xf4\xec\xeb\x6a\xf6\xfc\x78\xa6\x96\x55\x37\xd3\x21\xde\xcf\xff\xb8\x49\xf7\xfb\xe3\xfb\x6c\x92\x15\x9a\x45\x2f\x12\x3c\x7b\xf0\xcb\x42\x05\x06\x41\x42\x58\xc7\x55\x82\xb3\x24\x01\x10\xc2\x43\x58\x04\x81\xa2\x03\xa1\x20\x8f\x89\x0c\xc9\xef\x24\xa6\x88\x03\x42\x60\xa2\x30\x68\x0c\x80\xc2\xda\xea\xda\xc1\x49\x50\x21\x5d\xa5\xe2\x85\x35\x4a\x2e\xd6\xf5\x28\x10\x01\x32\xb3\x3a\x6e\x3b\x8c\xe4\xb5\x12\xc1\xf8\x14\xe5\xd5\x8b\x1f\xaf\xda\xaf\x93\x68\xf6\x6a\x05\x90\x22\x5e\x6b\x2c\x0a\x08\xf3\x37\x5e\x90\x93\x8b\x43\xe5\x76\xad\x75\x81\x41\x24\x4d\x14\xcb\x90\xab\x56\xf3\x20\x4c\xc4\x0d\xd0\x33\x16\xc5\x86\x3d\xf4\x85\x40\x49\xec\x89\xe1\xec\x85\xce\xe6\x1a\x15\xe3\xb1\x94\x00\x52\xd4\xb8\x0e\xb1\x21\xc6\xe4\x73\x50\x0c\xd8\x1f\x42\x4d\x3c\xd8\x07\xc4\x24\xae\xe4\x20\xae\x02\xb0\x01\x3f\xaa\xc0\x01\x48\x84\x11\xeb\xc7\xbd\xe4\x81\x9c\xb1\x8f\xa9\xd7\xcb\xf6\xd3\x79\x8c\x46\x09\x73\xe5\xfb\x26\x4f\xe4\x1e\x21\x21\xe6\xec\x19\x41\x31\x21\xe9\xbf\xc4\x8c\x89\x76\xa1\xb5\xd5\x95\x8c\x4a\x1a\xcf\xdb\xbc\xf3\x50\xfd\x83\xec\x38\x3f\x88\xd1\xe4\x37\x5f\xbd\xe5\xfd\x7e\xfb\xfc\x7b\x2d\x60\x2b\x2b\x86\xad\x48\x8e\x6c\xca\xed\xb2\xa8\xb4\x60\x01\x27\xb7\x2b\x64\x0a\x59\xe2\x3f\x25\x98\x68\x52\x72\x41\x11\x96\x02\xe6\x50\x6a\x2b\x37\xf7\x94\x50\x4a\x15\xd2\x4b\x29\x88\x64\xa2\xf5\xb2\x50\x2b\x2b\x03\x32\x14\x65\xc7\x28\x83\x48\x2a\x92\x87\xc5\x82\x61\x20\x8c\xfd\xc0\x2c\xd0\xc0\x9c\xb0\x86\xcf\x94\x49\x9a\x86\xc1\x6d\x17\xe5\xb8\x71\x2b\x80\x6d\x00\xbd\xac\x97\x92\x4b\xc9\xef\xbc\x4c\xcd\x6e\xd5\x60\x82\x59\x37\x37\xf7\x58\x41\xc6\x63\x2d\x7d\x2f\x56\x34\x6e\xe3\x88\xc5\xe8\x7b\x21\x4e\x8c\xbb\xba\xfc\xb2\x77\xd0\x46\x29\x61\x1e\x43\x6e\xf4\xfd\x0d\x6a\x32\xb0\x39\xa0\xaa\x71\x3b\x09\x1b\x88\xa9\xd9\xc8\x59\xb6\x88\xb2\x80\x64\x83\x66\xec\x15\xd7\xc9\xa3\x59\x81\x5a\x25\x1a\x56\xc2\x4e\xe2\xc4\xdc\x93\xe7\xcb\x6c\x8d\x37\x44\xbc\xa7\xc4\x75\x6e\x2d\xc9\x21\x79\xc2\xea\xc1\x6e\xf6\x47\x89\x38\x61\x81\x72\x05\x9b\x50\x8f\xd9\xad\x2f\x4a\x44\xa9\x29\xdc\x22\xa1\x12\x8b\xc7\x60\x74\x2c\xc0\x5e\x6b\x8e\x26\xed\x0b\xfb\x04\x83\x28\xf3\xe0\xaa\x77\x85\x89\xae\x76\xdc\x4f\x73\x0a\x0e\x9a\x46\x4c\x1e\x5c\x29\x4d\x6d\xa7\x17\x6b\xc9\x7c\xd6\x08\xa2\x9e\x8b\x5a\x0a\x14\x8f\x7c\xb1\x2f\x9e\x4d\x83\x62\x4f\x73\xc7\xbe\xcd\xda\x77\xda\x9f\x61\x70\xd0\x78\xec\x07\x5c\x32\x3e\x63\xa3\xe2\xf5\x2c\x0e\xb4\xbe\x2e\x62\x43\x35\xa8\xbd\xc1\xc4\x6e\x98\x6d\xe3\x5a\x92\x22\xa1\x2e\x60\x95\xe7\xac\xd5\x88\x9a\xd3\x2c\xed\x28\x8b\x60\x9c\x9b\xa5\x78\xd8\x36\xe2\x0c\x16\x98\x7f\x74\x1b\x6e\x2d\x43\xd4\xf7\x8c\x03\x27\x86\xf5\xa5\x45\xc0\x6e\x8c\xde\xd8\x63\xe7\xd8\x13\x4a\xda\x2d\xca\x23\x7b\x40\xf9\xb1\x21\xc4\x80\x92\xce\x18\xb4\x5a\xe9\x64\xdb\xdc\x92\x9a\x1d\xaa\xc4\xa3\xb1\x79\xb1\xea\x54\x06\xc6\x36\xfb\x59\xc9\xba\xd0\x56\x60\xb3\xb1\x20\xac\x1f\x7c\x62\x2b\x3a\xdf\x37\x9c\xc4\x7e\xcf\x5e\xc9\x88\x1d\xb8\xb1\x36\x61\xd0\x58\x9d\xf3\x87\x7c\xc2\x1d\xd6\xb4\x36\xe2\x12\x38\x63\xdd\x60\xa6\x3e\xc5\x64\x96\x1e\x80\x1d\x94\x7f\xf6\x43\x8e\xd2\x35\x85\x35\x98\xa2\x17\xe2\x69\xe7\x2a\x5d\xb8\x76\x60\xff\x98\x07\x0c\xd8\xa1\xc0\x20\x4c\xb1\x1e\x6c\x94\x71\x34\x2a\x47\xd6\x76\xd5\xde\xa6\x35\x5a\x37\xf3\x62\x7b\xc9\x0b\x9c\x1f\x5d\x07\x89\x2d\xad\xd7\xe2\x55\x15\x1e\x98\x7d\x4f\x3e\x66\xf2\xfc\xc3\xdd\xda\x0f\x4e\x6a\x59\x32\x8b\x81\xcf\x43\x5e\xc0\x10\x16\x17\xbb\x0b\x37\x69\x21\x3a\x5f\x33\x9a\x64\xad\x63\x27\x1c\xa2\xb5\xb6\x5e\x77\x12\xe3\xa9\xcd\x2b\xb4\x3f\x5c\x0a\xda\xc7\x7a\xb0\xb5\xc4\xa1\x76\x6d\xb0\x36\xc1\xe7\x26\x8e\x54\x4c\x3b\xdc\x69\xbc\x75\xf1\x58\x18\xd7\x17\xe9\x05\x71\xb0\xb1\x7b\xaf\xc8\x8e\xb7\xe4\x79\x62\x4c\x74\xb4\x73\x9c\x58\x7e\x5a\xe9\x3b\xd8\xe3\x19\xe3\x5f\xaf\x17\x98\xc5\x31\x99\x66\x78\x5c\xd0\x73\xb8\x37\x9d\xe2\x90\xd4\x02\xd6\x8e\x51\x62\x08\x46\xd0\x2a\xe2\x4e\x3e\xd0\x8d\xd1\x2b\xb1\xc5\x67\x96\x1d\x37\x17\x34\x4b\x0f\x68\x79\x4c\x97\x17\x59\xda\x35\xbe\x1c\x10\xf1\x3c\x2d\x0b\xee\x0c\xcc\xa1\x1b\xb5\xaf\x23\x7a\x7b\x68\xb5\xa7\x12\xbe\x88\x87\x1d\x6d\x78\xbb\x46\x3d\xe8\x5d\x13\x70\x16\xe0\x0c\x7c\x26\xaf\x99\xd4\x22\x6b\x09\x3c\xef\x68\x2c\xe3\x2d\x5e\x1b\xd9\x13\xfb\xb4\xd6\xab\x95\x7e\x50\xbb\xcc\xaa\xb7\xe2\x10\x31\x80\xf3\x68\x21\xee\x04\xfc\xf5\xae\x97\xd1\x6d\x3d\x6b\x20\x17\xb3\xb7\xfc\x60\x2f\x3a\x97\xe0\x88\x1d\x57\x78\x0b\x4e\x0b\x85\x8e\x10\x3f\xdc\x2e\xf1\x22\xf6\xb4\x19\xe4\x8c\xfc\x59\xad\x49\xe2\x2e\x1a\xd7\xb9\xee\x33\x0f\xee\xef\x73\x67\xc4\xda\xe0\x1e\x73\xf7\xfe\xcc\x4b\x5b\xf1\x96\x33\xfa\xaa\xae\xe1\xdc\x10\x67\x5c\xd1\xd9\x1e\xa2\x7e\x7d\x4b\xf5\xbe\x26\x02\xba\x60\x11\x6a\x2f\x15\xd6\xbd\x96\x6a\x22\x28\x8b\xc8\xf7\xe2\xa7\x59\xab\x9f\x34\xb5\x7e\x3e\x3a\x78\x47\x57\xb8\xc4\x55\x7e\x82\xd0\xfa\x09\x56\xe5\x9d\x1c\xe5\x8b\xf1\x5a\x97\xcb\xd3\x89\x41\xed\x76\x02\xb9\x5a\xfc\xc4\xc0\x4e\x51\xfc\xbc\xb7\xf6\xd2\x68\xa7\x0a\x48\x7d\xe3\xcd\x49\xa5\xf4\x58\x23\x51\x0a\x22\xa4\x0d\xd8\xf4\x7e\xf2\x81\x74\x52\x3a\x90\x35\xe0\x8c\x3c\x41\x27\x3a\x45\x68\x0e\xfc\xb0\x2c\xa4\x18\x78\x2f\x7e\x32\xc6\xfc\x48\x06\xb0\x37\x3b\xe0\x25\xb7\x71\xab\xd6\xf9\xa9\x81\x9d\xf0\x95\x2a\xb9\x48\x12\xb4\x62\x7d\xbd\x9f\x48\x58\x23\x31\x88\x7a\x95\xd3\xad\xe9\x24\xd7\x94\xad\xda\xcd\xbc\x35\x4a\x7e\xe2\xc8\x3d\x76\xb2\xe5\x92\x5c\x9e\xe9\x68\xcd\x1e\x2e\x7a\x26\xb9\xf5\x3a\x67\xde\xdf\xc0\xc8\x1f\x44\xe9\x1b\xa3\x18\x50\x7f\xfb\xdd\x5b\xfe\xfd\xb3\x11\xde\x61\xe0\xbf\x40\x6a\xa5\xf7\x20\x8b\xc8\xa6\x52\xd9\x85\xe0\x64\xd1\x0a\x89\x9f\xb7\x9c\xce\x10\x26\x37\x1d\x8d\xb7\xbf\x08\x29\xd9\xc1\x44\x33\x26\x59\x2e\xfd\xdc\xcd\x10\xeb\xed\x19\xe8\x60\x3c\x33\xc8\x8b\xce\xf9\x16\x2f\x66\xff\x09\xad\xb5\x9f\x49\x15\x8e\x4a\xd0\x6e\x6d\x6c\x25\x21\x6b\xfc\x9c\x6d\xf5\x62\x4d\x23\x02\x12\x40\x6a\xe7\xa6\x93\x35\xdb\x19\xd3\xac\xe7\x92\x9f\xb9\xc2\xa4\xa1\x15\x92\x61\x0f\x8c\x60\x2c\x9a\x01\x3b\x9f\x8c\x6a\x19\x31\x12\xb4\xbb\xd1\xcf\xd5\xd8\x1f\xeb\x45\x90\xad\x91\x58\xc4\x6a\x3b\x3b\xf2\xb3\xcb\xd6\x0d\x28\x28\x25\x4e\xb4\xb0\xd6\xe6\x27\x3f\xd3\xed\x5e\x10\xcb\xf3\xa5\x1b\xdd\xfe\x8d\x96\x93\x38\xd8\x2f\x33\x85\xf2\x33\x0c\xff\x15\x6a\xbf\x4a\x59\xcf\x8e\x71\x0e\xb1\x67\xb5\xb5\x79\x75\xcf\xcd\xa7\x78\x7c\xba\x79\x3e\xa6\xe5\x7d\x1a\x7b\xee\xf7\x27\xfb\x8d\xc9\x7f\x5b\xb2\x56\x6e\x94\xe6\x34\x6e\x89\x40\xe2\x7c\xfa\x15\x20\xbd\xfc\xe6\x64\x07\x3e\x93\x4a\xa2\x9d\xda\x8e\x2a\xbf\x95\x5b\xc4\xca\x4f\xb8\x1b\x3f\x19\x03\x3d\x76\xe2\x5f\x49\xcf\x3e\xcf\x0c\xe5\x6d\xf5\x53\xe5\x13\x7a\xcf\x65\xe6\x77\xe2\xf2\x07\x73\xf4\x3b\xa3\x59\xb6\xce\xdf\xf3\x96\xce\xbc\x31\xe2\x3b\xf4\x86\x08\x0f\xde\x84\xa0\x0d\x83\x9f\x57\xd2\xf0\xc0\x63\xb8\x65\x67\xaf\x6e\x8c\xa9\x7a\x98\x44\x33\x53\x51\x55\xae\xf2\x5f\xf5\xec\xac\xdb\x7f\xa7\x80\xe7\xd6\x08\x95\xe2\x28\xd5\x80\xf5\x98\xc9\x9e\xb5\xae\x76\x11\x5f\xa2\x6b\x8e\x55\xa7\xde\x95\xbf\x54\x63\x3c\x78\x63\x8d\x59\x61\x7d\xc9\xcf\x62\x5b\x37\xe1\xa5\x37\x2d\xa0\xaf\xf3\xa6\x6b\x9a\x55\xa1\xa9\xb4\xbd\x9f\xef\x63\x7a\x16\x37\xc6\x8c\xc3\x3d\xec\xf5\xf4\xab\xaa\x1d\x71\xb5\xaa\x74\x85\x57\x26\x1a\x2c\xaa\x17\x4d\xd0\xe0\x8d\xfb\xec\xe6\x0a\xd4\x31\x3f\x9f\x27\xaf\x8c\x68\x20\x48\xa4\x99\xe1\x3f\x06\x1b\x5d\xa1\x31\x40\x43\x89\xdd\xe9\xb8\x92\xd8\xf5\x6a\x28\xfe\x1d\x00\x00\xff\xff\xc5\x38\x2f\xb4\x00\x20\x00\x00")

func bindata_go() ([]byte, error) {
	return bindata_read(
		_bindata_go,
		"bindata.go",
	)
}

var _generate_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc8\xc1\x0d\xc3\x30\x08\x05\xd0\x7b\xa6\x60\x01\xc2\xbd\xdb\xe0\x14\xfd\xd2\xc8\x60\xb9\x58\x5d\x3f\x57\xdf\x9e\x9e\x08\xf2\x05\x0b\x9b\x5a\x46\xc8\xe6\x41\x3c\x57\x10\x77\x82\xd7\x67\xb5\xf3\xca\x2e\xdf\x32\x5b\x7f\x0b\x41\x72\xf3\x78\x6b\xe9\x46\xe2\x71\x83\xba\x63\x6a\x79\xc6\x8f\xce\x63\xe8\x75\x2b\x6c\xcb\xe3\x09\x00\x00\xff\xff\x19\x31\x0d\xce\x6b\x00\x00\x00")

func generate_go() ([]byte, error) {
	return bindata_read(
		_generate_go,
		"generate.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"1_init.down.sql":                 _1_init_down_sql,
	"1_init.up.sql":                   _1_init_up_sql,
	"2_branch_enis.down.sql":          _2_branch_enis_down_sql,
	"2_branch_enis.up.sql":            _2_branch_enis_up_sql,
	"3_branch_enis2.down.sql":         _3_branch_enis2_down_sql,
	"3_branch_enis2.up.sql":           _3_branch_enis2_up_sql,
	"4_branch_eni_last_used.down.sql": _4_branch_eni_last_used_down_sql,
	"4_branch_eni_last_used.up.sql":   _4_branch_eni_last_used_up_sql,
	"bindata.go":                      bindata_go,
	"generate.go":                     generate_go,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"1_init.down.sql":                 &_bintree_t{_1_init_down_sql, map[string]*_bintree_t{}},
	"1_init.up.sql":                   &_bintree_t{_1_init_up_sql, map[string]*_bintree_t{}},
	"2_branch_enis.down.sql":          &_bintree_t{_2_branch_enis_down_sql, map[string]*_bintree_t{}},
	"2_branch_enis.up.sql":            &_bintree_t{_2_branch_enis_up_sql, map[string]*_bintree_t{}},
	"3_branch_enis2.down.sql":         &_bintree_t{_3_branch_enis2_down_sql, map[string]*_bintree_t{}},
	"3_branch_enis2.up.sql":           &_bintree_t{_3_branch_enis2_up_sql, map[string]*_bintree_t{}},
	"4_branch_eni_last_used.down.sql": &_bintree_t{_4_branch_eni_last_used_down_sql, map[string]*_bintree_t{}},
	"4_branch_eni_last_used.up.sql":   &_bintree_t{_4_branch_eni_last_used_up_sql, map[string]*_bintree_t{}},
	"bindata.go":                      &_bintree_t{bindata_go, map[string]*_bintree_t{}},
	"generate.go":                     &_bintree_t{generate_go, map[string]*_bintree_t{}},
}}
