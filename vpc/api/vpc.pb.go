// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpc.proto

package vpcapi

import (
	context "context"
	fmt "fmt"
	math "math"

	titus "github.com/Netflix/titus-executor/api/netflix/titus"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// This is embedded in responses / replies so that a given IP Service Server may cache data from AWS. Since the client
// is the only one ever going to make requests for that given ENI, it can take a lock on that ENI. If the cache version
// the client presents is not present, or it is different from the one the server has, the server must refresh its
// state from AWS
type CacheVersion struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheVersion) Reset()         { *m = CacheVersion{} }
func (m *CacheVersion) String() string { return proto.CompactTextString(m) }
func (*CacheVersion) ProtoMessage()    {}
func (*CacheVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{1}
}

func (m *CacheVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheVersion.Unmarshal(m, b)
}
func (m *CacheVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheVersion.Marshal(b, m, deterministic)
}
func (m *CacheVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheVersion.Merge(m, src)
}
func (m *CacheVersion) XXX_Size() int {
	return xxx_messageInfo_CacheVersion.Size(m)
}
func (m *CacheVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CacheVersion proto.InternalMessageInfo

func (m *CacheVersion) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type NetworkInterfaceAttachment struct {
	// 0-indexed
	DeviceIndex          uint32   `protobuf:"varint,1,opt,name=deviceIndex,proto3" json:"deviceIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInterfaceAttachment) Reset()         { *m = NetworkInterfaceAttachment{} }
func (m *NetworkInterfaceAttachment) String() string { return proto.CompactTextString(m) }
func (*NetworkInterfaceAttachment) ProtoMessage()    {}
func (*NetworkInterfaceAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{2}
}

func (m *NetworkInterfaceAttachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterfaceAttachment.Unmarshal(m, b)
}
func (m *NetworkInterfaceAttachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterfaceAttachment.Marshal(b, m, deterministic)
}
func (m *NetworkInterfaceAttachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterfaceAttachment.Merge(m, src)
}
func (m *NetworkInterfaceAttachment) XXX_Size() int {
	return xxx_messageInfo_NetworkInterfaceAttachment.Size(m)
}
func (m *NetworkInterfaceAttachment) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterfaceAttachment.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterfaceAttachment proto.InternalMessageInfo

func (m *NetworkInterfaceAttachment) GetDeviceIndex() uint32 {
	if m != nil {
		return m.DeviceIndex
	}
	return 0
}

type NetworkInterface struct {
	SubnetId                   string                      `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	AvailabilityZone           string                      `protobuf:"bytes,2,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
	MacAddress                 string                      `protobuf:"bytes,3,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	NetworkInterfaceId         string                      `protobuf:"bytes,4,opt,name=networkInterfaceId,proto3" json:"networkInterfaceId,omitempty"`
	OwnerAccountId             string                      `protobuf:"bytes,5,opt,name=ownerAccountId,proto3" json:"ownerAccountId,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,7,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	VpcId                      string                      `protobuf:"bytes,8,opt,name=vpcId,proto3" json:"vpcId,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *NetworkInterface) Reset()         { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()    {}
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{3}
}

func (m *NetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterface.Unmarshal(m, b)
}
func (m *NetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterface.Marshal(b, m, deterministic)
}
func (m *NetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterface.Merge(m, src)
}
func (m *NetworkInterface) XXX_Size() int {
	return xxx_messageInfo_NetworkInterface.Size(m)
}
func (m *NetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterface proto.InternalMessageInfo

func (m *NetworkInterface) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *NetworkInterface) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *NetworkInterface) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NetworkInterface) GetNetworkInterfaceId() string {
	if m != nil {
		return m.NetworkInterfaceId
	}
	return ""
}

func (m *NetworkInterface) GetOwnerAccountId() string {
	if m != nil {
		return m.OwnerAccountId
	}
	return ""
}

func (m *NetworkInterface) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *NetworkInterface) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

type InstanceIdentity struct {
	// This is duplicated data , but we include it for verification beyond Metatron. No containers should run
	// on the instance prior to this API call being completed. We can then rely on the instance
	// identity document for further verification.
	InstanceIdentityDocument  string   `protobuf:"bytes,1,opt,name=instanceIdentityDocument,proto3" json:"instanceIdentityDocument,omitempty"`
	InstanceIdentitySignature string   `protobuf:"bytes,2,opt,name=instanceIdentitySignature,proto3" json:"instanceIdentitySignature,omitempty"`
	InstanceID                string   `protobuf:"bytes,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Region                    string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AccountID                 string   `protobuf:"bytes,5,opt,name=accountID,proto3" json:"accountID,omitempty"`
	InstanceType              string   `protobuf:"bytes,6,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *InstanceIdentity) Reset()         { *m = InstanceIdentity{} }
func (m *InstanceIdentity) String() string { return proto.CompactTextString(m) }
func (*InstanceIdentity) ProtoMessage()    {}
func (*InstanceIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{4}
}

func (m *InstanceIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceIdentity.Unmarshal(m, b)
}
func (m *InstanceIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceIdentity.Marshal(b, m, deterministic)
}
func (m *InstanceIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceIdentity.Merge(m, src)
}
func (m *InstanceIdentity) XXX_Size() int {
	return xxx_messageInfo_InstanceIdentity.Size(m)
}
func (m *InstanceIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceIdentity proto.InternalMessageInfo

func (m *InstanceIdentity) GetInstanceIdentityDocument() string {
	if m != nil {
		return m.InstanceIdentityDocument
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceIdentitySignature() string {
	if m != nil {
		return m.InstanceIdentitySignature
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *InstanceIdentity) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InstanceIdentity) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

// ProvisionInstanceRequest is called when the instance is first initialized, in order to configure its interfaces,
// and other network capabilities.
// The provisioning service decides which account / subnet / VPC the interface will live in.
type ProvisionInstanceRequest struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	// If accountID and subnetID are not specified then the titusvpcservice will decide on their behalf
	AccountID            string   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	SubnetID             string   `protobuf:"bytes,3,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvisionInstanceRequest) Reset()         { *m = ProvisionInstanceRequest{} }
func (m *ProvisionInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceRequest) ProtoMessage()    {}
func (*ProvisionInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{5}
}

func (m *ProvisionInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceRequest.Unmarshal(m, b)
}
func (m *ProvisionInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceRequest.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceRequest.Merge(m, src)
}
func (m *ProvisionInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceRequest.Size(m)
}
func (m *ProvisionInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceRequest proto.InternalMessageInfo

func (m *ProvisionInstanceRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *ProvisionInstanceRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ProvisionInstanceRequest) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

type ProvisionInstanceResponse struct {
	// In this, the deviceIndex, macAddress, and networkInterfaceId must be unique in this list.
	NetworkInterfaces    []*NetworkInterface `protobuf:"bytes,1,rep,name=networkInterfaces,proto3" json:"networkInterfaces,omitempty"`
	CacheVersion         *CacheVersion       `protobuf:"bytes,2,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProvisionInstanceResponse) Reset()         { *m = ProvisionInstanceResponse{} }
func (m *ProvisionInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceResponse) ProtoMessage()    {}
func (*ProvisionInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{6}
}

func (m *ProvisionInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceResponse.Unmarshal(m, b)
}
func (m *ProvisionInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceResponse.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceResponse.Merge(m, src)
}
func (m *ProvisionInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceResponse.Size(m)
}
func (m *ProvisionInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceResponse proto.InternalMessageInfo

func (m *ProvisionInstanceResponse) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *ProvisionInstanceResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

type UtilizedAddress struct {
	Address              *Address             `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LastUsedTime         *timestamp.Timestamp `protobuf:"bytes,2,opt,name=lastUsedTime,proto3" json:"lastUsedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UtilizedAddress) Reset()         { *m = UtilizedAddress{} }
func (m *UtilizedAddress) String() string { return proto.CompactTextString(m) }
func (*UtilizedAddress) ProtoMessage()    {}
func (*UtilizedAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{7}
}

func (m *UtilizedAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtilizedAddress.Unmarshal(m, b)
}
func (m *UtilizedAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtilizedAddress.Marshal(b, m, deterministic)
}
func (m *UtilizedAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtilizedAddress.Merge(m, src)
}
func (m *UtilizedAddress) XXX_Size() int {
	return xxx_messageInfo_UtilizedAddress.Size(m)
}
func (m *UtilizedAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UtilizedAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UtilizedAddress proto.InternalMessageInfo

func (m *UtilizedAddress) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UtilizedAddress) GetLastUsedTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastUsedTime
	}
	return nil
}

type AssignIPRequest struct {
	CacheVersion               *CacheVersion               `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,3,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	SecurityGroupIds           []string                    `protobuf:"bytes,4,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	Ipv6AddressRequested       bool                        `protobuf:"varint,5,opt,name=ipv6AddressRequested,proto3" json:"ipv6AddressRequested,omitempty"`
	UtilizedAddresses          []*UtilizedAddress          `protobuf:"bytes,6,rep,name=utilizedAddresses,proto3" json:"utilizedAddresses,omitempty"`
	InstanceIdentity           *InstanceIdentity           `protobuf:"bytes,7,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	AllowSecurityGroupChange   bool                        `protobuf:"varint,8,opt,name=allowSecurityGroupChange,proto3" json:"allowSecurityGroupChange,omitempty"`
	// This is optional. If it is not specified then we will assign a "random" IP to the interface
	SignedAddressAllocations []*titus.SignedAddressAllocation `protobuf:"bytes,9,rep,name=signedAddressAllocations,proto3" json:"signedAddressAllocations,omitempty"`
	// If accountID and subnetID are not specified then the titusvpcservice will decide on their behalf
	AccountID            string   `protobuf:"bytes,10,opt,name=accountID,proto3" json:"accountID,omitempty"`
	SubnetID             string   `protobuf:"bytes,11,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignIPRequest) Reset()         { *m = AssignIPRequest{} }
func (m *AssignIPRequest) String() string { return proto.CompactTextString(m) }
func (*AssignIPRequest) ProtoMessage()    {}
func (*AssignIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{8}
}

func (m *AssignIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPRequest.Unmarshal(m, b)
}
func (m *AssignIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPRequest.Marshal(b, m, deterministic)
}
func (m *AssignIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPRequest.Merge(m, src)
}
func (m *AssignIPRequest) XXX_Size() int {
	return xxx_messageInfo_AssignIPRequest.Size(m)
}
func (m *AssignIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPRequest proto.InternalMessageInfo

func (m *AssignIPRequest) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *AssignIPRequest) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *AssignIPRequest) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

func (m *AssignIPRequest) GetIpv6AddressRequested() bool {
	if m != nil {
		return m.Ipv6AddressRequested
	}
	return false
}

func (m *AssignIPRequest) GetUtilizedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.UtilizedAddresses
	}
	return nil
}

func (m *AssignIPRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *AssignIPRequest) GetAllowSecurityGroupChange() bool {
	if m != nil {
		return m.AllowSecurityGroupChange
	}
	return false
}

func (m *AssignIPRequest) GetSignedAddressAllocations() []*titus.SignedAddressAllocation {
	if m != nil {
		return m.SignedAddressAllocations
	}
	return nil
}

func (m *AssignIPRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *AssignIPRequest) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

type AssignIPResponse struct {
	CacheVersion *CacheVersion `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	// A batch of IPs may be given back. It is up to the client to figure out what IPs it can use.
	UsableAddresses      []*UsableAddress  `protobuf:"bytes,2,rep,name=usableAddresses,proto3" json:"usableAddresses,omitempty"`
	NetworkInterface     *NetworkInterface `protobuf:"bytes,3,opt,name=networkInterface,proto3" json:"networkInterface,omitempty"`
	SecurityGroupIds     []string          `protobuf:"bytes,4,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AssignIPResponse) Reset()         { *m = AssignIPResponse{} }
func (m *AssignIPResponse) String() string { return proto.CompactTextString(m) }
func (*AssignIPResponse) ProtoMessage()    {}
func (*AssignIPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{9}
}

func (m *AssignIPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPResponse.Unmarshal(m, b)
}
func (m *AssignIPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPResponse.Marshal(b, m, deterministic)
}
func (m *AssignIPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPResponse.Merge(m, src)
}
func (m *AssignIPResponse) XXX_Size() int {
	return xxx_messageInfo_AssignIPResponse.Size(m)
}
func (m *AssignIPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPResponse proto.InternalMessageInfo

func (m *AssignIPResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *AssignIPResponse) GetUsableAddresses() []*UsableAddress {
	if m != nil {
		return m.UsableAddresses
	}
	return nil
}

func (m *AssignIPResponse) GetNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.NetworkInterface
	}
	return nil
}

func (m *AssignIPResponse) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

type UsableAddress struct {
	Address              *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefixLength,proto3" json:"prefixLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsableAddress) Reset()         { *m = UsableAddress{} }
func (m *UsableAddress) String() string { return proto.CompactTextString(m) }
func (*UsableAddress) ProtoMessage()    {}
func (*UsableAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{10}
}

func (m *UsableAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsableAddress.Unmarshal(m, b)
}
func (m *UsableAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsableAddress.Marshal(b, m, deterministic)
}
func (m *UsableAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsableAddress.Merge(m, src)
}
func (m *UsableAddress) XXX_Size() int {
	return xxx_messageInfo_UsableAddress.Size(m)
}
func (m *UsableAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UsableAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UsableAddress proto.InternalMessageInfo

func (m *UsableAddress) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsableAddress) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

// AddressGCMetadata is sent when the instance requests that the IP Service GC it. It's basically a way to
// indicate when the IP was last used, and we can GC it based on that metadata.
type GCRequest struct {
	CacheVersion               *CacheVersion               `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	InstanceIdentity           *InstanceIdentity           `protobuf:"bytes,2,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,3,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	// unallocatedAddresses are addresses we were able to take a lock on
	UnallocatedAddresses []*UtilizedAddress `protobuf:"bytes,4,rep,name=unallocatedAddresses,proto3" json:"unallocatedAddresses,omitempty"`
	// nonviableAddresses are addresses which we found found in the store, but we decided not to nominate
	// for GC, because they've been bumped recently
	NonviableAddresses []*UtilizedAddress `protobuf:"bytes,5,rep,name=nonviableAddresses,proto3" json:"nonviableAddresses,omitempty"`
	// allocatedAddresses are addresses currently in use.
	AllocatedAddresses []*UtilizedAddress `protobuf:"bytes,6,rep,name=allocatedAddresses,proto3" json:"allocatedAddresses,omitempty"`
	// If accountID and subnetID are not specified then the titusvpcservice will decide on their behalf
	AccountID            string   `protobuf:"bytes,10,opt,name=accountID,proto3" json:"accountID,omitempty"`
	SubnetID             string   `protobuf:"bytes,11,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCRequest) Reset()         { *m = GCRequest{} }
func (m *GCRequest) String() string { return proto.CompactTextString(m) }
func (*GCRequest) ProtoMessage()    {}
func (*GCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{11}
}

func (m *GCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCRequest.Unmarshal(m, b)
}
func (m *GCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCRequest.Marshal(b, m, deterministic)
}
func (m *GCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCRequest.Merge(m, src)
}
func (m *GCRequest) XXX_Size() int {
	return xxx_messageInfo_GCRequest.Size(m)
}
func (m *GCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCRequest proto.InternalMessageInfo

func (m *GCRequest) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *GCRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *GCRequest) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *GCRequest) GetUnallocatedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.UnallocatedAddresses
	}
	return nil
}

func (m *GCRequest) GetNonviableAddresses() []*UtilizedAddress {
	if m != nil {
		return m.NonviableAddresses
	}
	return nil
}

func (m *GCRequest) GetAllocatedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.AllocatedAddresses
	}
	return nil
}

func (m *GCRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GCRequest) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

type GCResponse struct {
	CacheVersion         *CacheVersion `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	AddressToBump        []*Address    `protobuf:"bytes,2,rep,name=addressToBump,proto3" json:"addressToBump,omitempty"`
	AddressToDelete      []*Address    `protobuf:"bytes,3,rep,name=addressToDelete,proto3" json:"addressToDelete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GCResponse) Reset()         { *m = GCResponse{} }
func (m *GCResponse) String() string { return proto.CompactTextString(m) }
func (*GCResponse) ProtoMessage()    {}
func (*GCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{12}
}

func (m *GCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCResponse.Unmarshal(m, b)
}
func (m *GCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCResponse.Marshal(b, m, deterministic)
}
func (m *GCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCResponse.Merge(m, src)
}
func (m *GCResponse) XXX_Size() int {
	return xxx_messageInfo_GCResponse.Size(m)
}
func (m *GCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCResponse proto.InternalMessageInfo

func (m *GCResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *GCResponse) GetAddressToBump() []*Address {
	if m != nil {
		return m.AddressToBump
	}
	return nil
}

func (m *GCResponse) GetAddressToDelete() []*Address {
	if m != nil {
		return m.AddressToDelete
	}
	return nil
}

type PrivateKey struct {
	Hostname  string               `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Generated *timestamp.Timestamp `protobuf:"bytes,2,opt,name=generated,proto3" json:"generated,omitempty"`
	// Types that are valid to be assigned to Key:
	//	*PrivateKey_Ed25519Key_
	Key                  isPrivateKey_Key `protobuf_oneof:"key"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{13}
}

func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (m *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(m, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *PrivateKey) GetGenerated() *timestamp.Timestamp {
	if m != nil {
		return m.Generated
	}
	return nil
}

type isPrivateKey_Key interface {
	isPrivateKey_Key()
}

type PrivateKey_Ed25519Key_ struct {
	Ed25519Key *PrivateKey_Ed25519Key `protobuf:"bytes,3,opt,name=ed25519Key,proto3,oneof"`
}

func (*PrivateKey_Ed25519Key_) isPrivateKey_Key() {}

func (m *PrivateKey) GetKey() isPrivateKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PrivateKey) GetEd25519Key() *PrivateKey_Ed25519Key {
	if x, ok := m.GetKey().(*PrivateKey_Ed25519Key_); ok {
		return x.Ed25519Key
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PrivateKey) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PrivateKey_Ed25519Key_)(nil),
	}
}

type PrivateKey_Ed25519Key struct {
	Rfc8032Key           []byte   `protobuf:"bytes,1,opt,name=rfc8032key,proto3" json:"rfc8032key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey_Ed25519Key) Reset()         { *m = PrivateKey_Ed25519Key{} }
func (m *PrivateKey_Ed25519Key) String() string { return proto.CompactTextString(m) }
func (*PrivateKey_Ed25519Key) ProtoMessage()    {}
func (*PrivateKey_Ed25519Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{13, 0}
}

func (m *PrivateKey_Ed25519Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Unmarshal(m, b)
}
func (m *PrivateKey_Ed25519Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Marshal(b, m, deterministic)
}
func (m *PrivateKey_Ed25519Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey_Ed25519Key.Merge(m, src)
}
func (m *PrivateKey_Ed25519Key) XXX_Size() int {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Size(m)
}
func (m *PrivateKey_Ed25519Key) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey_Ed25519Key.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey_Ed25519Key proto.InternalMessageInfo

func (m *PrivateKey_Ed25519Key) GetRfc8032Key() []byte {
	if m != nil {
		return m.Rfc8032Key
	}
	return nil
}

func init() {
	proto.RegisterType((*Address)(nil), "com.netflix.titus.executor.vpc.Address")
	proto.RegisterType((*CacheVersion)(nil), "com.netflix.titus.executor.vpc.CacheVersion")
	proto.RegisterType((*NetworkInterfaceAttachment)(nil), "com.netflix.titus.executor.vpc.NetworkInterfaceAttachment")
	proto.RegisterType((*NetworkInterface)(nil), "com.netflix.titus.executor.vpc.NetworkInterface")
	proto.RegisterType((*InstanceIdentity)(nil), "com.netflix.titus.executor.vpc.InstanceIdentity")
	proto.RegisterType((*ProvisionInstanceRequest)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceRequest")
	proto.RegisterType((*ProvisionInstanceResponse)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceResponse")
	proto.RegisterType((*UtilizedAddress)(nil), "com.netflix.titus.executor.vpc.UtilizedAddress")
	proto.RegisterType((*AssignIPRequest)(nil), "com.netflix.titus.executor.vpc.AssignIPRequest")
	proto.RegisterType((*AssignIPResponse)(nil), "com.netflix.titus.executor.vpc.AssignIPResponse")
	proto.RegisterType((*UsableAddress)(nil), "com.netflix.titus.executor.vpc.UsableAddress")
	proto.RegisterType((*GCRequest)(nil), "com.netflix.titus.executor.vpc.GCRequest")
	proto.RegisterType((*GCResponse)(nil), "com.netflix.titus.executor.vpc.GCResponse")
	proto.RegisterType((*PrivateKey)(nil), "com.netflix.titus.executor.vpc.PrivateKey")
	proto.RegisterType((*PrivateKey_Ed25519Key)(nil), "com.netflix.titus.executor.vpc.PrivateKey.Ed25519Key")
}

func init() { proto.RegisterFile("vpc.proto", fileDescriptor_95d23e4d548ba1d7) }

var fileDescriptor_95d23e4d548ba1d7 = []byte{
	// 1110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x26, 0x69, 0xd3, 0x26, 0x27, 0x29, 0xcd, 0x8e, 0x2a, 0xe4, 0x8d, 0x50, 0xa9, 0x8c, 0x04,
	0x4b, 0xb5, 0xb8, 0x25, 0xab, 0xa2, 0x6e, 0x85, 0x56, 0x4a, 0x5b, 0x54, 0xa2, 0x05, 0x54, 0xdc,
	0xee, 0xae, 0xb4, 0xfc, 0xac, 0x26, 0xf6, 0x49, 0x3a, 0xaa, 0x33, 0x63, 0xec, 0xb1, 0xdb, 0xec,
	0x15, 0x57, 0x88, 0x07, 0xe0, 0x82, 0xe7, 0xe0, 0x25, 0xb8, 0xe2, 0x05, 0xb8, 0xe6, 0x16, 0x89,
	0x47, 0x40, 0xfe, 0x4b, 0x62, 0xc7, 0x69, 0xd2, 0x6e, 0x2b, 0x6e, 0xaa, 0xcc, 0x99, 0x73, 0xbe,
	0xf9, 0xe6, 0xfc, 0x7c, 0x1d, 0x43, 0xc5, 0xb7, 0x0d, 0xcd, 0x76, 0x84, 0x14, 0x64, 0xdd, 0x10,
	0x7d, 0x8d, 0xa3, 0xec, 0x5a, 0xec, 0x52, 0x93, 0x4c, 0x7a, 0xae, 0x86, 0x97, 0x68, 0x78, 0x52,
	0x38, 0x9a, 0x6f, 0x1b, 0x8d, 0xf7, 0x7a, 0x42, 0xf4, 0x2c, 0xdc, 0x0a, 0xbd, 0x3b, 0x5e, 0x77,
	0x4b, 0xb2, 0x3e, 0xba, 0x92, 0xf6, 0xed, 0x08, 0xa0, 0xb1, 0x1e, 0x07, 0x6f, 0x85, 0xc1, 0xd1,
	0xdf, 0x57, 0x1d, 0xea, 0x62, 0xb4, 0xaf, 0xbe, 0x0f, 0xcb, 0x2d, 0xd3, 0x74, 0xd0, 0x75, 0x89,
	0x02, 0xcb, 0x34, 0xfa, 0xa9, 0x14, 0x36, 0x0a, 0x0f, 0x2a, 0x7a, 0xb2, 0x54, 0x55, 0xa8, 0x1d,
	0x50, 0xe3, 0x0c, 0x9f, 0xa3, 0xe3, 0x32, 0xc1, 0x09, 0x81, 0x45, 0xcf, 0x63, 0x66, 0xe8, 0x56,
	0xd3, 0xc3, 0xdf, 0xea, 0x13, 0x68, 0x7c, 0x8d, 0xf2, 0x42, 0x38, 0xe7, 0x6d, 0x2e, 0xd1, 0xe9,
	0x52, 0x03, 0x5b, 0x52, 0x52, 0xe3, 0xac, 0x8f, 0x5c, 0x92, 0x0d, 0xa8, 0x9a, 0xe8, 0x33, 0x03,
	0xdb, 0xdc, 0xc4, 0xcb, 0x30, 0x70, 0x45, 0x1f, 0x37, 0xa9, 0x7f, 0x17, 0xa1, 0x9e, 0x05, 0x20,
	0x0d, 0x28, 0xbb, 0x5e, 0x87, 0xa3, 0x6c, 0x9b, 0x31, 0xa7, 0xe1, 0x9a, 0x6c, 0x42, 0x9d, 0xfa,
	0x94, 0x59, 0xb4, 0xc3, 0x2c, 0x26, 0x07, 0x2f, 0x05, 0x47, 0xa5, 0x18, 0xfa, 0x4c, 0xd8, 0xc9,
	0x3a, 0x40, 0x9f, 0x1a, 0xf1, 0x45, 0x95, 0x85, 0xd0, 0x6b, 0xcc, 0x42, 0x34, 0x20, 0x3c, 0x73,
	0x76, 0xdb, 0x54, 0x16, 0x43, 0xbf, 0x9c, 0x1d, 0xf2, 0x01, 0xbc, 0x2d, 0x2e, 0x38, 0x3a, 0x2d,
	0xc3, 0x10, 0x1e, 0x0f, 0xd8, 0x95, 0x42, 0xdf, 0x8c, 0x95, 0xbc, 0x86, 0x06, 0x9f, 0x9a, 0x14,
	0x65, 0x79, 0xa3, 0xf0, 0xa0, 0xda, 0xdc, 0xd3, 0xae, 0xae, 0xb1, 0x36, 0x3d, 0xad, 0xfa, 0x15,
	0xe8, 0x64, 0x0d, 0x4a, 0xbe, 0x6d, 0xb4, 0x4d, 0xa5, 0x1c, 0x52, 0x8b, 0x16, 0xea, 0xcf, 0x45,
	0xa8, 0xb7, 0xb9, 0x2b, 0x29, 0x0f, 0x2e, 0x82, 0x5c, 0x32, 0x39, 0x20, 0x7b, 0xa0, 0xb0, 0x8c,
	0xed, 0x50, 0x18, 0x5e, 0x48, 0x32, 0x4a, 0xfb, 0xd4, 0x7d, 0xf2, 0x19, 0xdc, 0xcf, 0xee, 0x9d,
	0xb0, 0x1e, 0xa7, 0xd2, 0x73, 0x92, 0x7a, 0x4c, 0x77, 0x08, 0x0a, 0x33, 0xdc, 0x3c, 0x4c, 0x0a,
	0x33, 0xb2, 0x90, 0x77, 0x60, 0xc9, 0xc1, 0x1e, 0x13, 0x3c, 0x2e, 0x46, 0xbc, 0x22, 0xef, 0x42,
	0x85, 0xc6, 0x59, 0x3e, 0x8c, 0x73, 0x3f, 0x32, 0x10, 0x15, 0x6a, 0x09, 0xc6, 0xe9, 0xc0, 0x46,
	0x65, 0x29, 0x74, 0x48, 0xd9, 0xd4, 0xdf, 0x0b, 0xa0, 0x1c, 0x3b, 0xc2, 0x67, 0x41, 0x47, 0x27,
	0x19, 0xd1, 0xf1, 0x47, 0x0f, 0x5d, 0x49, 0xbe, 0x83, 0x7a, 0x96, 0x73, 0x98, 0x88, 0x6a, 0x73,
	0x7b, 0x56, 0xb5, 0xb2, 0xc9, 0xd5, 0x27, 0x90, 0xd2, 0xe4, 0x8b, 0x59, 0xf2, 0xa3, 0x9e, 0x4f,
	0x12, 0x32, 0x5c, 0xab, 0x7f, 0x16, 0xe0, 0x7e, 0x0e, 0x69, 0xd7, 0x16, 0xdc, 0x45, 0xf2, 0x03,
	0xdc, 0xcb, 0xf6, 0x43, 0x30, 0xca, 0x0b, 0xf3, 0xd0, 0xce, 0x36, 0x99, 0x3e, 0x09, 0x45, 0x8e,
	0xa1, 0x66, 0x8c, 0xc9, 0x40, 0x48, 0xbd, 0xda, 0x7c, 0x38, 0x0b, 0x7a, 0x5c, 0x3a, 0xf4, 0x14,
	0x82, 0xfa, 0x6b, 0x01, 0x56, 0x9f, 0x49, 0x66, 0xb1, 0xd7, 0x68, 0x26, 0xb3, 0xd8, 0x4a, 0xcb,
	0x50, 0xb5, 0xf9, 0xe1, 0xac, 0x03, 0xe2, 0xc8, 0xa1, 0x5e, 0x91, 0x27, 0x50, 0xb3, 0xa8, 0x2b,
	0x9f, 0xb9, 0x68, 0x9e, 0xb2, 0x3e, 0xc6, 0x44, 0x1b, 0x5a, 0x24, 0x96, 0x5a, 0x22, 0x96, 0xda,
	0x69, 0x22, 0x96, 0x7a, 0xca, 0x5f, 0xfd, 0xab, 0x04, 0xab, 0x2d, 0xd7, 0x65, 0x3d, 0xde, 0x3e,
	0x4e, 0x5a, 0x22, 0x7b, 0xf9, 0xc2, 0x9b, 0x5e, 0x7e, 0x86, 0x38, 0x2c, 0xdc, 0xa9, 0x38, 0x6c,
	0x42, 0xdd, 0x45, 0xc3, 0x73, 0x98, 0x1c, 0x1c, 0x39, 0xc2, 0xb3, 0xdb, 0xa6, 0xab, 0x2c, 0x6e,
	0x2c, 0x04, 0xe2, 0x99, 0xb5, 0x93, 0x26, 0xac, 0x31, 0xdb, 0xff, 0x34, 0xc9, 0x72, 0x94, 0x0f,
	0x8c, 0x24, 0xaf, 0xac, 0xe7, 0xee, 0x91, 0xef, 0xe1, 0x9e, 0x97, 0xae, 0x2b, 0xba, 0xca, 0x52,
	0xd8, 0x8a, 0x5b, 0xb3, 0xae, 0x94, 0x69, 0x08, 0x7d, 0x12, 0x29, 0x77, 0x3e, 0x97, 0x6f, 0x6d,
	0x3e, 0xf7, 0x40, 0xa1, 0x96, 0x25, 0x2e, 0x4e, 0xc6, 0x33, 0x71, 0x70, 0x46, 0x79, 0x0f, 0x43,
	0x31, 0x2d, 0xeb, 0x53, 0xf7, 0x49, 0x17, 0x94, 0xa0, 0x6f, 0x86, 0x64, 0x5b, 0x96, 0x25, 0x0c,
	0x2a, 0x99, 0xe0, 0xae, 0x52, 0x09, 0xef, 0xbf, 0x99, 0xc3, 0xf0, 0x24, 0x3f, 0x44, 0x9f, 0x8a,
	0x95, 0xd6, 0x10, 0xb8, 0x4a, 0x43, 0xaa, 0x19, 0x0d, 0xf9, 0xa3, 0x08, 0xf5, 0x51, 0x73, 0xc7,
	0xd2, 0x71, 0xfb, 0xdd, 0xfd, 0x02, 0x56, 0x3d, 0x97, 0x76, 0x2c, 0x1c, 0xd5, 0xbf, 0x18, 0xde,
	0xff, 0xe3, 0x99, 0xf5, 0x1f, 0x0f, 0xd3, 0xb3, 0x28, 0x41, 0xed, 0xb3, 0x8d, 0x1d, 0x0f, 0xcb,
	0xf5, 0x45, 0x6e, 0x02, 0xe9, 0x3a, 0x83, 0xa1, 0xfa, 0xb0, 0x92, 0xe2, 0x7a, 0x1b, 0xd2, 0xa5,
	0x42, 0xcd, 0x76, 0xb0, 0xcb, 0x2e, 0xbf, 0x44, 0xde, 0x93, 0x67, 0xa1, 0x74, 0xad, 0xe8, 0x29,
	0x9b, 0xfa, 0x5b, 0x09, 0x2a, 0x47, 0x07, 0x77, 0x27, 0x4c, 0x79, 0xd3, 0x55, 0xbc, 0xb5, 0xe9,
	0xfa, 0x3f, 0x65, 0xcf, 0x80, 0x35, 0x8f, 0xd3, 0x68, 0x8c, 0xc6, 0x95, 0x69, 0xf1, 0x66, 0xca,
	0x94, 0x0b, 0x46, 0x5e, 0x01, 0xe1, 0x82, 0xfb, 0x2c, 0xdd, 0xfc, 0xa5, 0x9b, 0x1d, 0x91, 0x03,
	0x15, 0x1c, 0x90, 0x73, 0x87, 0x1b, 0xaa, 0x6b, 0x0e, 0xd4, 0x1b, 0x88, 0xcb, 0x4f, 0x45, 0x80,
	0xa0, 0x35, 0xef, 0x4c, 0x56, 0xbe, 0x82, 0x95, 0x78, 0x54, 0x4e, 0xc5, 0xbe, 0xd7, 0xb7, 0x63,
	0x51, 0x99, 0x7b, 0xd0, 0xd2, 0xd1, 0xe4, 0x1b, 0x58, 0x1d, 0x1a, 0x0e, 0xd1, 0x42, 0x19, 0x68,
	0xc9, 0xb5, 0x00, 0xb3, 0xf1, 0xea, 0xbf, 0x05, 0x80, 0x63, 0x87, 0xf9, 0x54, 0xe2, 0x53, 0x1c,
	0x04, 0xd9, 0x3a, 0x13, 0xae, 0xe4, 0xb4, 0x8f, 0xc9, 0x27, 0x4c, 0xb2, 0x26, 0xbb, 0x50, 0xe9,
	0x21, 0x47, 0x27, 0xc8, 0xfe, 0x1c, 0x8f, 0x94, 0x91, 0x33, 0x79, 0x01, 0x80, 0x66, 0x73, 0x67,
	0xe7, 0x93, 0xc7, 0x4f, 0x71, 0x10, 0x0f, 0xcd, 0xce, 0x2c, 0xca, 0x23, 0x56, 0xda, 0xe7, 0xc3,
	0xe0, 0x2f, 0xde, 0xd2, 0xc7, 0xa0, 0x1a, 0x0f, 0x01, 0x46, 0x7b, 0xc1, 0xf3, 0xdc, 0xe9, 0x1a,
	0xbb, 0xdb, 0x8f, 0x9a, 0xe7, 0x38, 0x88, 0x3f, 0xf7, 0xc6, 0x2c, 0xfb, 0x25, 0x58, 0x38, 0xc7,
	0x41, 0xf3, 0x9f, 0x22, 0xac, 0x9d, 0x06, 0xe7, 0xb5, 0x7a, 0xc8, 0xe5, 0xf3, 0xe3, 0x83, 0x13,
	0x74, 0x82, 0x2f, 0x3b, 0xf2, 0x4b, 0x01, 0xee, 0x4d, 0xbc, 0x57, 0xc9, 0xee, 0x6c, 0xa2, 0xf9,
	0xef, 0xf2, 0xc6, 0xe3, 0x1b, 0x44, 0xc6, 0xad, 0xd8, 0x87, 0x72, 0xf2, 0x5f, 0x8f, 0xcc, 0x1c,
	0x92, 0xcc, 0xe3, 0xaf, 0xb1, 0x3d, 0x7f, 0x40, 0x7c, 0xdc, 0xb7, 0x50, 0x3c, 0x3a, 0x20, 0x1f,
	0xcd, 0x8a, 0x1b, 0xca, 0x78, 0x63, 0x73, 0x1e, 0xd7, 0x08, 0x7c, 0xbf, 0xfc, 0x72, 0xc9, 0xb7,
	0x0d, 0x6a, 0xb3, 0xce, 0x52, 0xd8, 0x26, 0x8f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x71, 0xe5,
	0x16, 0xea, 0x33, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TitusAgentVPCServiceClient is the client API for TitusAgentVPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TitusAgentVPCServiceClient interface {
	// This ProvisionInstance function has to be called at startup of the instance, and it is idempotent.
	ProvisionInstance(ctx context.Context, in *ProvisionInstanceRequest, opts ...grpc.CallOption) (*ProvisionInstanceResponse, error)
	AssignIP(ctx context.Context, in *AssignIPRequest, opts ...grpc.CallOption) (*AssignIPResponse, error)
	// GC extra IPs
	GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error)
}

type titusAgentVPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewTitusAgentVPCServiceClient(cc *grpc.ClientConn) TitusAgentVPCServiceClient {
	return &titusAgentVPCServiceClient{cc}
}

func (c *titusAgentVPCServiceClient) ProvisionInstance(ctx context.Context, in *ProvisionInstanceRequest, opts ...grpc.CallOption) (*ProvisionInstanceResponse, error) {
	out := new(ProvisionInstanceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) AssignIP(ctx context.Context, in *AssignIPRequest, opts ...grpc.CallOption) (*AssignIPResponse, error) {
	out := new(AssignIPResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error) {
	out := new(GCResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TitusAgentVPCServiceServer is the server API for TitusAgentVPCService service.
type TitusAgentVPCServiceServer interface {
	// This ProvisionInstance function has to be called at startup of the instance, and it is idempotent.
	ProvisionInstance(context.Context, *ProvisionInstanceRequest) (*ProvisionInstanceResponse, error)
	AssignIP(context.Context, *AssignIPRequest) (*AssignIPResponse, error)
	// GC extra IPs
	GC(context.Context, *GCRequest) (*GCResponse, error)
}

func RegisterTitusAgentVPCServiceServer(s *grpc.Server, srv TitusAgentVPCServiceServer) {
	s.RegisterService(&_TitusAgentVPCService_serviceDesc, srv)
}

func _TitusAgentVPCService_ProvisionInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvisionInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstance(ctx, req.(*ProvisionInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_AssignIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).AssignIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).AssignIP(ctx, req.(*AssignIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_GC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).GC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).GC(ctx, req.(*GCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TitusAgentVPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.netflix.titus.executor.vpc.TitusAgentVPCService",
	HandlerType: (*TitusAgentVPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProvisionInstance",
			Handler:    _TitusAgentVPCService_ProvisionInstance_Handler,
		},
		{
			MethodName: "AssignIP",
			Handler:    _TitusAgentVPCService_AssignIP_Handler,
		},
		{
			MethodName: "GC",
			Handler:    _TitusAgentVPCService_GC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vpc.proto",
}
