#!/usr/bin/python3
import json


def branch_eni_limits(i):
    """Returns how many branch enis an instance can support, from
    https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html#eni-trunking-supported-instance-types
    This dictionary is copy/pasted from the chart on that page and then manipulated
    in a text editor to be in the python format.
    """
    documented = {
        "a1.medium": 10,
        "a1.large": 10,
        "a1.xlarge": 20,
        "a1.2xlarge": 40,
        "a1.4xlarge": 60,
        "m5.large": 10,
        "m5.xlarge": 20,
        "m5.2xlarge": 40,
        "m5.4xlarge": 60,
        "m5.8xlarge": 60,
        "m5.12xlarge": 60,
        "m5.16xlarge": 120,
        "m5.24xlarge": 120,
        "m5a.large": 10,
        "m5a.xlarge": 20,
        "m5a.2xlarge": 40,
        "m5a.4xlarge": 60,
        "m5a.8xlarge": 60,
        "m5a.12xlarge": 60,
        "m5a.16xlarge": 120,
        "m5a.24xlarge": 120,
        "m5ad.large": 10,
        "m5ad.xlarge": 20,
        "m5ad.2xlarge": 40,
        "m5ad.4xlarge": 60,
        "m5ad.8xlarge": 60,
        "m5ad.12xlarge": 60,
        "m5ad.16xlarge": 120,
        "m5ad.24xlarge": 120,
        "m5d.large": 10,
        "m5d.xlarge": 20,
        "m5d.2xlarge": 40,
        "m5d.4xlarge": 60,
        "m5d.8xlarge": 60,
        "m5d.12xlarge": 60,
        "m5d.16xlarge": 120,
        "m5d.24xlarge": 120,
        "m5d.metal": 120,
        "m6a.large": 10,
        "m6a.xlarge": 20,
        "m6a.2xlarge": 40,
        "m6a.4xlarge": 60,
        "m6a.8xlarge": 90,
        "m6a.12xlarge": 120,
        "m6a.16xlarge": 120,
        "m6a.24xlarge": 120,
        "m6a.32xlarge": 120,
        "m6a.48xlarge": 120,
        "m6a.metal": 120,
        "m6g.medium": 4,
        "m6g.large": 10,
        "m6g.xlarge": 20,
        "m6g.2xlarge": 40,
        "m6g.4xlarge": 60,
        "m6g.8xlarge": 60,
        "m6g.12xlarge": 60,
        "m6g.16xlarge": 120,
        "m6g.metal": 120,
        "m6gd.medium": 4,
        "m6gd.large": 10,
        "m6gd.xlarge": 20,
        "m6gd.2xlarge": 40,
        "m6gd.4xlarge": 60,
        "m6gd.8xlarge": 60,
        "m6gd.12xlarge": 60,
        "m6gd.16xlarge": 120,
        "m6gd.metal": 120,
        "m6i.large": 10,
        "m6i.xlarge": 20,
        "m6i.2xlarge": 40,
        "m6i.4xlarge": 60,
        "m6i.8xlarge": 90,
        "m6i.12xlarge": 120,
        "m6i.16xlarge": 120,
        "m6i.24xlarge": 120,
        "m6i.32xlarge": 120,
        "m6i.metal": 120,
        "m6id.large": 10,
        "m6id.xlarge": 20,
        "m6id.2xlarge": 40,
        "m6id.4xlarge": 60,
        "m6id.8xlarge": 90,
        "m6id.12xlarge": 120,
        "m6id.16xlarge": 120,
        "m6id.24xlarge": 120,
        "m6id.32xlarge": 120,
        "m6id.metal": 120,
        "c5.large": 10,
        "c5.xlarge": 20,
        "c5.2xlarge": 40,
        "c5.4xlarge": 60,
        "c5.9xlarge": 60,
        "c5.12xlarge": 60,
        "c5.18xlarge": 120,
        "c5.24xlarge": 120,
        "c5a.large": 10,
        "c5a.xlarge": 20,
        "c5a.2xlarge": 40,
        "c5a.4xlarge": 60,
        "c5a.12xlarge": 60,
        "c5a.16xlarge": 120,
        "c5a.24xlarge": 120,
        "c5ad.large": 10,
        "c5ad.xlarge": 20,
        "c5ad.2xlarge": 40,
        "c5ad.4xlarge": 60,
        "c5ad.12xlarge": 60,
        "c5ad.16xlarge": 120,
        "c5ad.24xlarge": 120,
        "c5d.large": 10,
        "c5d.xlarge": 20,
        "c5d.2xlarge": 40,
        "c5d.4xlarge": 60,
        "c5d.9xlarge": 60,
        "c5d.12xlarge": 60,
        "c5d.18xlarge": 120,
        "c5d.24xlarge": 120,
        "c6a.large": 10,
        "c6a.xlarge": 20,
        "c6a.2xlarge": 40,
        "c6a.4xlarge": 60,
        "c6a.8xlarge": 90,
        "c6a.12xlarge": 120,
        "c6a.16xlarge": 120,
        "c6a.24xlarge": 120,
        "c6a.32xlarge": 120,
        "c6a.48xlarge": 120,
        "c6a.metal": 120,
        "c6g.medium": 4,
        "c6g.large": 10,
        "c6g.xlarge": 20,
        "c6g.2xlarge": 40,
        "c6g.4xlarge": 60,
        "c6g.8xlarge": 60,
        "c6g.12xlarge": 60,
        "c6g.16xlarge": 120,
        "c6g.metal": 120,
        "c6gd.medium": 4,
        "c6gd.large": 10,
        "c6gd.xlarge": 20,
        "c6gd.2xlarge": 40,
        "c6gd.4xlarge": 60,
        "c6gd.8xlarge": 60,
        "c6gd.12xlarge": 60,
        "c6gd.16xlarge": 120,
        "c6gd.metal": 120,
        "c6gn.medium": 4,
        "c6gn.large": 10,
        "c6gn.xlarge": 20,
        "c6gn.2xlarge": 40,
        "c6gn.4xlarge": 60,
        "c6gn.8xlarge": 60,
        "c6gn.12xlarge": 60,
        "c6gn.16xlarge": 120,
        "c6gn.metal": 120,
        "c6i.large": 10,
        "c6i.xlarge": 20,
        "c6i.2xlarge": 40,
        "c6i.4xlarge": 60,
        "c6i.8xlarge": 90,
        "c6i.12xlarge": 120,
        "c6i.16xlarge": 120,
        "c6i.24xlarge": 120,
        "c6i.32xlarge": 120,
        "c6i.metal": 120,
        "c6id.large": 10,
        "c6id.xlarge": 20,
        "c6id.2xlarge": 40,
        "c6id.4xlarge": 60,
        "c6id.8xlarge": 90,
        "c6id.12xlarge": 120,
        "c6id.16xlarge": 120,
        "c6id.24xlarge": 120,
        "c6id.32xlarge": 120,
        "c6id.metal": 120,
        "c7g.medium": 4,
        "c7g.large": 10,
        "c7g.xlarge": 20,
        "c7g.2xlarge": 40,
        "c7g.4xlarge": 60,
        "c7g.8xlarge": 60,
        "c7g.12xlarge": 60,
        "c7g.16xlarge": 120,
        "hpc6a.48xlarge": 120,
        "r5.large": 10,
        "r5.xlarge": 20,
        "r5.2xlarge": 40,
        "r5.4xlarge": 60,
        "r5.12xlarge": 60,
        "r5.16xlarge": 120,
        "r5.24xlarge": 120,
        "r5a.large": 10,
        "r5a.xlarge": 20,
        "r5a.2xlarge": 40,
        "r5a.4xlarge": 60,
        "r5a.8xlarge": 60,
        "r5a.12xlarge": 60,
        "r5a.16xlarge": 120,
        "r5a.24xlarge": 120,
        "r5ad.large": 10,
        "r5ad.xlarge": 20,
        "r5ad.2xlarge": 40,
        "r5ad.4xlarge": 60,
        "r5ad.8xlarge": 60,
        "r5ad.12xlarge": 60,
        "r5ad.16xlarge": 120,
        "r5ad.24xlarge": 120,
        "r5d.large": 10,
        "r5d.xlarge": 20,
        "r5d.2xlarge": 40,
        "r5d.4xlarge": 60,
        "r5d.8xlarge": 60,
        "r5d.12xlarge": 60,
        "r5d.16xlarge": 120,
        "r5d.24xlarge": 120,
        "r6a.large": 10,
        "r6a.xlarge": 20,
        "r6a.2xlarge": 40,
        "r6a.4xlarge": 60,
        "r6a.8xlarge": 90,
        "r6a.12xlarge": 120,
        "r6a.16xlarge": 120,
        "r6a.24xlarge": 120,
        "r6a.32xlarge": 120,
        "r6a.48xlarge": 120,
        "r6a.metal": 120,
        "r6g.medium": 4,
        "r6g.large": 10,
        "r6g.xlarge": 20,
        "r6g.2xlarge": 40,
        "r6g.4xlarge": 60,
        "r6g.8xlarge": 60,
        "r6g.12xlarge": 60,
        "r6g.16xlarge": 120,
        "r6g.metal": 120,
        "r6gd.medium": 4,
        "r6gd.large": 10,
        "r6gd.xlarge": 20,
        "r6gd.2xlarge": 40,
        "r6gd.4xlarge": 60,
        "r6gd.8xlarge": 60,
        "r6gd.12xlarge": 60,
        "r6gd.16xlarge": 120,
        "r6gd.metal": 120,
        "r6i.large": 10,
        "r6i.xlarge": 20,
        "r6i.2xlarge": 40,
        "r6i.4xlarge": 60,
        "r6i.8xlarge": 90,
        "r6i.12xlarge": 120,
        "r6i.16xlarge": 120,
        "r6i.24xlarge": 120,
        "r6i.32xlarge": 120,
        "r6i.metal": 120,
        "r6id.large": 10,
        "r6id.xlarge": 20,
        "r6id.2xlarge": 40,
        "r6id.4xlarge": 60,
        "r6id.8xlarge": 90,
        "r6id.12xlarge": 120,
        "r6id.16xlarge": 120,
        "r6id.24xlarge": 120,
        "r6id.32xlarge": 120,
        "r6id.metal": 120,
        "u-3tb1.56xlarge": 12,
        "u-18tb1.metal": 12,
        "u-24tb1.metal": 12,
        "x2gd.medium": 10,
        "x2gd.large": 10,
        "x2gd.xlarge": 20,
        "x2gd.2xlarge": 40,
        "x2gd.4xlarge": 60,
        "x2gd.8xlarge": 60,
        "x2gd.12xlarge": 60,
        "x2gd.16xlarge": 120,
        "x2gd.metal": 120,
        "x2idn.16xlarge": 120,
        "x2idn.24xlarge": 120,
        "x2idn.32xlarge": 120,
        "x2idn.metal": 120,
        "x2iedn.xlarge": 13,
        "x2iedn.2xlarge": 29,
        "x2iedn.4xlarge": 60,
        "x2iedn.8xlarge": 120,
        "x2iedn.16xlarge": 120,
        "x2iedn.24xlarge": 120,
        "x2iedn.32xlarge": 120,
        "x2iedn.metal": 120,
        "x2iezn.2xlarge": 64,
        "x2iezn.4xlarge": 120,
        "x2iezn.6xlarge": 120,
        "x2iezn.8xlarge": 120,
        "x2iezn.12xlarge": 120,
        "x2iezn.metal": 120,
        "z1d.large": 14,
        "i4i.large": -2,
        "i4i.xlarge": 8,
        "i4i.2xlarge": 28,
        "i4i.4xlarge": 58,
        "i4i.8xlarge": 118,
        "i4i.16xlarge": 248,
        "i4i.32xlarge": 498,
        "i4i.metal": 498,
        "im4gn.large": 10,
        "im4gn.xlarge": 20,
        "im4gn.2xlarge": 40,
        "im4gn.4xlarge": 60,
        "im4gn.8xlarge": 60,
        "im4gn.16xlarge": 120,
        "im4gn.metal": 120,
        "is4gen.medium": 4,
        "is4gen.large": 10,
        "is4gen.xlarge": 20,
        "is4gen.2xlarge": 40,
        "is4gen.4xlarge": 60,
        "is4gen.8xlarge": 60,
        "dl1.24xlarge": 120,
        "g4ad.xlarge": 12,
        "g4ad.2xlarge": 12,
        "g4ad.4xlarge": 12,
        "g4ad.8xlarge": 12,
        "g4ad.16xlarge": 12,
        "g4dn.xlarge": 40,
        "g4dn.2xlarge": 40,
        "g4dn.4xlarge": 60,
        "g4dn.8xlarge": 60,
        "g4dn.12xlarge": 60,
        "g4dn.16xlarge": 120,
        "g4dn.metal": 120,
        "g5.xlarge": 6,
        "g5.2xlarge": 19,
        "g5.4xlarge": 40,
        "g5.8xlarge": 90,
        "g5.12xlarge": 120,
        "g5.16xlarge": 120,
        "g5.24xlarge": 120,
        "g5.48xlarge": 120,
        "g5g.xlarge": 20,
        "g5g.2xlarge": 40,
        "g5g.4xlarge": 60,
        "g5g.8xlarge": 60,
        "g5g.16xlarge": 120,
        "g5g.metal": 120,
        "inf1.xlarge": 40,
        "inf1.2xlarge": 40,
        "inf1.6xlarge": 60,
        "inf1.24xlarge": 120,
        "p3.2xlarge": 40,
        "p3.8xlarge": 60,
        "p3.16xlarge": 120,
        "p4d.24xlarge": 120,
        "p4de.24xlarge": 120,
        "vt1.3xlarge": 40,
        "vt1.6xlarge": 60,
        "vt1.24xlarge": 120,
    }

    # The page says these instance types are not supported for branch ENIs,
    # yet we use them in practice?
    undocumented = {
        "r5.metal": 198,
        "m5.metal": 198,
        "r5d.metal": 198,
    }

    # Merging of both dictionaries of data
    branch_limits = {**documented, **undocumented}
    return branch_limits.get(i, 0)


def parse_network_info(i):
    m = {
        "Low": 500,
        "Very Low": 1_000,
        "Low to Moderate": 2_500,
        "Moderate": 5_000,
        "High": 10_000,
        "Up to 5 Gigabit": 5_000,
        "Up to 10 Gigabit": 10_000,
        "Up to 12 Gigabit": 12_000,
        "Up to 12.5 Gigabit": 12_500,
        "Up to 16 Gigabit": 16_000,
        "Up to 15 Gigabit": 15_000,
        "Up to 25 Gigabit": 25_000,
        "3.12 Gigabit": 3_120,
        "6.25 Gigabit": 6_250,
        "10 Gigabit": 10_000,
        "12 Gigabit": 12_000,
        "12.5 Gigabit": 12_500,
        "15 Gigabit": 15_000,
        "18.75 Gigabit": 18_750,
        "22.5 Gigabit": 22_500,
        "20 Gigabit": 20_000,
        "25 Gigabit": 25_000,
        "30 Gigabit": 30_000,
        "37.5 Gigabit": 37_500,
        "40 Gigabit": 40_000,
        "50 Gigabit": 50_000,
        "75 Gigabit": 75_000,
        "100 Gigabit": 100_000,
        # TODO: Titus can't use these really
        "4x 100 Gigabit": 100_000,
        "8x 100 Gigabit": 100_000,
    }
    return m[i["NetworkPerformance"]]


def write_instance_limits(ec2_instance_data):
    with open("instance_limits.go", "w") as f:
        f.write(
            """package vpc
// THIS FILE IS GENERATED BY generate.py
// Interfaces, and IPs per interface comes from https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI
var interfaceLimits = map[string]limits{
"""
        )

        sorted_data = sorted(ec2_instance_data, key=lambda x: x["InstanceType"])
        for instance_data in sorted_data:
            instance_type = instance_data["InstanceType"]
            interfaces = instance_data.get("NetworkInfo")["MaximumNetworkInterfaces"]
            ips = instance_data.get("NetworkInfo")["Ipv4AddressesPerInterface"]
            net = parse_network_info(instance_data.get("NetworkInfo"))
            branchENIs = branch_eni_limits(instance_type)
            s = f""""{instance_type}": {{
    interfaces: {interfaces},
    ipAddressesPerInterface: {ips},
    networkThroughput: {net},
    branchENIs: {branchENIs},
    }},\n"""
            f.write(s)
        f.write("}\n")
        f.close()


def parse_ec2_instance_data():
    with open("instances.json") as f:
        return json.load(f)["InstanceTypes"]


def main():
    ec2_instance_data = parse_ec2_instance_data()
    write_instance_limits(ec2_instance_data)


if __name__ == "__main__":
    main()
