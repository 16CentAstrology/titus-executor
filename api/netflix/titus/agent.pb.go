// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netflix/titus/agent.proto

package titus

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignatureAlgorithm int32

const (
	SignatureAlgorithm_SHA256withRSAandMGF1 SignatureAlgorithm = 0
	SignatureAlgorithm_SHA384withRSAandMGF1 SignatureAlgorithm = 1
	SignatureAlgorithm_SHA512withRSAandMGF1 SignatureAlgorithm = 2
	SignatureAlgorithm_SHA256withECDSA      SignatureAlgorithm = 3
	SignatureAlgorithm_SHA384withECDSA      SignatureAlgorithm = 4
	SignatureAlgorithm_SHA512withECDSA      SignatureAlgorithm = 5
)

var SignatureAlgorithm_name = map[int32]string{
	0: "SHA256withRSAandMGF1",
	1: "SHA384withRSAandMGF1",
	2: "SHA512withRSAandMGF1",
	3: "SHA256withECDSA",
	4: "SHA384withECDSA",
	5: "SHA512withECDSA",
}
var SignatureAlgorithm_value = map[string]int32{
	"SHA256withRSAandMGF1": 0,
	"SHA384withRSAandMGF1": 1,
	"SHA512withRSAandMGF1": 2,
	"SHA256withECDSA":      3,
	"SHA384withECDSA":      4,
	"SHA512withECDSA":      5,
}

func (x SignatureAlgorithm) Enum() *SignatureAlgorithm {
	p := new(SignatureAlgorithm)
	*p = x
	return p
}
func (x SignatureAlgorithm) String() string {
	return proto.EnumName(SignatureAlgorithm_name, int32(x))
}
func (x *SignatureAlgorithm) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SignatureAlgorithm_value, data, "SignatureAlgorithm")
	if err != nil {
		return err
	}
	*x = SignatureAlgorithm(value)
	return nil
}
func (SignatureAlgorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{0}
}

type TaskInfo_Status int32

const (
	TaskInfo_RUNNING TaskInfo_Status = 0
	TaskInfo_FAILED  TaskInfo_Status = 1
	TaskInfo_STOPPED TaskInfo_Status = 2
)

var TaskInfo_Status_name = map[int32]string{
	0: "RUNNING",
	1: "FAILED",
	2: "STOPPED",
}
var TaskInfo_Status_value = map[string]int32{
	"RUNNING": 0,
	"FAILED":  1,
	"STOPPED": 2,
}

func (x TaskInfo_Status) Enum() *TaskInfo_Status {
	p := new(TaskInfo_Status)
	*p = x
	return p
}
func (x TaskInfo_Status) String() string {
	return proto.EnumName(TaskInfo_Status_name, int32(x))
}
func (x *TaskInfo_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TaskInfo_Status_value, data, "TaskInfo_Status")
	if err != nil {
		return err
	}
	*x = TaskInfo_Status(value)
	return nil
}
func (TaskInfo_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{3, 0}
}

type ContainerInfo_SnapshotPolicy int32

const (
	ContainerInfo_NEVER        ContainerInfo_SnapshotPolicy = 0
	ContainerInfo_ERROR_ONLY   ContainerInfo_SnapshotPolicy = 1
	ContainerInfo_SUCCESS_ONLY ContainerInfo_SnapshotPolicy = 2
	ContainerInfo_ALWAYS       ContainerInfo_SnapshotPolicy = 3
)

var ContainerInfo_SnapshotPolicy_name = map[int32]string{
	0: "NEVER",
	1: "ERROR_ONLY",
	2: "SUCCESS_ONLY",
	3: "ALWAYS",
}
var ContainerInfo_SnapshotPolicy_value = map[string]int32{
	"NEVER":        0,
	"ERROR_ONLY":   1,
	"SUCCESS_ONLY": 2,
	"ALWAYS":       3,
}

func (x ContainerInfo_SnapshotPolicy) Enum() *ContainerInfo_SnapshotPolicy {
	p := new(ContainerInfo_SnapshotPolicy)
	*p = x
	return p
}
func (x ContainerInfo_SnapshotPolicy) String() string {
	return proto.EnumName(ContainerInfo_SnapshotPolicy_name, int32(x))
}
func (x *ContainerInfo_SnapshotPolicy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContainerInfo_SnapshotPolicy_value, data, "ContainerInfo_SnapshotPolicy")
	if err != nil {
		return err
	}
	*x = ContainerInfo_SnapshotPolicy(value)
	return nil
}
func (ContainerInfo_SnapshotPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 0}
}

// Borrowed from Kubernetes
type ContainerInfo_ImagePullPolicy int32

const (
	// Always pull the tag / digest
	ContainerInfo_Always ContainerInfo_ImagePullPolicy = 0
	// Only pull if we don't have an image with that given tag / digest (guarantees freshness, as it requires digest)
	ContainerInfo_IfNotPresent ContainerInfo_ImagePullPolicy = 1
	// Only pull if we don't have an image with that given tag
	ContainerInfo_IfLabelPresent ContainerInfo_ImagePullPolicy = 2
)

var ContainerInfo_ImagePullPolicy_name = map[int32]string{
	0: "Always",
	1: "IfNotPresent",
	2: "IfLabelPresent",
}
var ContainerInfo_ImagePullPolicy_value = map[string]int32{
	"Always":         0,
	"IfNotPresent":   1,
	"IfLabelPresent": 2,
}

func (x ContainerInfo_ImagePullPolicy) Enum() *ContainerInfo_ImagePullPolicy {
	p := new(ContainerInfo_ImagePullPolicy)
	*p = x
	return p
}
func (x ContainerInfo_ImagePullPolicy) String() string {
	return proto.EnumName(ContainerInfo_ImagePullPolicy_name, int32(x))
}
func (x *ContainerInfo_ImagePullPolicy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContainerInfo_ImagePullPolicy_value, data, "ContainerInfo_ImagePullPolicy")
	if err != nil {
		return err
	}
	*x = ContainerInfo_ImagePullPolicy(value)
	return nil
}
func (ContainerInfo_ImagePullPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 1}
}

type ContainerInfo_EfsConfigInfo_MountPerms int32

const (
	ContainerInfo_EfsConfigInfo_RW ContainerInfo_EfsConfigInfo_MountPerms = 1
	ContainerInfo_EfsConfigInfo_RO ContainerInfo_EfsConfigInfo_MountPerms = 2
	ContainerInfo_EfsConfigInfo_WO ContainerInfo_EfsConfigInfo_MountPerms = 3
)

var ContainerInfo_EfsConfigInfo_MountPerms_name = map[int32]string{
	1: "RW",
	2: "RO",
	3: "WO",
}
var ContainerInfo_EfsConfigInfo_MountPerms_value = map[string]int32{
	"RW": 1,
	"RO": 2,
	"WO": 3,
}

func (x ContainerInfo_EfsConfigInfo_MountPerms) Enum() *ContainerInfo_EfsConfigInfo_MountPerms {
	p := new(ContainerInfo_EfsConfigInfo_MountPerms)
	*p = x
	return p
}
func (x ContainerInfo_EfsConfigInfo_MountPerms) String() string {
	return proto.EnumName(ContainerInfo_EfsConfigInfo_MountPerms_name, int32(x))
}
func (x *ContainerInfo_EfsConfigInfo_MountPerms) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContainerInfo_EfsConfigInfo_MountPerms_value, data, "ContainerInfo_EfsConfigInfo_MountPerms")
	if err != nil {
		return err
	}
	*x = ContainerInfo_EfsConfigInfo_MountPerms(value)
	return nil
}
func (ContainerInfo_EfsConfigInfo_MountPerms) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 2, 0}
}

// Taken from include/uapi/linux/capability.h
// #define _LINUX_CAPABILITY_VERSION_3  0x20080522
type ContainerInfo_Capabilities_Capability int32

const (
	ContainerInfo_Capabilities_CHOWN            ContainerInfo_Capabilities_Capability = 0
	ContainerInfo_Capabilities_DAC_OVERRIDE     ContainerInfo_Capabilities_Capability = 1
	ContainerInfo_Capabilities_DAC_READ_SEARCH  ContainerInfo_Capabilities_Capability = 2
	ContainerInfo_Capabilities_FOWNER           ContainerInfo_Capabilities_Capability = 3
	ContainerInfo_Capabilities_FSETID           ContainerInfo_Capabilities_Capability = 4
	ContainerInfo_Capabilities_KILL             ContainerInfo_Capabilities_Capability = 5
	ContainerInfo_Capabilities_SETGID           ContainerInfo_Capabilities_Capability = 6
	ContainerInfo_Capabilities_SETUID           ContainerInfo_Capabilities_Capability = 7
	ContainerInfo_Capabilities_SETPCAP          ContainerInfo_Capabilities_Capability = 8
	ContainerInfo_Capabilities_LINUX_IMMUTABLE  ContainerInfo_Capabilities_Capability = 9
	ContainerInfo_Capabilities_NET_BIND_SERVICE ContainerInfo_Capabilities_Capability = 10
	ContainerInfo_Capabilities_NET_BROADCAST    ContainerInfo_Capabilities_Capability = 11
	ContainerInfo_Capabilities_NET_ADMIN        ContainerInfo_Capabilities_Capability = 12
	ContainerInfo_Capabilities_NET_RAW          ContainerInfo_Capabilities_Capability = 13
	ContainerInfo_Capabilities_IPC_LOCK         ContainerInfo_Capabilities_Capability = 14
	ContainerInfo_Capabilities_IPC_OWNER        ContainerInfo_Capabilities_Capability = 15
	ContainerInfo_Capabilities_SYS_MODULE       ContainerInfo_Capabilities_Capability = 16
	ContainerInfo_Capabilities_SYS_RAWIO        ContainerInfo_Capabilities_Capability = 17
	ContainerInfo_Capabilities_SYS_CHROOT       ContainerInfo_Capabilities_Capability = 18
	ContainerInfo_Capabilities_SYS_PTRACE       ContainerInfo_Capabilities_Capability = 19
	ContainerInfo_Capabilities_SYS_PACCT        ContainerInfo_Capabilities_Capability = 20
	ContainerInfo_Capabilities_SYS_ADMIN        ContainerInfo_Capabilities_Capability = 21
	ContainerInfo_Capabilities_SYS_BOOT         ContainerInfo_Capabilities_Capability = 22
	ContainerInfo_Capabilities_SYS_NICE         ContainerInfo_Capabilities_Capability = 23
	ContainerInfo_Capabilities_SYS_RESOURCE     ContainerInfo_Capabilities_Capability = 24
	ContainerInfo_Capabilities_SYS_TIME         ContainerInfo_Capabilities_Capability = 25
	ContainerInfo_Capabilities_SYS_TTY_CONFIG   ContainerInfo_Capabilities_Capability = 26
	ContainerInfo_Capabilities_MKNOD            ContainerInfo_Capabilities_Capability = 27
	ContainerInfo_Capabilities_LEASE            ContainerInfo_Capabilities_Capability = 28
	ContainerInfo_Capabilities_AUDIT_WRITE      ContainerInfo_Capabilities_Capability = 29
	ContainerInfo_Capabilities_AUDIT_CONTROL    ContainerInfo_Capabilities_Capability = 30
	ContainerInfo_Capabilities_SETFCAP          ContainerInfo_Capabilities_Capability = 31
	ContainerInfo_Capabilities_MAC_OVERRIDE     ContainerInfo_Capabilities_Capability = 32
	ContainerInfo_Capabilities_MAC_ADMIN        ContainerInfo_Capabilities_Capability = 33
	ContainerInfo_Capabilities_SYSLOG           ContainerInfo_Capabilities_Capability = 34
	ContainerInfo_Capabilities_WAKE_ALARM       ContainerInfo_Capabilities_Capability = 35
	ContainerInfo_Capabilities_BLOCK_SUSPEND    ContainerInfo_Capabilities_Capability = 36
	ContainerInfo_Capabilities_AUDIT_READ       ContainerInfo_Capabilities_Capability = 37
)

var ContainerInfo_Capabilities_Capability_name = map[int32]string{
	0:  "CHOWN",
	1:  "DAC_OVERRIDE",
	2:  "DAC_READ_SEARCH",
	3:  "FOWNER",
	4:  "FSETID",
	5:  "KILL",
	6:  "SETGID",
	7:  "SETUID",
	8:  "SETPCAP",
	9:  "LINUX_IMMUTABLE",
	10: "NET_BIND_SERVICE",
	11: "NET_BROADCAST",
	12: "NET_ADMIN",
	13: "NET_RAW",
	14: "IPC_LOCK",
	15: "IPC_OWNER",
	16: "SYS_MODULE",
	17: "SYS_RAWIO",
	18: "SYS_CHROOT",
	19: "SYS_PTRACE",
	20: "SYS_PACCT",
	21: "SYS_ADMIN",
	22: "SYS_BOOT",
	23: "SYS_NICE",
	24: "SYS_RESOURCE",
	25: "SYS_TIME",
	26: "SYS_TTY_CONFIG",
	27: "MKNOD",
	28: "LEASE",
	29: "AUDIT_WRITE",
	30: "AUDIT_CONTROL",
	31: "SETFCAP",
	32: "MAC_OVERRIDE",
	33: "MAC_ADMIN",
	34: "SYSLOG",
	35: "WAKE_ALARM",
	36: "BLOCK_SUSPEND",
	37: "AUDIT_READ",
}
var ContainerInfo_Capabilities_Capability_value = map[string]int32{
	"CHOWN":            0,
	"DAC_OVERRIDE":     1,
	"DAC_READ_SEARCH":  2,
	"FOWNER":           3,
	"FSETID":           4,
	"KILL":             5,
	"SETGID":           6,
	"SETUID":           7,
	"SETPCAP":          8,
	"LINUX_IMMUTABLE":  9,
	"NET_BIND_SERVICE": 10,
	"NET_BROADCAST":    11,
	"NET_ADMIN":        12,
	"NET_RAW":          13,
	"IPC_LOCK":         14,
	"IPC_OWNER":        15,
	"SYS_MODULE":       16,
	"SYS_RAWIO":        17,
	"SYS_CHROOT":       18,
	"SYS_PTRACE":       19,
	"SYS_PACCT":        20,
	"SYS_ADMIN":        21,
	"SYS_BOOT":         22,
	"SYS_NICE":         23,
	"SYS_RESOURCE":     24,
	"SYS_TIME":         25,
	"SYS_TTY_CONFIG":   26,
	"MKNOD":            27,
	"LEASE":            28,
	"AUDIT_WRITE":      29,
	"AUDIT_CONTROL":    30,
	"SETFCAP":          31,
	"MAC_OVERRIDE":     32,
	"MAC_ADMIN":        33,
	"SYSLOG":           34,
	"WAKE_ALARM":       35,
	"BLOCK_SUSPEND":    36,
	"AUDIT_READ":       37,
}

func (x ContainerInfo_Capabilities_Capability) Enum() *ContainerInfo_Capabilities_Capability {
	p := new(ContainerInfo_Capabilities_Capability)
	*p = x
	return p
}
func (x ContainerInfo_Capabilities_Capability) String() string {
	return proto.EnumName(ContainerInfo_Capabilities_Capability_name, int32(x))
}
func (x *ContainerInfo_Capabilities_Capability) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContainerInfo_Capabilities_Capability_value, data, "ContainerInfo_Capabilities_Capability")
	if err != nil {
		return err
	}
	*x = ContainerInfo_Capabilities_Capability(value)
	return nil
}
func (ContainerInfo_Capabilities_Capability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 3, 0}
}

type TaskStatusData struct {
	Timestamp            *int64   `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskStatusData) Reset()         { *m = TaskStatusData{} }
func (m *TaskStatusData) String() string { return proto.CompactTextString(m) }
func (*TaskStatusData) ProtoMessage()    {}
func (*TaskStatusData) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{0}
}
func (m *TaskStatusData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatusData.Unmarshal(m, b)
}
func (m *TaskStatusData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatusData.Marshal(b, m, deterministic)
}
func (dst *TaskStatusData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatusData.Merge(dst, src)
}
func (m *TaskStatusData) XXX_Size() int {
	return xxx_messageInfo_TaskStatusData.Size(m)
}
func (m *TaskStatusData) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatusData.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatusData proto.InternalMessageInfo

func (m *TaskStatusData) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type StateUpdate struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	State                *string  `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Message              *string  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Timestamp            *string  `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateUpdate) Reset()         { *m = StateUpdate{} }
func (m *StateUpdate) String() string { return proto.CompactTextString(m) }
func (*StateUpdate) ProtoMessage()    {}
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{1}
}
func (m *StateUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateUpdate.Unmarshal(m, b)
}
func (m *StateUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateUpdate.Marshal(b, m, deterministic)
}
func (dst *StateUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateUpdate.Merge(dst, src)
}
func (m *StateUpdate) XXX_Size() int {
	return xxx_messageInfo_StateUpdate.Size(m)
}
func (m *StateUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_StateUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_StateUpdate proto.InternalMessageInfo

func (m *StateUpdate) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *StateUpdate) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *StateUpdate) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *StateUpdate) GetTimestamp() string {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return ""
}

type StateUpdates struct {
	StateUpdate          []*StateUpdate `protobuf:"bytes,1,rep,name=stateUpdate" json:"stateUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StateUpdates) Reset()         { *m = StateUpdates{} }
func (m *StateUpdates) String() string { return proto.CompactTextString(m) }
func (*StateUpdates) ProtoMessage()    {}
func (*StateUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{2}
}
func (m *StateUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateUpdates.Unmarshal(m, b)
}
func (m *StateUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateUpdates.Marshal(b, m, deterministic)
}
func (dst *StateUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateUpdates.Merge(dst, src)
}
func (m *StateUpdates) XXX_Size() int {
	return xxx_messageInfo_StateUpdates.Size(m)
}
func (m *StateUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_StateUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_StateUpdates proto.InternalMessageInfo

func (m *StateUpdates) GetStateUpdate() []*StateUpdate {
	if m != nil {
		return m.StateUpdate
	}
	return nil
}

type TaskInfo struct {
	ContainerId          *string                         `protobuf:"bytes,1,opt,name=containerId" json:"containerId,omitempty"`
	TaskId               *string                         `protobuf:"bytes,2,opt,name=taskId" json:"taskId,omitempty"`
	HostName             *string                         `protobuf:"bytes,3,opt,name=hostName" json:"hostName,omitempty"`
	SlaveId              *string                         `protobuf:"bytes,4,opt,name=slaveId" json:"slaveId,omitempty"`
	Status               *TaskInfo_Status                `protobuf:"varint,5,opt,name=status,enum=messages.TaskInfo_Status" json:"status,omitempty"`
	Message              *string                         `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	EnvironmentVariable  []*TaskInfo_EnvironmentVariable `protobuf:"bytes,7,rep,name=environmentVariable" json:"environmentVariable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{3}
}
func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo.Unmarshal(m, b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
}
func (dst *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(dst, src)
}
func (m *TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskInfo.Size(m)
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetContainerId() string {
	if m != nil && m.ContainerId != nil {
		return *m.ContainerId
	}
	return ""
}

func (m *TaskInfo) GetTaskId() string {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return ""
}

func (m *TaskInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *TaskInfo) GetSlaveId() string {
	if m != nil && m.SlaveId != nil {
		return *m.SlaveId
	}
	return ""
}

func (m *TaskInfo) GetStatus() TaskInfo_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return TaskInfo_RUNNING
}

func (m *TaskInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *TaskInfo) GetEnvironmentVariable() []*TaskInfo_EnvironmentVariable {
	if m != nil {
		return m.EnvironmentVariable
	}
	return nil
}

type TaskInfo_EnvironmentVariable struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo_EnvironmentVariable) Reset()         { *m = TaskInfo_EnvironmentVariable{} }
func (m *TaskInfo_EnvironmentVariable) String() string { return proto.CompactTextString(m) }
func (*TaskInfo_EnvironmentVariable) ProtoMessage()    {}
func (*TaskInfo_EnvironmentVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{3, 0}
}
func (m *TaskInfo_EnvironmentVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo_EnvironmentVariable.Unmarshal(m, b)
}
func (m *TaskInfo_EnvironmentVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo_EnvironmentVariable.Marshal(b, m, deterministic)
}
func (dst *TaskInfo_EnvironmentVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo_EnvironmentVariable.Merge(dst, src)
}
func (m *TaskInfo_EnvironmentVariable) XXX_Size() int {
	return xxx_messageInfo_TaskInfo_EnvironmentVariable.Size(m)
}
func (m *TaskInfo_EnvironmentVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo_EnvironmentVariable.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo_EnvironmentVariable proto.InternalMessageInfo

func (m *TaskInfo_EnvironmentVariable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TaskInfo_EnvironmentVariable) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Agent-only structure: stores container info for a currently running container
type RunningContainerInfo struct {
	// Container hostname (not necessarily the same as task ID)
	HostName *string `protobuf:"bytes,1,opt,name=hostName" json:"hostName,omitempty"`
	// Container task ID
	TaskId *string `protobuf:"bytes,2,opt,name=taskId" json:"taskId,omitempty"`
	// Container launch timestamp, in Unix epoch seconds
	LaunchTimeUnixSec    *uint64  `protobuf:"varint,3,opt,name=launchTimeUnixSec" json:"launchTimeUnixSec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunningContainerInfo) Reset()         { *m = RunningContainerInfo{} }
func (m *RunningContainerInfo) String() string { return proto.CompactTextString(m) }
func (*RunningContainerInfo) ProtoMessage()    {}
func (*RunningContainerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{4}
}
func (m *RunningContainerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunningContainerInfo.Unmarshal(m, b)
}
func (m *RunningContainerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunningContainerInfo.Marshal(b, m, deterministic)
}
func (dst *RunningContainerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunningContainerInfo.Merge(dst, src)
}
func (m *RunningContainerInfo) XXX_Size() int {
	return xxx_messageInfo_RunningContainerInfo.Size(m)
}
func (m *RunningContainerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RunningContainerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RunningContainerInfo proto.InternalMessageInfo

func (m *RunningContainerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *RunningContainerInfo) GetTaskId() string {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return ""
}

func (m *RunningContainerInfo) GetLaunchTimeUnixSec() uint64 {
	if m != nil && m.LaunchTimeUnixSec != nil {
		return *m.LaunchTimeUnixSec
	}
	return 0
}

type ContainerInfo struct {
	ImageName      *string `protobuf:"bytes,1,opt,name=imageName" json:"imageName,omitempty"`
	Command        *string `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	ContainerPorts *string `protobuf:"bytes,3,opt,name=containerPorts" json:"containerPorts,omitempty"` // Deprecated: Do not use.
	Version        *string `protobuf:"bytes,4,opt,name=version,def=latest" json:"version,omitempty"`
	// deprecated: use userProvidedEnv and titusProvidedEnv instead
	EnvironmentVariable []*ContainerInfo_EnvironmentVariable `protobuf:"bytes,5,rep,name=environmentVariable" json:"environmentVariable,omitempty"` // Deprecated: Do not use.
	JobId               *string                              `protobuf:"bytes,6,opt,name=jobId" json:"jobId,omitempty"`
	LogUploadRegexp     *string                              `protobuf:"bytes,7,opt,name=logUploadRegexp" json:"logUploadRegexp,omitempty"`
	MaxHealthFailures   *uint32                              `protobuf:"varint,8,opt,name=maxHealthFailures" json:"maxHealthFailures,omitempty"`                                       // Deprecated: Do not use.
	HealthCheckCmd      []string                             `protobuf:"bytes,9,rep,name=healthCheckCmd" json:"healthCheckCmd,omitempty"`                                              // Deprecated: Do not use.
	SnapshotPolicy      *ContainerInfo_SnapshotPolicy        `protobuf:"varint,10,opt,name=snapshotPolicy,enum=messages.ContainerInfo_SnapshotPolicy" json:"snapshotPolicy,omitempty"` // Deprecated: Do not use.
	// deprecated: Use process instead
	EntrypointCmd []string `protobuf:"bytes,11,rep,name=entrypointCmd" json:"entrypointCmd,omitempty"` // Deprecated: Do not use.
	// deprecated: Use process instead
	EntrypointStr     *string                          `protobuf:"bytes,13,opt,name=entrypointStr" json:"entrypointStr,omitempty"` // Deprecated: Do not use.
	AppName           *string                          `protobuf:"bytes,14,opt,name=appName" json:"appName,omitempty"`
	JobGroupStack     *string                          `protobuf:"bytes,15,opt,name=jobGroupStack" json:"jobGroupStack,omitempty"`
	JobGroupDetail    *string                          `protobuf:"bytes,16,opt,name=jobGroupDetail" json:"jobGroupDetail,omitempty"`
	IamProfile        *string                          `protobuf:"bytes,17,opt,name=iamProfile" json:"iamProfile,omitempty"`
	NetworkConfigInfo *ContainerInfo_NetworkConfigInfo `protobuf:"bytes,18,opt,name=networkConfigInfo" json:"networkConfigInfo,omitempty"`
	JobGroupSequence  *string                          `protobuf:"bytes,19,opt,name=jobGroupSequence" json:"jobGroupSequence,omitempty"`
	// TODO(Sargun): Remove, and use the Mesos resource info instead
	NumGpus          *uint32                        `protobuf:"varint,20,opt,name=numGpus" json:"numGpus,omitempty"`
	EfsConfigInfo    []*ContainerInfo_EfsConfigInfo `protobuf:"bytes,21,rep,name=efsConfigInfo" json:"efsConfigInfo,omitempty"`
	Capabilities     *ContainerInfo_Capabilities    `protobuf:"bytes,22,opt,name=capabilities" json:"capabilities,omitempty"`
	MetatronCreds    *ContainerInfo_MetatronCreds   `protobuf:"bytes,23,opt,name=metatronCreds" json:"metatronCreds,omitempty"`
	UserProvidedEnv  map[string]string              `protobuf:"bytes,24,rep,name=userProvidedEnv" json:"userProvidedEnv,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TitusProvidedEnv map[string]string              `protobuf:"bytes,25,rep,name=titusProvidedEnv" json:"titusProvidedEnv,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// imageDigest has precedence over version
	ImageDigest          *string `protobuf:"bytes,26,opt,name=imageDigest" json:"imageDigest,omitempty"`
	AllowNetworkBursting *bool   `protobuf:"varint,27,opt,name=allowNetworkBursting" json:"allowNetworkBursting,omitempty"`
	// Number of seconds to wait before killing the container
	// otherwise, it will use the dockerd default
	KillWaitSeconds *uint32 `protobuf:"varint,28,opt,name=killWaitSeconds" json:"killWaitSeconds,omitempty"`
	// If the engine that is using this agent supports the
	// killinitiated state, this should be set to true.
	// That way, when this container is killed, as well as
	// when it is launched, the launchguard will be ignored.
	IgnoreLaunchGuard *bool `protobuf:"varint,29,opt,name=ignoreLaunchGuard" json:"ignoreLaunchGuard,omitempty"`
	// Should we allow this container to run privileged enough
	// to run internal container runtimes?
	AllowNestedContainers *bool `protobuf:"varint,30,opt,name=allowNestedContainers" json:"allowNestedContainers,omitempty"`
	// The image name with the registry
	FullyQualifiedImage *string `protobuf:"bytes,31,opt,name=fullyQualifiedImage" json:"fullyQualifiedImage,omitempty"`
	// Should this container be allowed to excceed its CPU cap?
	AllowCpuBursting *bool `protobuf:"varint,32,opt,name=allowCpuBursting" json:"allowCpuBursting,omitempty"`
	// Should this be tagged sched_batch? Does it prefer bigger chunks
	// of CPU, less frequently?
	Batch          *bool                          `protobuf:"varint,33,opt,name=batch" json:"batch,omitempty"`
	S3LogLocations []*ContainerInfo_S3LogLocation `protobuf:"bytes,34,rep,name=s3LogLocations" json:"s3LogLocations,omitempty"`
	// This influences the value of oom_score_adj for the PID 1 (tini) of the container
	//
	// The value of /proc/<pid>/oom_score_adj is added to the badness score before it
	// is used to determine which task to kill.  Acceptable values range from -1000
	// (OOM_SCORE_ADJ_MIN) to +1000 (OOM_SCORE_ADJ_MAX).  This allows userspace to
	// polarize the preference for oom killing either by always preferring a certain
	// task or completely disabling it.  The lowest possible value, -1000, is
	// equivalent to disabling oom killing entirely for that task since it will always
	// report a badness score of 0.
	//
	// If this value is unset, it will be set to +1000 as default.
	OomScoreAdj *int32 `protobuf:"varint,35,opt,name=oomScoreAdj" json:"oomScoreAdj,omitempty"`
	// If omitted, Always is the default
	ImagePullPolicy *ContainerInfo_ImagePullPolicy `protobuf:"varint,36,opt,name=imagePullPolicy,enum=messages.ContainerInfo_ImagePullPolicy" json:"imagePullPolicy,omitempty"`
	// passthrough attributes are an arbitrary set of key / value pairs that are passed from API to executor
	PassthroughAttributes map[string]string `protobuf:"bytes,37,rep,name=passthroughAttributes" json:"passthroughAttributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Process to be executed inside the container
	Process *ContainerInfo_Process `protobuf:"bytes,38,opt,name=process" json:"process,omitempty"`
	// Used internally by the agent to store information about a running container
	RunState             *RunningContainerInfo `protobuf:"bytes,39,opt,name=runState" json:"runState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ContainerInfo) Reset()         { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()    {}
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5}
}
func (m *ContainerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo.Unmarshal(m, b)
}
func (m *ContainerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo.Merge(dst, src)
}
func (m *ContainerInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo.Size(m)
}
func (m *ContainerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo proto.InternalMessageInfo

const Default_ContainerInfo_Version string = "latest"

func (m *ContainerInfo) GetImageName() string {
	if m != nil && m.ImageName != nil {
		return *m.ImageName
	}
	return ""
}

func (m *ContainerInfo) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetContainerPorts() string {
	if m != nil && m.ContainerPorts != nil {
		return *m.ContainerPorts
	}
	return ""
}

func (m *ContainerInfo) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_ContainerInfo_Version
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetEnvironmentVariable() []*ContainerInfo_EnvironmentVariable {
	if m != nil {
		return m.EnvironmentVariable
	}
	return nil
}

func (m *ContainerInfo) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

func (m *ContainerInfo) GetLogUploadRegexp() string {
	if m != nil && m.LogUploadRegexp != nil {
		return *m.LogUploadRegexp
	}
	return ""
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetMaxHealthFailures() uint32 {
	if m != nil && m.MaxHealthFailures != nil {
		return *m.MaxHealthFailures
	}
	return 0
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetHealthCheckCmd() []string {
	if m != nil {
		return m.HealthCheckCmd
	}
	return nil
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetSnapshotPolicy() ContainerInfo_SnapshotPolicy {
	if m != nil && m.SnapshotPolicy != nil {
		return *m.SnapshotPolicy
	}
	return ContainerInfo_NEVER
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetEntrypointCmd() []string {
	if m != nil {
		return m.EntrypointCmd
	}
	return nil
}

// Deprecated: Do not use.
func (m *ContainerInfo) GetEntrypointStr() string {
	if m != nil && m.EntrypointStr != nil {
		return *m.EntrypointStr
	}
	return ""
}

func (m *ContainerInfo) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *ContainerInfo) GetJobGroupStack() string {
	if m != nil && m.JobGroupStack != nil {
		return *m.JobGroupStack
	}
	return ""
}

func (m *ContainerInfo) GetJobGroupDetail() string {
	if m != nil && m.JobGroupDetail != nil {
		return *m.JobGroupDetail
	}
	return ""
}

func (m *ContainerInfo) GetIamProfile() string {
	if m != nil && m.IamProfile != nil {
		return *m.IamProfile
	}
	return ""
}

func (m *ContainerInfo) GetNetworkConfigInfo() *ContainerInfo_NetworkConfigInfo {
	if m != nil {
		return m.NetworkConfigInfo
	}
	return nil
}

func (m *ContainerInfo) GetJobGroupSequence() string {
	if m != nil && m.JobGroupSequence != nil {
		return *m.JobGroupSequence
	}
	return ""
}

func (m *ContainerInfo) GetNumGpus() uint32 {
	if m != nil && m.NumGpus != nil {
		return *m.NumGpus
	}
	return 0
}

func (m *ContainerInfo) GetEfsConfigInfo() []*ContainerInfo_EfsConfigInfo {
	if m != nil {
		return m.EfsConfigInfo
	}
	return nil
}

func (m *ContainerInfo) GetCapabilities() *ContainerInfo_Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *ContainerInfo) GetMetatronCreds() *ContainerInfo_MetatronCreds {
	if m != nil {
		return m.MetatronCreds
	}
	return nil
}

func (m *ContainerInfo) GetUserProvidedEnv() map[string]string {
	if m != nil {
		return m.UserProvidedEnv
	}
	return nil
}

func (m *ContainerInfo) GetTitusProvidedEnv() map[string]string {
	if m != nil {
		return m.TitusProvidedEnv
	}
	return nil
}

func (m *ContainerInfo) GetImageDigest() string {
	if m != nil && m.ImageDigest != nil {
		return *m.ImageDigest
	}
	return ""
}

func (m *ContainerInfo) GetAllowNetworkBursting() bool {
	if m != nil && m.AllowNetworkBursting != nil {
		return *m.AllowNetworkBursting
	}
	return false
}

func (m *ContainerInfo) GetKillWaitSeconds() uint32 {
	if m != nil && m.KillWaitSeconds != nil {
		return *m.KillWaitSeconds
	}
	return 0
}

func (m *ContainerInfo) GetIgnoreLaunchGuard() bool {
	if m != nil && m.IgnoreLaunchGuard != nil {
		return *m.IgnoreLaunchGuard
	}
	return false
}

func (m *ContainerInfo) GetAllowNestedContainers() bool {
	if m != nil && m.AllowNestedContainers != nil {
		return *m.AllowNestedContainers
	}
	return false
}

func (m *ContainerInfo) GetFullyQualifiedImage() string {
	if m != nil && m.FullyQualifiedImage != nil {
		return *m.FullyQualifiedImage
	}
	return ""
}

func (m *ContainerInfo) GetAllowCpuBursting() bool {
	if m != nil && m.AllowCpuBursting != nil {
		return *m.AllowCpuBursting
	}
	return false
}

func (m *ContainerInfo) GetBatch() bool {
	if m != nil && m.Batch != nil {
		return *m.Batch
	}
	return false
}

func (m *ContainerInfo) GetS3LogLocations() []*ContainerInfo_S3LogLocation {
	if m != nil {
		return m.S3LogLocations
	}
	return nil
}

func (m *ContainerInfo) GetOomScoreAdj() int32 {
	if m != nil && m.OomScoreAdj != nil {
		return *m.OomScoreAdj
	}
	return 0
}

func (m *ContainerInfo) GetImagePullPolicy() ContainerInfo_ImagePullPolicy {
	if m != nil && m.ImagePullPolicy != nil {
		return *m.ImagePullPolicy
	}
	return ContainerInfo_Always
}

func (m *ContainerInfo) GetPassthroughAttributes() map[string]string {
	if m != nil {
		return m.PassthroughAttributes
	}
	return nil
}

func (m *ContainerInfo) GetProcess() *ContainerInfo_Process {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *ContainerInfo) GetRunState() *RunningContainerInfo {
	if m != nil {
		return m.RunState
	}
	return nil
}

// deprecated: use userProvidedEnv and titusProvidedEnv instead
type ContainerInfo_EnvironmentVariable struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo_EnvironmentVariable) Reset()         { *m = ContainerInfo_EnvironmentVariable{} }
func (m *ContainerInfo_EnvironmentVariable) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_EnvironmentVariable) ProtoMessage()    {}
func (*ContainerInfo_EnvironmentVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 0}
}
func (m *ContainerInfo_EnvironmentVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_EnvironmentVariable.Unmarshal(m, b)
}
func (m *ContainerInfo_EnvironmentVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_EnvironmentVariable.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_EnvironmentVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_EnvironmentVariable.Merge(dst, src)
}
func (m *ContainerInfo_EnvironmentVariable) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_EnvironmentVariable.Size(m)
}
func (m *ContainerInfo_EnvironmentVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_EnvironmentVariable.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_EnvironmentVariable proto.InternalMessageInfo

func (m *ContainerInfo_EnvironmentVariable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ContainerInfo_EnvironmentVariable) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type ContainerInfo_NetworkConfigInfo struct {
	// deprecated: use eniLabel instead
	EniLablel *string `protobuf:"bytes,1,req,name=eniLablel" json:"eniLablel,omitempty"` // Deprecated: Do not use.
	// this should be required, but it was added later (typo fix) and is optional for backwards compatibility
	EniLabel             *string  `protobuf:"bytes,5,opt,name=eniLabel" json:"eniLabel,omitempty"`
	SecurityGroups       []string `protobuf:"bytes,3,rep,name=securityGroups" json:"securityGroups,omitempty"`
	BandwidthLimitMbps   *uint32  `protobuf:"varint,4,opt,name=bandwidthLimitMbps" json:"bandwidthLimitMbps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo_NetworkConfigInfo) Reset()         { *m = ContainerInfo_NetworkConfigInfo{} }
func (m *ContainerInfo_NetworkConfigInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_NetworkConfigInfo) ProtoMessage()    {}
func (*ContainerInfo_NetworkConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 1}
}
func (m *ContainerInfo_NetworkConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_NetworkConfigInfo.Unmarshal(m, b)
}
func (m *ContainerInfo_NetworkConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_NetworkConfigInfo.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_NetworkConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_NetworkConfigInfo.Merge(dst, src)
}
func (m *ContainerInfo_NetworkConfigInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_NetworkConfigInfo.Size(m)
}
func (m *ContainerInfo_NetworkConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_NetworkConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_NetworkConfigInfo proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *ContainerInfo_NetworkConfigInfo) GetEniLablel() string {
	if m != nil && m.EniLablel != nil {
		return *m.EniLablel
	}
	return ""
}

func (m *ContainerInfo_NetworkConfigInfo) GetEniLabel() string {
	if m != nil && m.EniLabel != nil {
		return *m.EniLabel
	}
	return ""
}

func (m *ContainerInfo_NetworkConfigInfo) GetSecurityGroups() []string {
	if m != nil {
		return m.SecurityGroups
	}
	return nil
}

func (m *ContainerInfo_NetworkConfigInfo) GetBandwidthLimitMbps() uint32 {
	if m != nil && m.BandwidthLimitMbps != nil {
		return *m.BandwidthLimitMbps
	}
	return 0
}

type ContainerInfo_EfsConfigInfo struct {
	EfsFsId               *string                                 `protobuf:"bytes,1,req,name=efsFsId" json:"efsFsId,omitempty"`
	MountPoint            *string                                 `protobuf:"bytes,2,req,name=mountPoint" json:"mountPoint,omitempty"`
	MntPerms              *ContainerInfo_EfsConfigInfo_MountPerms `protobuf:"varint,3,opt,name=mntPerms,enum=messages.ContainerInfo_EfsConfigInfo_MountPerms" json:"mntPerms,omitempty"`
	EfsFsRelativeMntPoint *string                                 `protobuf:"bytes,4,opt,name=efsFsRelativeMntPoint" json:"efsFsRelativeMntPoint,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                `json:"-"`
	XXX_unrecognized      []byte                                  `json:"-"`
	XXX_sizecache         int32                                   `json:"-"`
}

func (m *ContainerInfo_EfsConfigInfo) Reset()         { *m = ContainerInfo_EfsConfigInfo{} }
func (m *ContainerInfo_EfsConfigInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_EfsConfigInfo) ProtoMessage()    {}
func (*ContainerInfo_EfsConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 2}
}
func (m *ContainerInfo_EfsConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_EfsConfigInfo.Unmarshal(m, b)
}
func (m *ContainerInfo_EfsConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_EfsConfigInfo.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_EfsConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_EfsConfigInfo.Merge(dst, src)
}
func (m *ContainerInfo_EfsConfigInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_EfsConfigInfo.Size(m)
}
func (m *ContainerInfo_EfsConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_EfsConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_EfsConfigInfo proto.InternalMessageInfo

func (m *ContainerInfo_EfsConfigInfo) GetEfsFsId() string {
	if m != nil && m.EfsFsId != nil {
		return *m.EfsFsId
	}
	return ""
}

func (m *ContainerInfo_EfsConfigInfo) GetMountPoint() string {
	if m != nil && m.MountPoint != nil {
		return *m.MountPoint
	}
	return ""
}

func (m *ContainerInfo_EfsConfigInfo) GetMntPerms() ContainerInfo_EfsConfigInfo_MountPerms {
	if m != nil && m.MntPerms != nil {
		return *m.MntPerms
	}
	return ContainerInfo_EfsConfigInfo_RW
}

func (m *ContainerInfo_EfsConfigInfo) GetEfsFsRelativeMntPoint() string {
	if m != nil && m.EfsFsRelativeMntPoint != nil {
		return *m.EfsFsRelativeMntPoint
	}
	return ""
}

type ContainerInfo_Capabilities struct {
	Add                  []ContainerInfo_Capabilities_Capability `protobuf:"varint,1,rep,name=add,enum=messages.ContainerInfo_Capabilities_Capability" json:"add,omitempty"`
	Drop                 []ContainerInfo_Capabilities_Capability `protobuf:"varint,2,rep,name=drop,enum=messages.ContainerInfo_Capabilities_Capability" json:"drop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ContainerInfo_Capabilities) Reset()         { *m = ContainerInfo_Capabilities{} }
func (m *ContainerInfo_Capabilities) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_Capabilities) ProtoMessage()    {}
func (*ContainerInfo_Capabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 3}
}
func (m *ContainerInfo_Capabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_Capabilities.Unmarshal(m, b)
}
func (m *ContainerInfo_Capabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_Capabilities.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_Capabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_Capabilities.Merge(dst, src)
}
func (m *ContainerInfo_Capabilities) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_Capabilities.Size(m)
}
func (m *ContainerInfo_Capabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_Capabilities.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_Capabilities proto.InternalMessageInfo

func (m *ContainerInfo_Capabilities) GetAdd() []ContainerInfo_Capabilities_Capability {
	if m != nil {
		return m.Add
	}
	return nil
}

func (m *ContainerInfo_Capabilities) GetDrop() []ContainerInfo_Capabilities_Capability {
	if m != nil {
		return m.Drop
	}
	return nil
}

type ContainerInfo_MetatronCreds struct {
	AppMetadata          *string  `protobuf:"bytes,1,req,name=appMetadata" json:"appMetadata,omitempty"`
	MetadataSig          *string  `protobuf:"bytes,2,req,name=metadataSig" json:"metadataSig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo_MetatronCreds) Reset()         { *m = ContainerInfo_MetatronCreds{} }
func (m *ContainerInfo_MetatronCreds) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_MetatronCreds) ProtoMessage()    {}
func (*ContainerInfo_MetatronCreds) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 4}
}
func (m *ContainerInfo_MetatronCreds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_MetatronCreds.Unmarshal(m, b)
}
func (m *ContainerInfo_MetatronCreds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_MetatronCreds.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_MetatronCreds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_MetatronCreds.Merge(dst, src)
}
func (m *ContainerInfo_MetatronCreds) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_MetatronCreds.Size(m)
}
func (m *ContainerInfo_MetatronCreds) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_MetatronCreds.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_MetatronCreds proto.InternalMessageInfo

func (m *ContainerInfo_MetatronCreds) GetAppMetadata() string {
	if m != nil && m.AppMetadata != nil {
		return *m.AppMetadata
	}
	return ""
}

func (m *ContainerInfo_MetatronCreds) GetMetadataSig() string {
	if m != nil && m.MetadataSig != nil {
		return *m.MetadataSig
	}
	return ""
}

// The s3 log location used when uploading logs
type ContainerInfo_S3LogLocation struct {
	Bucket               *string  `protobuf:"bytes,1,req,name=bucket" json:"bucket,omitempty"`
	Prefix               *string  `protobuf:"bytes,2,req,name=prefix" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo_S3LogLocation) Reset()         { *m = ContainerInfo_S3LogLocation{} }
func (m *ContainerInfo_S3LogLocation) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_S3LogLocation) ProtoMessage()    {}
func (*ContainerInfo_S3LogLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 7}
}
func (m *ContainerInfo_S3LogLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_S3LogLocation.Unmarshal(m, b)
}
func (m *ContainerInfo_S3LogLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_S3LogLocation.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_S3LogLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_S3LogLocation.Merge(dst, src)
}
func (m *ContainerInfo_S3LogLocation) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_S3LogLocation.Size(m)
}
func (m *ContainerInfo_S3LogLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_S3LogLocation.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_S3LogLocation proto.InternalMessageInfo

func (m *ContainerInfo_S3LogLocation) GetBucket() string {
	if m != nil && m.Bucket != nil {
		return *m.Bucket
	}
	return ""
}

func (m *ContainerInfo_S3LogLocation) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

// entrypoint and command follow Docker semantics, and can be used to override what is baked into the Docker image:
// https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact
//
// Both CMD and ENTRYPOINT baked into the image can be explicitly cleared with a single empty value (i.e.: `[""]`).
type ContainerInfo_Process struct {
	// when set, will override ENTRYPOINT baked into the image, and cause CMD from the image to be ignored
	Entrypoint []string `protobuf:"bytes,1,rep,name=entrypoint" json:"entrypoint,omitempty"`
	// when set, will override CMD baked into the image
	Command              []string `protobuf:"bytes,2,rep,name=command" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo_Process) Reset()         { *m = ContainerInfo_Process{} }
func (m *ContainerInfo_Process) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo_Process) ProtoMessage()    {}
func (*ContainerInfo_Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{5, 9}
}
func (m *ContainerInfo_Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo_Process.Unmarshal(m, b)
}
func (m *ContainerInfo_Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo_Process.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo_Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo_Process.Merge(dst, src)
}
func (m *ContainerInfo_Process) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo_Process.Size(m)
}
func (m *ContainerInfo_Process) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo_Process proto.InternalMessageInfo

func (m *ContainerInfo_Process) GetEntrypoint() []string {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *ContainerInfo_Process) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

// For the identity client to query the metadata server to confirm the
// currently running task's identity
type TaskIdentity struct {
	// (Required) Current state of the task
	Task *TaskInfo `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	// (Required) Container details, including:
	//  - app name, stack, detail
	//  - image name, digest, label
	//  - environment variables
	//  - command, entrypoint
	//  - metadata string and signature from caller
	Container *ContainerInfo `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"`
	// (Required) Timestamp, in Unix epoch seconds, when request was made.
	UnixTimestampSec *uint64 `protobuf:"varint,3,opt,name=unixTimestampSec" json:"unixTimestampSec,omitempty"`
	// (Required) IP address of container
	Ipv4Address          *string  `protobuf:"bytes,4,opt,name=ipv4Address" json:"ipv4Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskIdentity) Reset()         { *m = TaskIdentity{} }
func (m *TaskIdentity) String() string { return proto.CompactTextString(m) }
func (*TaskIdentity) ProtoMessage()    {}
func (*TaskIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{6}
}
func (m *TaskIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskIdentity.Unmarshal(m, b)
}
func (m *TaskIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskIdentity.Marshal(b, m, deterministic)
}
func (dst *TaskIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskIdentity.Merge(dst, src)
}
func (m *TaskIdentity) XXX_Size() int {
	return xxx_messageInfo_TaskIdentity.Size(m)
}
func (m *TaskIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_TaskIdentity proto.InternalMessageInfo

func (m *TaskIdentity) GetTask() *TaskInfo {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *TaskIdentity) GetContainer() *ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *TaskIdentity) GetUnixTimestampSec() uint64 {
	if m != nil && m.UnixTimestampSec != nil {
		return *m.UnixTimestampSec
	}
	return 0
}

func (m *TaskIdentity) GetIpv4Address() string {
	if m != nil && m.Ipv4Address != nil {
		return *m.Ipv4Address
	}
	return ""
}

type CertificateSignature struct {
	// (Required) Raw signature produced from signing input bytes using the
	// private key of the titus agent’s certificate.
	Signature []byte `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	// (Required) Signature algorithm used (e.g. SHA512withRSAandMGF1)
	Algorithm *SignatureAlgorithm `protobuf:"varint,2,opt,name=algorithm,enum=messages.SignatureAlgorithm" json:"algorithm,omitempty"`
	// (Required) The agent’s public certificate in DER form, followed by its trust chain.
	CertChain            [][]byte `protobuf:"bytes,3,rep,name=certChain" json:"certChain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateSignature) Reset()         { *m = CertificateSignature{} }
func (m *CertificateSignature) String() string { return proto.CompactTextString(m) }
func (*CertificateSignature) ProtoMessage()    {}
func (*CertificateSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{7}
}
func (m *CertificateSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateSignature.Unmarshal(m, b)
}
func (m *CertificateSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateSignature.Marshal(b, m, deterministic)
}
func (dst *CertificateSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateSignature.Merge(dst, src)
}
func (m *CertificateSignature) XXX_Size() int {
	return xxx_messageInfo_CertificateSignature.Size(m)
}
func (m *CertificateSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateSignature.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateSignature proto.InternalMessageInfo

func (m *CertificateSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CertificateSignature) GetAlgorithm() SignatureAlgorithm {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return SignatureAlgorithm_SHA256withRSAandMGF1
}

func (m *CertificateSignature) GetCertChain() [][]byte {
	if m != nil {
		return m.CertChain
	}
	return nil
}

// Version of CertificateSignature that encodes all byte[]s as human-readable strings
type CertificateStringSignature struct {
	// (Required) Base64 signature produced from signing input bytes using the
	// private key of the titus agent’s certificate.
	Signature *string `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	// (Required) Signature algorithm used (e.g. SHA512withRSAandMGF1)
	Algorithm *SignatureAlgorithm `protobuf:"varint,2,opt,name=algorithm,enum=messages.SignatureAlgorithm" json:"algorithm,omitempty"`
	// (Required) The agent’s public certificate in DER form, followed by its trust chain.
	CertChain            []string `protobuf:"bytes,3,rep,name=certChain" json:"certChain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateStringSignature) Reset()         { *m = CertificateStringSignature{} }
func (m *CertificateStringSignature) String() string { return proto.CompactTextString(m) }
func (*CertificateStringSignature) ProtoMessage()    {}
func (*CertificateStringSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{8}
}
func (m *CertificateStringSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateStringSignature.Unmarshal(m, b)
}
func (m *CertificateStringSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateStringSignature.Marshal(b, m, deterministic)
}
func (dst *CertificateStringSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateStringSignature.Merge(dst, src)
}
func (m *CertificateStringSignature) XXX_Size() int {
	return xxx_messageInfo_CertificateStringSignature.Size(m)
}
func (m *CertificateStringSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateStringSignature.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateStringSignature proto.InternalMessageInfo

func (m *CertificateStringSignature) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

func (m *CertificateStringSignature) GetAlgorithm() SignatureAlgorithm {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return SignatureAlgorithm_SHA256withRSAandMGF1
}

func (m *CertificateStringSignature) GetCertChain() []string {
	if m != nil {
		return m.CertChain
	}
	return nil
}

type TaskIdentityDocument struct {
	// (Required) Serialized form of a TaskIdentity protobuf.
	Identity []byte `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	// (Required) Signature produced by signing identity bytes.
	Signature            *CertificateSignature `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TaskIdentityDocument) Reset()         { *m = TaskIdentityDocument{} }
func (m *TaskIdentityDocument) String() string { return proto.CompactTextString(m) }
func (*TaskIdentityDocument) ProtoMessage()    {}
func (*TaskIdentityDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{9}
}
func (m *TaskIdentityDocument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskIdentityDocument.Unmarshal(m, b)
}
func (m *TaskIdentityDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskIdentityDocument.Marshal(b, m, deterministic)
}
func (dst *TaskIdentityDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskIdentityDocument.Merge(dst, src)
}
func (m *TaskIdentityDocument) XXX_Size() int {
	return xxx_messageInfo_TaskIdentityDocument.Size(m)
}
func (m *TaskIdentityDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskIdentityDocument.DiscardUnknown(m)
}

var xxx_messageInfo_TaskIdentityDocument proto.InternalMessageInfo

func (m *TaskIdentityDocument) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *TaskIdentityDocument) GetSignature() *CertificateSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Version of TaskIdentityDocument that encodes all byte[]s as human-readable strings
type TaskIdentityStringDocument struct {
	// (Required) Task Identity
	Identity *TaskIdentity `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	// (Required) Signature produced by signing identity bytes.
	Signature            *CertificateStringSignature `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TaskIdentityStringDocument) Reset()         { *m = TaskIdentityStringDocument{} }
func (m *TaskIdentityStringDocument) String() string { return proto.CompactTextString(m) }
func (*TaskIdentityStringDocument) ProtoMessage()    {}
func (*TaskIdentityStringDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_81771392750d828a, []int{10}
}
func (m *TaskIdentityStringDocument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskIdentityStringDocument.Unmarshal(m, b)
}
func (m *TaskIdentityStringDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskIdentityStringDocument.Marshal(b, m, deterministic)
}
func (dst *TaskIdentityStringDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskIdentityStringDocument.Merge(dst, src)
}
func (m *TaskIdentityStringDocument) XXX_Size() int {
	return xxx_messageInfo_TaskIdentityStringDocument.Size(m)
}
func (m *TaskIdentityStringDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskIdentityStringDocument.DiscardUnknown(m)
}

var xxx_messageInfo_TaskIdentityStringDocument proto.InternalMessageInfo

func (m *TaskIdentityStringDocument) GetIdentity() *TaskIdentity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *TaskIdentityStringDocument) GetSignature() *CertificateStringSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskStatusData)(nil), "messages.TaskStatusData")
	proto.RegisterType((*StateUpdate)(nil), "messages.StateUpdate")
	proto.RegisterType((*StateUpdates)(nil), "messages.StateUpdates")
	proto.RegisterType((*TaskInfo)(nil), "messages.TaskInfo")
	proto.RegisterType((*TaskInfo_EnvironmentVariable)(nil), "messages.TaskInfo.EnvironmentVariable")
	proto.RegisterType((*RunningContainerInfo)(nil), "messages.RunningContainerInfo")
	proto.RegisterType((*ContainerInfo)(nil), "messages.ContainerInfo")
	proto.RegisterMapType((map[string]string)(nil), "messages.ContainerInfo.PassthroughAttributesEntry")
	proto.RegisterMapType((map[string]string)(nil), "messages.ContainerInfo.TitusProvidedEnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "messages.ContainerInfo.UserProvidedEnvEntry")
	proto.RegisterType((*ContainerInfo_EnvironmentVariable)(nil), "messages.ContainerInfo.EnvironmentVariable")
	proto.RegisterType((*ContainerInfo_NetworkConfigInfo)(nil), "messages.ContainerInfo.NetworkConfigInfo")
	proto.RegisterType((*ContainerInfo_EfsConfigInfo)(nil), "messages.ContainerInfo.EfsConfigInfo")
	proto.RegisterType((*ContainerInfo_Capabilities)(nil), "messages.ContainerInfo.Capabilities")
	proto.RegisterType((*ContainerInfo_MetatronCreds)(nil), "messages.ContainerInfo.MetatronCreds")
	proto.RegisterType((*ContainerInfo_S3LogLocation)(nil), "messages.ContainerInfo.S3LogLocation")
	proto.RegisterType((*ContainerInfo_Process)(nil), "messages.ContainerInfo.Process")
	proto.RegisterType((*TaskIdentity)(nil), "messages.TaskIdentity")
	proto.RegisterType((*CertificateSignature)(nil), "messages.CertificateSignature")
	proto.RegisterType((*CertificateStringSignature)(nil), "messages.CertificateStringSignature")
	proto.RegisterType((*TaskIdentityDocument)(nil), "messages.TaskIdentityDocument")
	proto.RegisterType((*TaskIdentityStringDocument)(nil), "messages.TaskIdentityStringDocument")
	proto.RegisterEnum("messages.SignatureAlgorithm", SignatureAlgorithm_name, SignatureAlgorithm_value)
	proto.RegisterEnum("messages.TaskInfo_Status", TaskInfo_Status_name, TaskInfo_Status_value)
	proto.RegisterEnum("messages.ContainerInfo_SnapshotPolicy", ContainerInfo_SnapshotPolicy_name, ContainerInfo_SnapshotPolicy_value)
	proto.RegisterEnum("messages.ContainerInfo_ImagePullPolicy", ContainerInfo_ImagePullPolicy_name, ContainerInfo_ImagePullPolicy_value)
	proto.RegisterEnum("messages.ContainerInfo_EfsConfigInfo_MountPerms", ContainerInfo_EfsConfigInfo_MountPerms_name, ContainerInfo_EfsConfigInfo_MountPerms_value)
	proto.RegisterEnum("messages.ContainerInfo_Capabilities_Capability", ContainerInfo_Capabilities_Capability_name, ContainerInfo_Capabilities_Capability_value)
}

func init() { proto.RegisterFile("netflix/titus/agent.proto", fileDescriptor_agent_81771392750d828a) }

var fileDescriptor_agent_81771392750d828a = []byte{
	// 2279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0xdb, 0xc6,
	0xf5, 0x37, 0x48, 0x7d, 0x71, 0x29, 0x52, 0xab, 0x95, 0xe4, 0xc0, 0x8c, 0x63, 0x33, 0x8c, 0xec,
	0xe8, 0xef, 0x7f, 0x2a, 0xdb, 0x8c, 0xdd, 0xa6, 0x9e, 0xce, 0x64, 0x20, 0x10, 0x92, 0x30, 0xe6,
	0x57, 0x16, 0xa4, 0x15, 0xf5, 0x46, 0xb3, 0x22, 0x96, 0xe4, 0x5a, 0x20, 0xc0, 0x02, 0x0b, 0x59,
	0x7a, 0x81, 0x5e, 0xf6, 0xa2, 0xd3, 0x17, 0xe8, 0x65, 0x9f, 0xa1, 0x2f, 0xd1, 0xd7, 0xe8, 0x75,
	0x5f, 0xa0, 0xb3, 0x0b, 0x80, 0x04, 0xbf, 0x32, 0x49, 0x3b, 0xbd, 0x22, 0xce, 0xef, 0x9c, 0x3d,
	0xdf, 0x38, 0x7b, 0x40, 0xf0, 0xc8, 0xa5, 0xbc, 0xef, 0xb0, 0xbb, 0x97, 0x9c, 0xf1, 0x30, 0x78,
	0x49, 0x06, 0xd4, 0xe5, 0xc7, 0x63, 0xdf, 0xe3, 0x1e, 0xda, 0x1a, 0xd1, 0x20, 0x20, 0x03, 0x1a,
	0x54, 0x8e, 0x41, 0xb1, 0x43, 0x82, 0x1b, 0x8b, 0x13, 0x1e, 0x06, 0x35, 0xc2, 0x09, 0x7a, 0x0c,
	0x72, 0x9c, 0x8d, 0x68, 0xc0, 0xc9, 0x68, 0xac, 0x2a, 0xe5, 0xcc, 0x51, 0x16, 0x4f, 0x81, 0xca,
	0x0d, 0xc8, 0x0b, 0x59, 0xda, 0x1d, 0xdb, 0x84, 0x53, 0x54, 0x04, 0x19, 0x66, 0xab, 0x4a, 0x59,
	0x39, 0xca, 0xe1, 0x0c, 0xb3, 0xd1, 0x3e, 0x58, 0x0f, 0x04, 0x5b, 0xcd, 0x48, 0x28, 0x22, 0x90,
	0x0a, 0x36, 0x63, 0x83, 0x6a, 0x56, 0xe2, 0x09, 0x39, 0x6b, 0x6c, 0x4d, 0xf2, 0x52, 0xc6, 0xce,
	0xc0, 0x76, 0xca, 0x58, 0x80, 0x7e, 0x03, 0xf2, 0xc1, 0x94, 0x56, 0x95, 0x72, 0xf6, 0x28, 0x5f,
	0x3d, 0x38, 0x4e, 0x82, 0x39, 0x4e, 0x09, 0xe3, 0xb4, 0x64, 0xe5, 0xcf, 0x59, 0xb0, 0x25, 0xc2,
	0x34, 0xdd, 0xbe, 0x87, 0xca, 0x20, 0xdf, 0xf3, 0x5c, 0x4e, 0x98, 0x4b, 0x7d, 0x33, 0x71, 0x3e,
	0x0d, 0xa1, 0x87, 0x60, 0x83, 0x0b, 0x69, 0x3b, 0x0e, 0x23, 0xa6, 0x50, 0x09, 0x6c, 0x0d, 0xbd,
	0x80, 0x37, 0xc9, 0x28, 0x09, 0x64, 0x42, 0x8b, 0x18, 0x03, 0x87, 0xdc, 0x52, 0xd3, 0x8e, 0xe3,
	0x48, 0x48, 0xf4, 0x1a, 0x6c, 0x04, 0x32, 0xbd, 0xea, 0x7a, 0x59, 0x39, 0x2a, 0x56, 0x1f, 0x4d,
	0x1d, 0x4e, 0x7c, 0x3a, 0x8e, 0xf2, 0x8f, 0x63, 0xc1, 0x74, 0xc2, 0x36, 0x66, 0x13, 0xf6, 0x23,
	0xd8, 0xa3, 0xee, 0x2d, 0xf3, 0x3d, 0x77, 0x44, 0x5d, 0xfe, 0x81, 0xf8, 0x8c, 0x5c, 0x3b, 0x54,
	0xdd, 0x94, 0xa9, 0x78, 0xbe, 0x44, 0xb3, 0xb1, 0x28, 0x8d, 0x97, 0xa9, 0x28, 0x7d, 0x0f, 0xf6,
	0x96, 0xc8, 0x22, 0x04, 0xd6, 0x5c, 0x11, 0x6f, 0x94, 0x26, 0xf9, 0x2c, 0xaa, 0x7c, 0x4b, 0x9c,
	0x70, 0x52, 0x65, 0x49, 0x54, 0x8e, 0xc1, 0x46, 0x14, 0x06, 0xca, 0x83, 0x4d, 0xdc, 0x6d, 0x36,
	0xcd, 0xe6, 0x19, 0x7c, 0x80, 0x00, 0xd8, 0x38, 0xd5, 0xcc, 0xba, 0x51, 0x83, 0x8a, 0x60, 0x58,
	0x9d, 0x56, 0xbb, 0x6d, 0xd4, 0x60, 0xa6, 0x72, 0x07, 0xf6, 0x71, 0xe8, 0xba, 0xcc, 0x1d, 0xe8,
	0x93, 0xdc, 0x8b, 0xfa, 0xa4, 0xb3, 0xac, 0xcc, 0x65, 0x79, 0x55, 0x65, 0xbe, 0x01, 0xbb, 0x0e,
	0x09, 0xdd, 0xde, 0xb0, 0xc3, 0x46, 0xb4, 0xeb, 0xb2, 0x3b, 0x8b, 0xf6, 0x64, 0x89, 0xd6, 0xf0,
	0x22, 0xa3, 0xf2, 0xc7, 0x27, 0xa0, 0x30, 0x6b, 0xf3, 0x31, 0xc8, 0xb1, 0x11, 0x19, 0xd0, 0x94,
	0xd1, 0x29, 0x20, 0xca, 0xd1, 0xf3, 0x46, 0x23, 0xe2, 0x26, 0x66, 0x13, 0x12, 0xbd, 0x00, 0xc5,
	0x49, 0xe3, 0xb4, 0x3d, 0x9f, 0x07, 0x51, 0x5f, 0x9c, 0x64, 0x54, 0x05, 0xcf, 0x71, 0x50, 0x19,
	0x6c, 0xde, 0x52, 0x3f, 0x60, 0x9e, 0x1b, 0x75, 0xc8, 0xbb, 0x0d, 0x47, 0x74, 0x35, 0xc7, 0x09,
	0x8c, 0xc8, 0xf2, 0xe2, 0xae, 0xcb, 0xe2, 0xfe, 0xff, 0xb4, 0xb8, 0x33, 0xbe, 0x2f, 0xab, 0xb0,
	0xb4, 0xbf, 0x4c, 0x97, 0x28, 0xdd, 0x47, 0xef, 0xda, 0xb4, 0xe3, 0xbe, 0x8a, 0x08, 0x74, 0x04,
	0x76, 0x1c, 0x6f, 0xd0, 0x1d, 0x3b, 0x1e, 0xb1, 0x31, 0x1d, 0xd0, 0xbb, 0xb1, 0xba, 0x29, 0xf9,
	0xf3, 0x30, 0x7a, 0x05, 0x76, 0x47, 0xe4, 0xee, 0x9c, 0x12, 0x87, 0x0f, 0x4f, 0x09, 0x73, 0x42,
	0x9f, 0x06, 0xea, 0x56, 0x59, 0x39, 0x2a, 0x48, 0x9b, 0x8b, 0x4c, 0x91, 0xa2, 0xa1, 0x44, 0xf4,
	0x21, 0xed, 0xdd, 0xe8, 0x23, 0x5b, 0xcd, 0x95, 0xb3, 0x49, 0x8a, 0x66, 0x39, 0x08, 0x83, 0x62,
	0xe0, 0x92, 0x71, 0x30, 0xf4, 0x78, 0xdb, 0x73, 0x58, 0xef, 0x5e, 0x05, 0xf2, 0x95, 0x79, 0xbe,
	0x2a, 0x76, 0x6b, 0x46, 0x3a, 0xd2, 0x39, 0xab, 0x01, 0x1d, 0x81, 0x02, 0x75, 0xb9, 0x7f, 0x3f,
	0xf6, 0x98, 0xcb, 0x85, 0xf9, 0xfc, 0xc4, 0xfc, 0x2c, 0x63, 0x56, 0xd2, 0xe2, 0xbe, 0x5a, 0x98,
	0xd4, 0x72, 0x96, 0x21, 0x1a, 0x82, 0x8c, 0xc7, 0xb2, 0x59, 0x8a, 0x51, 0x43, 0xc4, 0x24, 0x3a,
	0x04, 0x85, 0x8f, 0xde, 0xf5, 0x99, 0xef, 0x85, 0x63, 0x8b, 0x93, 0xde, 0x8d, 0xba, 0x23, 0xf9,
	0xb3, 0x20, 0x7a, 0x0e, 0x8a, 0x09, 0x50, 0xa3, 0x9c, 0x30, 0x47, 0x85, 0x52, 0x6c, 0x0e, 0x45,
	0x4f, 0x00, 0x60, 0x64, 0xd4, 0xf6, 0xbd, 0x3e, 0x73, 0xa8, 0xba, 0x2b, 0x65, 0x52, 0x08, 0xba,
	0x00, 0xbb, 0x2e, 0xe5, 0x9f, 0x3c, 0xff, 0x46, 0xf7, 0xdc, 0x3e, 0x1b, 0x88, 0x9c, 0xa8, 0xa8,
	0xac, 0x1c, 0xe5, 0xab, 0xff, 0xb7, 0x2a, 0x65, 0xcd, 0xf9, 0x03, 0x78, 0x51, 0x07, 0x7a, 0x01,
	0xe0, 0xc4, 0x63, 0xfa, 0x87, 0x90, 0xba, 0x3d, 0xaa, 0xee, 0x49, 0xf3, 0x0b, 0xb8, 0x48, 0x86,
	0x1b, 0x8e, 0xce, 0xc6, 0x61, 0xa0, 0xee, 0x8b, 0x46, 0xc0, 0x09, 0x89, 0xde, 0x83, 0x02, 0xed,
	0x07, 0x29, 0xd7, 0x0e, 0x64, 0x27, 0x3f, 0x5b, 0xd9, 0xc9, 0x69, 0x61, 0x3c, 0x7b, 0x16, 0x9d,
	0x83, 0xed, 0x1e, 0x19, 0x93, 0x6b, 0xe6, 0x30, 0xce, 0x68, 0xa0, 0x3e, 0x94, 0x61, 0x1e, 0xae,
	0xd2, 0xa5, 0xa7, 0x64, 0xf1, 0xcc, 0x49, 0xe1, 0xd6, 0x88, 0x72, 0xc2, 0x7d, 0xcf, 0xd5, 0x7d,
	0x6a, 0x07, 0xea, 0x67, 0x52, 0xd5, 0x4a, 0xb7, 0x1a, 0x69, 0x61, 0x3c, 0x7b, 0x16, 0x7d, 0x00,
	0x3b, 0x61, 0x40, 0xfd, 0xb6, 0xef, 0xdd, 0x32, 0x9b, 0xda, 0x86, 0x7b, 0xab, 0xaa, 0x32, 0xca,
	0x6f, 0x56, 0xa9, 0xeb, 0xce, 0x8a, 0x1b, 0xa2, 0xb3, 0xf0, 0xbc, 0x12, 0x74, 0x09, 0xa0, 0xbc,
	0xb7, 0xd3, 0x8a, 0x1f, 0x49, 0xc5, 0xbf, 0x5a, 0xa5, 0xb8, 0x33, 0x27, 0x1f, 0x69, 0x5e, 0x50,
	0x23, 0x2e, 0x40, 0x39, 0xdb, 0x6a, 0x6c, 0x40, 0x03, 0xae, 0x96, 0xa2, 0x0b, 0x30, 0x05, 0xa1,
	0x2a, 0xd8, 0x27, 0x8e, 0xe3, 0x7d, 0x8a, 0x7b, 0xe5, 0x24, 0xf4, 0x03, 0xce, 0xdc, 0x81, 0xfa,
	0x79, 0x59, 0x39, 0xda, 0xc2, 0x4b, 0x79, 0x62, 0x86, 0xdc, 0x30, 0xc7, 0xb9, 0x20, 0x8c, 0x5b,
	0xb4, 0xe7, 0xb9, 0x76, 0xa0, 0x3e, 0x96, 0xed, 0x30, 0x0f, 0x8b, 0x61, 0xcd, 0x06, 0xae, 0xe7,
	0xd3, 0xba, 0x9c, 0xcc, 0x67, 0x21, 0xf1, 0x6d, 0xf5, 0x0b, 0xa9, 0x7a, 0x91, 0x81, 0xde, 0x80,
	0x83, 0xd8, 0x5e, 0xc0, 0xa9, 0x3d, 0x89, 0x38, 0x50, 0x9f, 0xc8, 0x13, 0xcb, 0x99, 0xe8, 0x15,
	0xd8, 0xeb, 0x87, 0x8e, 0x73, 0xff, 0x43, 0x48, 0x1c, 0xd6, 0x67, 0xd4, 0x36, 0x45, 0x78, 0xea,
	0x53, 0x19, 0xeb, 0x32, 0x96, 0x68, 0x79, 0xa9, 0x4a, 0x1f, 0x87, 0x93, 0x78, 0xcb, 0xd2, 0xc4,
	0x02, 0x2e, 0xa6, 0xe8, 0x35, 0xe1, 0xbd, 0xa1, 0xfa, 0xa5, 0x14, 0x88, 0x08, 0xd4, 0x00, 0xc5,
	0xe0, 0xdb, 0xba, 0x37, 0xa8, 0x7b, 0x3d, 0xc2, 0x99, 0xe7, 0x06, 0x6a, 0xe5, 0xa7, 0xfb, 0xdd,
	0x4a, 0x4b, 0xe3, 0xb9, 0xc3, 0xa2, 0x4c, 0x9e, 0x37, 0xb2, 0x7a, 0x9e, 0x4f, 0x35, 0xfb, 0xa3,
	0xfa, 0x55, 0x59, 0x39, 0x5a, 0xc7, 0x69, 0x08, 0xfd, 0x00, 0x76, 0x64, 0xd5, 0xda, 0xa1, 0xe3,
	0xc4, 0xf3, 0xf2, 0x50, 0xce, 0xcb, 0xaf, 0x57, 0x59, 0x34, 0x67, 0xc5, 0xf1, 0xfc, 0x79, 0x34,
	0x04, 0x07, 0x63, 0x12, 0x04, 0x7c, 0xe8, 0x7b, 0xe1, 0x60, 0xa8, 0x71, 0xee, 0xb3, 0xeb, 0x90,
	0xd3, 0x40, 0x7d, 0x26, 0x43, 0xa9, 0xae, 0x52, 0xdc, 0x5e, 0x76, 0x28, 0x6a, 0xc0, 0xe5, 0x0a,
	0xd1, 0x6f, 0xc1, 0xe6, 0xd8, 0xf7, 0x7a, 0x34, 0x08, 0xd4, 0xe7, 0xf2, 0xfd, 0x7b, 0xba, 0x52,
	0x77, 0x24, 0x86, 0x13, 0x79, 0xf4, 0x0e, 0x6c, 0xf9, 0xa1, 0x2b, 0xb7, 0x3d, 0xf5, 0x6b, 0x79,
	0xf6, 0xc9, 0xf4, 0xec, 0xb2, 0x9d, 0x02, 0x4f, 0xe4, 0xff, 0xeb, 0x35, 0xa7, 0xf4, 0x37, 0x05,
	0xec, 0x2e, 0xcc, 0x50, 0x54, 0x06, 0x39, 0xea, 0xb2, 0xba, 0xd0, 0xe5, 0xc8, 0xad, 0x39, 0xba,
	0x37, 0xa6, 0xa0, 0x58, 0x6b, 0x22, 0x82, 0x3a, 0x72, 0x11, 0xcc, 0xe1, 0x09, 0x2d, 0xee, 0x83,
	0x80, 0xf6, 0x42, 0x9f, 0xf1, 0x7b, 0x39, 0x5b, 0xc5, 0x1a, 0x91, 0x15, 0xf7, 0xc1, 0x2c, 0x8a,
	0x8e, 0x01, 0xba, 0x26, 0xae, 0xfd, 0x89, 0xd9, 0x7c, 0x58, 0x67, 0x23, 0xc6, 0x1b, 0xd7, 0xe3,
	0x40, 0x6e, 0x13, 0x05, 0xbc, 0x84, 0x53, 0xfa, 0x97, 0x02, 0x0a, 0x33, 0x43, 0x55, 0x0c, 0x6b,
	0xda, 0x0f, 0x4e, 0x03, 0xb9, 0xf8, 0x66, 0xc4, 0xcd, 0x15, 0x93, 0xe2, 0xae, 0x19, 0x79, 0xa1,
	0xcb, 0xdb, 0xe2, 0x92, 0x53, 0x33, 0x92, 0x99, 0x42, 0x50, 0x1d, 0x6c, 0x8d, 0x5c, 0xde, 0xa6,
	0xfe, 0x28, 0x5a, 0x72, 0x8a, 0xd5, 0x57, 0x3f, 0x6b, 0x8e, 0x1f, 0x37, 0xa4, 0x0e, 0x71, 0x0e,
	0x4f, 0x34, 0x88, 0xb7, 0x5a, 0x1a, 0xc6, 0xd4, 0x21, 0x9c, 0xdd, 0xd2, 0x46, 0x62, 0x38, 0x5a,
	0x9e, 0x97, 0x33, 0x2b, 0x87, 0x00, 0x4c, 0xb5, 0xa1, 0x0d, 0x90, 0xc1, 0x17, 0x50, 0x91, 0xbf,
	0x2d, 0x98, 0x11, 0xbf, 0x17, 0x2d, 0x98, 0x2d, 0xfd, 0x73, 0x1d, 0x6c, 0xa7, 0xc7, 0x3f, 0xd2,
	0x40, 0x96, 0xd8, 0xb6, 0xfc, 0x5e, 0x28, 0x56, 0x5f, 0xfe, 0x9c, 0x1b, 0x63, 0x4a, 0xdc, 0x63,
	0x71, 0x16, 0xe9, 0x60, 0xcd, 0xf6, 0xbd, 0xb1, 0x9a, 0xf9, 0xcf, 0x74, 0xc8, 0xc3, 0x95, 0x7f,
	0xac, 0x01, 0x30, 0x05, 0x51, 0x0e, 0xac, 0xeb, 0xe7, 0xad, 0x8b, 0x26, 0x7c, 0x80, 0x20, 0xd8,
	0xae, 0x69, 0xfa, 0x55, 0xeb, 0x83, 0x81, 0xb1, 0x59, 0x33, 0xa0, 0x82, 0xf6, 0xc0, 0x8e, 0x40,
	0xb0, 0xa1, 0xd5, 0xae, 0x2c, 0x43, 0xc3, 0xfa, 0x39, 0xcc, 0xc8, 0x5d, 0xba, 0x75, 0xd1, 0x34,
	0x30, 0xcc, 0xca, 0x67, 0xcb, 0xe8, 0x98, 0x35, 0xb8, 0x86, 0xb6, 0xc0, 0xda, 0x7b, 0xb3, 0x5e,
	0x87, 0xeb, 0x02, 0xb5, 0x8c, 0xce, 0x99, 0x59, 0x83, 0x1b, 0xf1, 0x73, 0xd7, 0xac, 0xc1, 0x4d,
	0xb9, 0x79, 0x1b, 0x9d, 0xb6, 0xae, 0xb5, 0xe1, 0x96, 0xd0, 0x5d, 0x37, 0x9b, 0xdd, 0x1f, 0xaf,
	0xcc, 0x46, 0xa3, 0xdb, 0xd1, 0x4e, 0xea, 0x06, 0xcc, 0xa1, 0x7d, 0x00, 0x9b, 0x46, 0xe7, 0xea,
	0xc4, 0x6c, 0x0a, 0x83, 0xf8, 0x83, 0xa9, 0x1b, 0x10, 0xa0, 0x5d, 0x50, 0x90, 0x28, 0x6e, 0x69,
	0x35, 0x5d, 0xb3, 0x3a, 0x30, 0x8f, 0x0a, 0x20, 0x27, 0x20, 0xad, 0xd6, 0x30, 0x9b, 0x70, 0x5b,
	0x68, 0x16, 0x24, 0xd6, 0x2e, 0x60, 0x01, 0x6d, 0x83, 0x2d, 0xb3, 0xad, 0x5f, 0xd5, 0x5b, 0xfa,
	0x7b, 0x58, 0x14, 0x92, 0x82, 0x8a, 0x3c, 0xde, 0x41, 0x45, 0x00, 0xac, 0x4b, 0xeb, 0xaa, 0xd1,
	0xaa, 0x75, 0xeb, 0x06, 0x84, 0x82, 0x2d, 0x68, 0xac, 0x5d, 0x98, 0x2d, 0xb8, 0x9b, 0xb0, 0xf5,
	0x73, 0xdc, 0x6a, 0x75, 0x20, 0x4a, 0xe8, 0x76, 0x07, 0x6b, 0xba, 0x01, 0xf7, 0x12, 0xf1, 0xb6,
	0xa6, 0xeb, 0x1d, 0xb8, 0x9f, 0x90, 0x91, 0x1b, 0x07, 0xc2, 0xb2, 0x20, 0x4f, 0xc4, 0xd9, 0x87,
	0x09, 0xd5, 0x14, 0x41, 0x7c, 0x26, 0xb2, 0x2b, 0x0d, 0x19, 0x56, 0xab, 0x8b, 0x75, 0x03, 0xaa,
	0x09, 0xbf, 0x63, 0x36, 0x0c, 0xf8, 0x08, 0x21, 0x50, 0x94, 0x54, 0xe7, 0xf2, 0x4a, 0x6f, 0x35,
	0x4f, 0xcd, 0x33, 0x58, 0x12, 0xc5, 0x69, 0xbc, 0x6f, 0xb6, 0x6a, 0xf0, 0x73, 0xf1, 0x58, 0x37,
	0x34, 0xcb, 0x80, 0x8f, 0xd1, 0x0e, 0xc8, 0x6b, 0xdd, 0x9a, 0xd9, 0xb9, 0xba, 0xc0, 0x66, 0xc7,
	0x80, 0x5f, 0x88, 0xfc, 0x44, 0x80, 0xde, 0x6a, 0x76, 0x70, 0xab, 0x0e, 0x9f, 0xc4, 0xa9, 0x3e,
	0x15, 0xa9, 0x7e, 0x2a, 0x4c, 0x37, 0xd2, 0x85, 0x2d, 0x0b, 0xbf, 0x05, 0x12, 0xf9, 0xfd, 0xa5,
	0x2c, 0xd2, 0xa5, 0x55, 0x6f, 0x9d, 0xc1, 0x8a, 0x88, 0xf8, 0x42, 0x7b, 0x6f, 0x5c, 0x69, 0x75,
	0x0d, 0x37, 0xe0, 0x57, 0x42, 0xf9, 0x89, 0x48, 0xe5, 0x95, 0xd5, 0xb5, 0xda, 0x46, 0xb3, 0x06,
	0x0f, 0x85, 0x48, 0x64, 0x4f, 0x34, 0x06, 0x7c, 0x56, 0xb2, 0x40, 0x61, 0x66, 0x3d, 0x11, 0xb7,
	0x06, 0x19, 0x8f, 0x05, 0x66, 0x13, 0x4e, 0xe2, 0x97, 0x3c, 0x0d, 0x09, 0x89, 0x51, 0xfc, 0x6c,
	0xb1, 0x41, 0xfc, 0xa6, 0xa7, 0xa1, 0xd2, 0x09, 0xd8, 0x5f, 0xb6, 0xa4, 0x20, 0x08, 0xb2, 0x37,
	0xf4, 0x3e, 0x9e, 0x91, 0xe2, 0x71, 0xf9, 0x88, 0x7c, 0x97, 0xf9, 0x4e, 0x29, 0xe9, 0xe0, 0x60,
	0xe9, 0x3e, 0xf2, 0x8b, 0x94, 0x7c, 0x0f, 0x0a, 0x33, 0x77, 0xa4, 0xf8, 0xfe, 0xbb, 0x0e, 0x7b,
	0x37, 0x94, 0xc7, 0x81, 0xc5, 0x94, 0xc0, 0xc7, 0x3e, 0xed, 0xb3, 0xbb, 0x38, 0x9c, 0x98, 0x2a,
	0x9d, 0x83, 0xd2, 0xea, 0x9b, 0xe9, 0x17, 0xc6, 0xb3, 0x19, 0xdf, 0x43, 0x62, 0x52, 0x4e, 0x3f,
	0x07, 0xe4, 0x54, 0xc9, 0xe1, 0x14, 0x32, 0xfb, 0xb9, 0x98, 0x4d, 0x7d, 0x2e, 0x56, 0x4c, 0x50,
	0x9c, 0xfd, 0x62, 0x11, 0xbd, 0xd5, 0x34, 0x3e, 0x18, 0x18, 0x3e, 0x10, 0xa5, 0x35, 0x30, 0x6e,
	0xe1, 0xab, 0x56, 0xb3, 0x7e, 0x09, 0x15, 0xd9, 0xb5, 0x5d, 0x5d, 0x37, 0x2c, 0x2b, 0x42, 0xe4,
	0xeb, 0xaf, 0xd5, 0x2f, 0xb4, 0x4b, 0x0b, 0x66, 0x2b, 0x3a, 0xd8, 0x99, 0xbb, 0xcc, 0x25, 0xdb,
	0xf9, 0x44, 0xee, 0x83, 0x68, 0xa0, 0x98, 0xfd, 0xa6, 0xc7, 0xdb, 0x3e, 0x0d, 0xa8, 0xcb, 0xa1,
	0x22, 0x9a, 0xdc, 0xec, 0xcb, 0xeb, 0x26, 0xc1, 0x32, 0x95, 0xbf, 0x2b, 0x60, 0x5b, 0xfe, 0x53,
	0x60, 0x53, 0x97, 0x8b, 0x91, 0xf4, 0x1c, 0xac, 0x89, 0x2f, 0x6a, 0x99, 0x92, 0x7c, 0x15, 0x2d,
	0xfe, 0x9f, 0x80, 0x25, 0x1f, 0xbd, 0x05, 0xb9, 0xc9, 0xd7, 0xad, 0xcc, 0x55, 0xbe, 0xfa, 0xd9,
	0x8a, 0x99, 0x88, 0xa7, 0x92, 0x62, 0xc7, 0x0a, 0x5d, 0x76, 0xd7, 0x49, 0xfe, 0xe1, 0x99, 0x7e,
	0xa5, 0x2f, 0xe0, 0x72, 0x4b, 0x1d, 0xdf, 0xbe, 0xd1, 0x6c, 0xdb, 0x17, 0x3b, 0xc2, 0x5a, 0xbc,
	0xa5, 0x4e, 0xa1, 0xca, 0x9f, 0x14, 0xb0, 0xaf, 0x53, 0x9f, 0xb3, 0x3e, 0xeb, 0x11, 0x4e, 0x2d,
	0x36, 0x70, 0x09, 0x0f, 0x7d, 0xf9, 0xaf, 0x52, 0x90, 0x10, 0x32, 0x94, 0x6d, 0x3c, 0x05, 0xd0,
	0x3b, 0x90, 0x23, 0xce, 0xc0, 0xf3, 0x19, 0x1f, 0x8e, 0xa4, 0xef, 0xc5, 0xea, 0xe3, 0xd4, 0x7f,
	0x48, 0x89, 0x9c, 0x96, 0xc8, 0xe0, 0xa9, 0xb8, 0xd0, 0xdc, 0xa3, 0x3e, 0xd7, 0x87, 0x84, 0xb9,
	0xf2, 0x8e, 0xde, 0xc6, 0x53, 0xa0, 0xf2, 0x17, 0x05, 0x94, 0xd2, 0x0e, 0x71, 0x9f, 0xb9, 0x83,
	0x9f, 0x70, 0x2b, 0xf7, 0x3f, 0x73, 0x2b, 0x97, 0x76, 0x6b, 0x0c, 0xf6, 0xd3, 0x45, 0xae, 0x79,
	0xbd, 0x50, 0xec, 0x3e, 0x62, 0x23, 0x61, 0x31, 0x16, 0x67, 0x69, 0x42, 0xa3, 0xdf, 0xa5, 0x7d,
	0xcd, 0xcc, 0xef, 0x58, 0xcb, 0xb2, 0x9e, 0x8a, 0x45, 0x26, 0x22, 0x6d, 0x32, 0xca, 0xc4, 0xc4,
	0x70, 0x75, 0xce, 0x70, 0xbe, 0xfa, 0x70, 0xae, 0xd3, 0x62, 0x6e, 0xca, 0xa1, 0x93, 0x45, 0x87,
	0x0e, 0x97, 0x3b, 0x34, 0x9b, 0xf5, 0x94, 0x5b, 0x2f, 0xfe, 0xaa, 0x00, 0xb4, 0x98, 0x48, 0xa4,
	0x82, 0x7d, 0xeb, 0x5c, 0xab, 0xbe, 0xfd, 0xf5, 0x27, 0xc6, 0x87, 0xd8, 0xd2, 0x88, 0x6b, 0x37,
	0xce, 0x4e, 0x5f, 0xc3, 0x07, 0x31, 0xe7, 0xdb, 0xef, 0xde, 0xcc, 0x71, 0x94, 0x98, 0xf3, 0xf6,
	0x75, 0x75, 0x8e, 0x93, 0x11, 0x97, 0xeb, 0x54, 0x9b, 0xa1, 0xd7, 0x2c, 0x0d, 0x66, 0x63, 0x30,
	0x56, 0x14, 0x81, 0x6b, 0x31, 0x18, 0xeb, 0x88, 0xc0, 0xf5, 0x93, 0x57, 0xa0, 0xc4, 0xbc, 0x63,
	0xce, 0x38, 0x71, 0xfb, 0x3e, 0x19, 0x51, 0xb1, 0x67, 0x4e, 0xe2, 0x3c, 0xc9, 0x77, 0x04, 0xa3,
	0xed, 0x7b, 0xdc, 0x0b, 0x7e, 0xbf, 0x2e, 0xbf, 0xec, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd3,
	0x61, 0x5b, 0x37, 0xe8, 0x15, 0x00, 0x00,
}
